include ../../../mixins/docs.jade
//- Creates tab button. first is by default 'active'
//- +doc_example_tab_items("states_root", {
//-   "cli":     "cli", 
//-   "package": "package.json"
//- })

//- Create tab content item
//- locals.getContentStaeTemplate("states_root.cli") gets state template generated by doc_example_tab_items
//- div(class!=locals.getContentStaeTemplate("states_root.cli")): pre: code.language-bash.
//-   npm install infrastructure
  
//- div(class!=locals.getContentStaeTemplate("states_root.package")): pre: code.language-javascript.
//-   "dependencies": {
//-     "infrastructure": "^1.0.0"
//-   }


.page-header: h1 Configuration
.page-header: h2 Let's expand our configuration

p 
  | We passed the configuration object. 
  | But 
  mark infrastructure
  |  will try to find some files or folders in project root folder and will extend passed config.
  | Possible variants are:

+doc_example_tab_items("configuration_1", {
  "app_js":          "app.js",
  "config_json":     "config.json", 
  "config_js":       "config.js",
  "config_yml":      "config.yml",
  "config_folder":   "config folder",
})
div.code-block.large(class!=locals.getContentStaeTemplate("configuration_1.app_js")): pre: code.language-javascript.
  var infrastructure = require("infrastructure");
  infrastructure({ /* Write config here */ }, function(err, env) {
    if (err) { throw err; }
  });
div.code-block.large(class!=locals.getContentStaeTemplate("configuration_1.config_json")): pre: code.language-javascript.
  {
    "structures": {
      "log": {
        "engines": [ "log"],
        "options": { "sys": true, "debug": true }
      }
    }
  }
div.code-block.large(class!=locals.getContentStaeTemplate("configuration_1.config_js")): pre: code.language-javascript.
  module.exports = {
    structures: {
      log: {
        engines: [ "log"],
        options: { sys: true, debug: true }
      }
    }
  };
div.code-block.large(class!=locals.getContentStaeTemplate("configuration_1.config_yml")): pre: code.language-yaml.
  ---
    structures: 
      log: 
        engines: 
          - "log"
        options: 
          sys: true
          debug: true
div.code-block.large(class!=locals.getContentStaeTemplate("configuration_1.config_folder")): pre: code.language-javascript.
  //TODO - create fs block here

include ../../../mixins/docs.jade
//- Creates tab button. first is by default 'active'
//- +doc_example_tab_items("states_root", {
//-   "cli":     "cli", 
//-   "package": "package.json"
//- })

//- Create tab content item
//- locals.getContentStateTemplate("states_root.cli") gets state template generated by doc_example_tab_items
//- div(class!=locals.getContentStateTemplate("states_root.cli")): pre: code.language-bash.
//-   npm install infrastructure
  
//- div(class!=locals.getContentStateTemplate("states_root.package")): pre: code.language-javascript.
//-   "dependencies": {
//-     "infrastructure": "^1.0.0"
//-   }


.page-header: h1 Setup

.page-header: h2 Installation

+doc_example_tab_items("setup_1", {
  "cli":                 "command line", 
  "package":             "package.json"
})

div.code-block.medium(class!=locals.getContentStateTemplate("setup_1.cli")):     pre: code.language-bash.
  $> npm install infrastructure
  
div.code-block.medium(class!=locals.getContentStateTemplate("setup_1.package")): pre: code.language-javascript.
  {
    "dependencies": {
      "infrastructure": "^1.0.0"
    }  
  }

p

.page-header: h2 Running

p 
  | Create 
  mark app.js
  |  in project folder with following content, then run it. It should exit immediately without any messages, because there are no active workers.

+doc_example_tab_items("setup_2", {
  "app_js":                 "app.js",
  "cli":                    "command line"
})
div.code-block.medium(class!=locals.getContentStateTemplate("setup_2.app_js")): pre: code.language-javascript.
  var infrastructure = require("infrastructure");
  infrastructure({ /* configuration goes here */ }, function(err, env){
    if(err){
      throw err;
    }
  });
div.code-block.medium(class!=locals.getContentStateTemplate("setup_2.cli")):     pre: code.language-bash.
  $> node app.js
  $>
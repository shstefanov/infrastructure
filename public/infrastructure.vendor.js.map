{"version":3,"sources":["webpack:///webpack/bootstrap d28d41d75cfbea49ac8e","webpack:///./~/underscore/underscore.js","webpack:///./~/backbone/backbone.js","webpack:///./~/ractive/ractive.runtime.js"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjHA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAAyB,gBAAgB;AACzC;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,YAAY;AAClD;AACA;AACA,MAAK;AACL;AACA,wCAAuC,YAAY;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAoD;AACpD,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,2CAA0C;AAC1C,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6DAA4D,YAAY;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,YAAY;AAC1D;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA8C,YAAY;AAC1D;AACA;AACA,sBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA6C,YAAY;AACzD;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,0BAA0B;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAqB,cAAc;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO,eAAe;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAqB,eAAe;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA,0BAAyB,gBAAgB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAAyC,YAAY;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAAyC,YAAY;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,6CAA4C,mBAAmB;AAC/D;AACA;AACA,0CAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAqD;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf,eAAc;AACd,eAAc;AACd,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP,sBAAqB;AACrB;;AAEA;AACA;AACA,MAAK;AACL,kBAAiB;;AAEjB;AACA,mDAAkD,EAAE,iBAAiB;;AAErE;AACA,yBAAwB,8BAA8B;AACtD,4BAA2B;;AAE3B;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mDAAkD,iBAAiB;;AAEnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;;;;;;;;AC3gDD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,IAAG;AACH;AACA,UAAS,6JAAuB,EAAE;AAClC;;AAEA;AACA,IAAG;AACH,qCAAoC;AACpC;;AAEA,EAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAwC,+BAA+B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA,qEAAoE,MAAM;AAC1E;AACA;AACA;AACA,uDAAsD,4BAA4B;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA,yCAAwC,mBAAmB,EAAE;AAC7D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA,iCAAgC,mBAAmB;AACnD;AACA;AACA,MAAK;AACL;AACA,8CAA6C,kBAAkB;AAC/D;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAoD;AACpD;AACA;AACA;AACA,MAAK;;AAEL;AACA,6DAA4D;AAC5D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAkE;AAClE;;AAEA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAqB,gFAAgF;AACrG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oBAAmB,gBAAgB;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAU,kBAAkB;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA8B,YAAY;AAC1C,uCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA,+BAA8B,YAAY;AAC1C,uCAAsC;AACtC;AACA;;AAEA,kDAAiD,mBAAmB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,YAAY;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAqE;AACrE,0EAAyE;AACzE,8EAA6E;AAC7E,kFAAiF;AACjF,8EAA6E;AAC7E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6BAA4B;;AAE5B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA,2CAA0C,WAAW;AACrD;AACA;AACA;AACA;AACA,QAAO;AACP,oBAAmB;AACnB;;AAEA,+BAA8B;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,oBAAoB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gDAA+C,YAAY,YAAY;AACvE,MAAK;;AAEL;AACA;AACA;AACA;AACA,yCAAwC,YAAY,YAAY;AAChE,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,2BAA0B,YAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,2CAA0C,WAAW;AACrD;AACA;AACA;AACA;AACA,QAAO;AACP,oBAAmB;AACnB;;AAEA,2BAA0B,4BAA4B;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;;AAEA,wCAAuC,WAAW;AAClD,uDAAsD;;AAEtD;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,+BAA8B,aAAa,YAAY,eAAe;AACtE,MAAK;;AAEL;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,+DAA8D,uBAAuB;AACrF;AACA;;AAEA,IAAG;;AAEH;AACA;AACA,uBAAsB;AACtB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA,8CAA6C,aAAa;AAC1D;;AAEA;AACA,qBAAoB;AACpB,qBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC,gBAAe,YAAY;AAC3B,gBAAe,iBAAiB;AAChC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6BAA4B;;AAE5B;AACA;AACA;AACA,wCAAuC,8BAA8B,EAAE;AACvE,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,yCAAwC,aAAa;AACrD,MAAK;;AAEL;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,mBAAmB;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,aAAa;;AAExC;AACA;AACA,oBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA,2CAA0C,aAAa;AACvD;AACA;AACA,MAAK;;AAEL;AACA;AACA,wCAAuC,gBAAgB;AACvD,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,wCAAuC,MAAM;AAC7C,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;;AAE9B;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,2BAA0B,YAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,sBAAqB,mBAAmB;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAG;;AAEH;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,6BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,UAAS,6BAA6B;AACtC;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAuC;AACvC;AACA;AACA,MAAK;;AAEL;AACA,mBAAkB;;AAElB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAmC,mBAAmB;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA4B;;AAE5B;AACA;;AAEA;AACA;AACA,6BAA4B;;AAE5B;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAwC,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT,0CAAyC,cAAc;AACvD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,8BAA6B,iCAAiC;AAC9D,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD;;AAEnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wEAAuE;;AAEvE;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA,IAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,0BAAyB,sCAAsC;AAC/D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;;;;ACn4DD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC,oBAAoB;;AAErB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,eAAc,6BAA6B;;AAE3C;AACA;AACA;AACA;AACA,oBAAmB,MAAM;AACzB,2BAA0B,OAAO;AACjC;;AAEA;AACA,YAAW;AACX,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,KAAI;AACJ;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,4BAA2B,WAAW,WAAW;AACjD;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,4BAA2B,WAAW,WAAW;;AAEjD;AACA,mEAAkE,WAAW;AAC7E;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA8B,GAAG,QAAQ,WAAW,EAAE;AACtD,KAAI;AACJ;AACA;AACA;;AAEA;AACA,oDAAmD,QAAQ,WAAW,EAAE;AACxE;;AAEA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;;AAEA;AACA,yFAAwF,aAAa;AACrG;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,yBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA,sGAAqG,qBAAqB,2BAA2B,qBAAqB,2BAA2B,qBAAqB,6BAA6B,qBAAqB,4BAA4B;AACxS,mQAAkQ,uHAAuH,eAAe,EAAE;;AAE1Y;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2FAA0F,2BAA2B;AACrH;;AAEA;AACA;AACA;AACA,KAAI;AACJ,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA,sFAAqF,aAAa;AAClG;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sFAAqF,aAAa;AAClG;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sFAAqF,aAAa;AAClG;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,iBAAiB;AAClC;AACA;;AAEA,kBAAiB,eAAe;AAChC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,gBAAe,UAAU;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,gBAAe,qDAAqD;AACpE;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qCAAoC,OAAO;AAC3C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAkB;AAClB,qBAAoB;AACpB;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,WAAU;AACV,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB;AACnB,MAAK;AACL,gBAAe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAM;AACN;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAQ,GAAG;AACX;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAc,wBAAwB;AACtC;AACA;AACA;;AAEA,eAAc,wBAAwB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAc;AACd;;AAEA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,gBAAe,kBAAkB;AACjC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAmB;AACnB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAiB;AACjB;;AAEA,kBAAiB;AACjB,KAAI;;AAEJ;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,sBAAqB;AACrB;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB;;AAElB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB;;AAEpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAe,kBAAkB;AACjC,YAAW,cAAc;;AAEzB,yBAAwB,0BAA0B;AAClD,aAAY;AACZ,KAAI;;AAEJ;AACA;AACA;;AAEA;AACA,cAAa,0BAA0B;;AAEvC,aAAY,iBAAiB;AAC7B,aAAY,cAAc;AAC1B,kBAAiB,yBAAyB;AAC1C,eAAc,gBAAgB;;AAE9B,cAAa;AACb,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,iDAAgD;;AAEhD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,+BAA8B,QAAQ;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6CAA4C,SAAS;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,OAAM;AACN;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAI,GAAG,+CAA+C;;AAEtD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAuC,4CAA4C;AACnF;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;;AAEA,eAAc,iBAAiB;AAC/B;AACA;;AAEA,UAAS,eAAe;AACxB;AACA;;AAEA,UAAS,SAAS;AAClB;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uFAAsF,aAAa;AACnG;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,aAAa;AAChC,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,kCAAiC,UAAU,EAAE,QAAQ;AACrD;AACA;AACA;AACA,oDAAmD,YAAY;AAC/D;AACA;;AAEA,sCAAqC,WAAW;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB,yBAAyB;AAC9C;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uCAAsC;AACtC;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2OAA0O,cAAc,oBAAoB,QAAQ,KAAK,qCAAqC,kBAAkB,KAAK;AACrV;AACA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI,IAAI;AACR;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oDAAmD,cAAc;AACjE;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ,wBAAuB;;AAEvB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL,KAAI;;AAEJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,qBAAoB,IAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,SAAS;AACxB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,SAAS;AACxB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,SAAS;AACxB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,SAAS;AACxB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+CAA8C;;AAE9C;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,gBAAe,SAAS;AACxB,qBAAoB;;AAEpB;AACA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+CAA8C;AAC9C,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,sEAAqE,EAAE,cAAc,EAAE;;AAEvF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA4B,KAAK,KAAK;AACtC,qCAAoC,KAAK,KAAK;AAC9C;;AAEA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA,aAAY;AACZ,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,cAAa;AACb;AACA,KAAI;AACJ;;AAEA;AACA,cAAa;AACb;AACA,KAAI;AACJ;;AAEA;AACA,cAAa;AACb;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA,KAAI;AACJ;;AAEA,+BAA8B;AAC9B;AACA;;AAEA;;AAEA;;AAEA,8BAA6B;AAC7B,cAAa;AACb;;AAEA;AACA;;AAEA;;AAEA,+BAA8B;AAC9B,eAAc;AACd;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,cAAa;AACb;;AAEA;AACA;;AAEA;;AAEA;AACA,eAAc;AACd;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAI;AACJ,IAAG;;AAEH;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,YAAW;;AAEX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA,eAAc,sBAAsB;AACpC,KAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA,yDAAwD;AACxD;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yDAAwD;AACxD;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAkB;AAClB;AACA,oGAAmG;;AAEnG;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAiC,0BAA0B,6BAA6B;AACxF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB;AACA;;AAEA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAgB,iCAAiC;AACjD,eAAc,+BAA+B;AAC7C,aAAY;AACZ;;AAEA;AACA;AACA,mBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,KAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAsD,oCAAoC;AAC1F;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,yBAAwB,sEAAsE;AAC9F;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,eAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,eAAc,SAAS;AACvB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,eAAc,SAAS;AACvB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,eAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAwB,eAAe;AACvC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA,KAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA6B,YAAY;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mDAAkD;;AAElD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,eAAc,SAAS;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAc,SAAS;AACvB;AACA,0DAAyD;;AAEzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb,MAAK;AACL;;AAEA;;AAEA,oBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAc,SAAS;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAc,SAAS;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAuB;AACvB;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,KAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA,yBAAwB,KAAK;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,wDAAwD;AAC3E;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAoC,wBAAwB,uBAAuB;AACnF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2EAA0E;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0EAAyE;AACzE;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA0B,8BAA8B,mBAAmB;;AAE3E;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAwB,SAAS;;AAEjC;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8BAA6B,UAAU;AACvC;AACA,2BAA0B;AAC1B;;AAEA,8BAA6B,QAAQ;AACrC;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;;AAEA,kDAAiD,QAAQ;AACzD;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAoC;AACpC,0IAAyI,qBAAqB;AAC9J;AACA;;AAEA;AACA,2FAA0F,qBAAqB;AAC/G;AACA;AACA,KAAI;AACJ;AACA,kBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2KAA0K,qBAAqB;AAC/L;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA0B;AAC1B,KAAI;;AAEJ;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA,oBAAmB,0BAA0B;AAC7C;;AAEA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA,qBAAoB,0BAA0B;AAC9C;AACA,KAAI;;AAEJ;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA,8BAA6B;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA,oBAAmB,0BAA0B;AAC7C;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA,gBAAe,SAAS;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL,KAAI;;AAEJ;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA,gBAAe,SAAS;AACxB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,yHAAwH,wBAAwB;AAChJ;;AAEA;AACA;AACA,OAAM;AACN;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mDAAkD,eAAe;AACjE;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA,QAAO;AACP;AACA,MAAK;;AAEL;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA,KAAI;;AAEJ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mDAAkD,kCAAkC;AACpF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mDAAkD,2BAA2B;AAC7E;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;;AAEA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA,sDAAqD,kBAAkB;AACvE;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA,iCAAgC;AAChC;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAiC;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,sDAAqD;;AAErD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA,yDAAwD,qBAAqB;AAC7E;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA,KAAI;AACJ;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,eAAc;AACd;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2JAA0J,eAAe;AACzK,UAAS;AACT;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,SAAQ;AACR,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN,MAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA,+BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAc;AACd,KAAI;AACJ;AACA,gBAAe;AACf,MAAK;AACL,gBAAe;AACf,MAAK;AACL,gBAAe;AACf;AACA,KAAI;AACJ;AACA;;AAEA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8FAA6F,qBAAqB;AAClH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAc,UAAU;AACxB,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,qDAAoD;AACpD,oCAAmC;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,4EAA2E;AAC3E;AACA;;AAEA;AACA,4CAA2C,gBAAgB;;AAE3D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wEAAuE,mBAAmB;AAC1F;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+BAA8B,KAAK,iDAAiD,mBAAmB;AACvG;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA,qDAAoD,oDAAoD;AACxG,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oDAAmD,MAAM;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yDAAwD,qBAAqB;AAC7E;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8EAA6E,mBAAmB;;AAEhG;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oEAAmE,aAAa;AAChF;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,4BAA2B,WAAW,WAAW;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,kCAAiC;AACjC;AACA,iDAAgD,4BAA4B;AAC5E;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA,IAAG;AACH,yBAAwB;AACxB;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA4C,2DAA2D;AACvG;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAc,SAAS;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB;AACpB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6DAA4D;;AAE5D;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT,SAAQ;AACR;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAuB;;AAEvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA,qBAAoB,iDAAiD;;AAErE;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA,OAAM;;AAEN;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO,aAAa,MAAM;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,YAAW;AACX;;AAEA;AACA;AACA,KAAI;AACJ,+DAA8D;AAC9D;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iDAAgD;;AAEhD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAiD,eAAe;AAChE;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,yBAAwB,iBAAiB;AACzC,0BAAyB;AACzB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,8BAA6B,eAAe;;AAE5C;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA,qCAAoC,kBAAkB;AACtD;AACA;;AAEA;AACA;AACA,2BAA0B,eAAe;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAI;;AAEJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,sBAAqB,KAAK,KAAK;AAC/B;AACA,uBAAsB;AACtB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA,YAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAI,OAAO;;AAEX;AACA,0CAAyC;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,qDAAoD;AACpD,iDAAgD;;AAEhD;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,qCAAoC,4BAA4B;;AAEhE;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0DAAyD,UAAU;AACnE;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sPAAqP;AACrP,0DAAyD,mBAAmB;AAC5E;;AAEA;AACA,OAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B,iBAAgB;AAChB,qBAAoB;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,sCAAqC,UAAU;AAC/C;;AAEA;AACA;;AAEA;AACA,kEAAiE;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA2C;AAC3C,WAAU;AACV;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA,SAAQ;AACR,QAAO;AACP;AACA;AACA,mCAAkC;AAClC,UAAS;AACT;AACA;AACA,SAAQ;AACR;;AAEA;AACA,OAAM;AACN;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA,KAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,uDAAsD,2BAA2B;;AAEjF;AACA;AACA,KAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wGAAuG,yBAAyB;AAChI;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,0EAAyE,wBAAwB;AACjG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA,gEAA+D,uCAAuC;AACtG;AACA,KAAI;AACJ;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,+BAA8B;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,KAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAM;AACN;;AAEA;AACA,KAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAuC,qBAAqB;;AAE5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL,KAAI;AACJ;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gCAA+B;AAC/B;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ,wDAAuD,KAAK;AAC5D;AACA;AACA;;AAEA,4CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA,KAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;;AAEA;;AAEA;AACA,sEAAqE,aAAa;AAClF;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA,iDAAgD;;AAEhD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,eAAe;;AAE9B;AACA,cAAa,6DAA6D;;AAE1E;AACA,eAAc;AACd,KAAI;;AAEJ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,YAAW,8BAA8B;AACzC,qBAAoB,8BAA8B;;AAElD;AACA,aAAY,iBAAiB;AAC7B,kBAAiB,qBAAqB;AACtC,YAAW,eAAe;;AAE1B;AACA,cAAa,uBAAuB;;AAEpC;AACA,UAAS,aAAa;AACtB,YAAW,4BAA4B;;AAEvC;AACA,cAAa,iBAAiB;;AAE9B;AACA,eAAc,0BAA0B,EAAE;AAC1C,iBAAgB,0BAA0B,EAAE;AAC5C,iBAAgB,0BAA0B,EAAE;AAC5C,aAAY,uCAAuC;AACnD,aAAY,0BAA0B,EAAE;AACxC,oBAAmB,8CAA8C;AACjE,eAAc,0BAA0B,EAAE;AAC1C,kBAAiB,0BAA0B;AAC3C;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,EAAC;AACD","file":"public/infrastructure.vendor.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tvar _m = moreModules[moduleId];\n\n \t\t\t// Check if module is deduplicated\n \t\t\tswitch(typeof _m) {\n \t\t\tcase \"object\":\n \t\t\t\t// Module can be created from a template\n \t\t\t\tmodules[moduleId] = (function(_m) {\n \t\t\t\t\tvar args = _m.slice(1), templateId = _m[0];\n \t\t\t\t\treturn function (a,b,c) {\n \t\t\t\t\t\tmodules[templateId].apply(this, [a,b,c].concat(args));\n \t\t\t\t\t};\n \t\t\t\t}(_m));\n \t\t\t\tbreak;\n \t\t\tcase \"function\":\n \t\t\t\t// Normal module\n \t\t\t\tmodules[moduleId] = _m;\n \t\t\t\tbreak;\n \t\t\tdefault:\n \t\t\t\t// Module is a copy of another module\n \t\t\t\tmodules[moduleId] = modules[_m];\n \t\t\t\tbreak;\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n \t\tif(moreModules[0]) {\n \t\t\tinstalledModules[0] = 0;\n \t\t\treturn __webpack_require__(0);\n \t\t}\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t0:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \"./home/stefan/projects/infrastructure/infrastructure-gh-pages/public/infrastructure.bundle.js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d28d41d75cfbea49ac8e\n **/","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/underscore/underscore.js\n ** module id = 1\n ** module chunks = 0\n **/","/*** IMPORTS FROM imports-loader ***/\nvar define = false;\nvar _ = require('underscore');\n\n//     Backbone.js 1.3.3\n\n//     (c) 2010-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self === self && self) ||\n            (typeof global == 'object' && global.global === global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch (e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n})(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = Array.prototype.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.3.3';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Proxy Backbone class methods to Underscore functions, wrapping the model's\n  // `attributes` object or collection's `models` array behind the scenes.\n  //\n  // collection.filter(function(model) { return model.get('age') > 10 });\n  // collection.each(this.addView);\n  //\n  // `Function#apply` can be slow so we use the method's arg count, if we know it.\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], cb(iteratee, this), context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], cb(iteratee, this), defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n  var cb = function(iteratee, instance) {\n    if (_.isFunction(iteratee)) return iteratee;\n    if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n    if (_.isString(iteratee)) return function(model) { return model.get(iteratee); };\n    return iteratee;\n  };\n  var modelMatcher = function(attrs) {\n    var matcher = _.matches(attrs);\n    return function(model) {\n      return matcher(model.attributes);\n    };\n  };\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // a custom event channel. You may bind a callback to an event with `on` or\n  // remove with `off`; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`).\n  var eventsApi = function(iteratee, events, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space-separated event names by delegating them individually.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        events = iteratee(events, names[i], callback, opts);\n      }\n    } else {\n      // Finally, standard events.\n      events = iteratee(events, name, callback, opts);\n    }\n    return events;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // Guard the `listening` argument from the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n      context: context,\n      ctx: obj,\n      listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to\n  // for easier unbinding later.\n  Events.listenTo = function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({callback: callback, context: context, ctx: context || ctx, listening: listening});\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off = function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n      context: context,\n      listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening = function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    if (!events) return;\n\n    var i = 0, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, its listener will be removed. If multiple events\n  // are passed in using the space-separated syntax, the handler will fire\n  // once for each event, not once for a combination of all events.\n  Events.once = function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    if (typeof name === 'string' && context == null) callback = void 0;\n    return this.on(events, callback, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce = function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger = function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, callback, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    var defaults = _.result(this, 'defaults');\n    attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Update the `id`.\n      if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n      return _.size(changed) ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else if (!this._validate(attrs, options)) {\n        return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend({}, options, {validate: true}));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model, mapped to the\n  // number of arguments they take.\n  var modelMethods = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1};\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Splices `insert` into `array` at index `at`.\n  var splice = function(array, insert, at) {\n    at = Math.min(Math.max(at, 0), array.length);\n    var tail = Array(array.length - at);\n    var length = insert.length;\n    var i;\n    for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n    for (i = 0; i < length; i++) array[i + at] = insert[i];\n    for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n  };\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set. `models` may be Backbone\n    // Models or raw JavaScript objects to be converted to Models, or any\n    // combination of the two.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed.length) {\n        options.changes = {added: [], merged: [], removed: removed};\n        this.trigger('update', this, options);\n      }\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      if (models == null) return;\n\n      options = _.extend({}, setOptions, options);\n      if (options.parse && !this._isModel(models)) {\n        models = this.parse(models, options) || [];\n      }\n\n      var singular = !_.isArray(models);\n      models = singular ? [models] : models.slice();\n\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at > this.length) at = this.length;\n      if (at < 0) at += this.length + 1;\n\n      var set = [];\n      var toAdd = [];\n      var toMerge = [];\n      var toRemove = [];\n      var modelMap = {};\n\n      var add = options.add;\n      var merge = options.merge;\n      var remove = options.remove;\n\n      var sort = false;\n      var sortable = this.comparator && at == null && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      var model, i;\n      for (i = 0; i < models.length; i++) {\n        model = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        var existing = this.get(model);\n        if (existing) {\n          if (merge && model !== existing) {\n            var attrs = this._isModel(model) ? model.attributes : model;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            toMerge.push(existing);\n            if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n          }\n          if (!modelMap[existing.cid]) {\n            modelMap[existing.cid] = true;\n            set.push(existing);\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(model, options);\n          if (model) {\n            toAdd.push(model);\n            this._addReference(model, options);\n            modelMap[model.cid] = true;\n            set.push(model);\n          }\n        }\n      }\n\n      // Remove stale models.\n      if (remove) {\n        for (i = 0; i < this.length; i++) {\n          model = this.models[i];\n          if (!modelMap[model.cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      var orderChanged = false;\n      var replace = !sortable && add && remove;\n      if (set.length && replace) {\n        orderChanged = this.length !== set.length || _.some(this.models, function(m, index) {\n          return m !== set[index];\n        });\n        this.models.length = 0;\n        splice(this.models, set, 0);\n        this.length = this.models.length;\n      } else if (toAdd.length) {\n        if (sortable) sort = true;\n        splice(this.models, toAdd, at == null ? this.length : at);\n        this.length = this.models.length;\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort/update events.\n      if (!options.silent) {\n        for (i = 0; i < toAdd.length; i++) {\n          if (at != null) options.index = at + i;\n          model = toAdd[i];\n          model.trigger('add', model, this, options);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length || toMerge.length) {\n          options.changes = {\n            added: toAdd,\n            removed: toRemove,\n            merged: toMerge\n          };\n          this.trigger('update', this, options);\n        }\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id, cid, model object with id or cid\n    // properties, or an attributes object that is transformed through modelId.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] ||\n        this._byId[this.modelId(obj.attributes || obj)] ||\n        obj.cid && this._byId[obj.cid];\n    },\n\n    // Returns `true` if the model is in the collection.\n    has: function(obj) {\n      return this.get(obj) != null;\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      var comparator = this.comparator;\n      if (!comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      var length = comparator.length;\n      if (_.isFunction(comparator)) comparator = _.bind(comparator, this);\n\n      // Run sort based on type of `comparator`.\n      if (length === 1 || _.isString(comparator)) {\n        this.models = this.sortBy(comparator);\n      } else {\n        this.models.sort(comparator);\n      }\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return this.map(attr + '');\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(m, resp, callbackOpts) {\n        if (wait) collection.add(m, callbackOpts);\n        if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function(attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        // Remove references before triggering 'remove' event to prevent an\n        // infinite loop. #3693\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function(model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if (model) {\n        if ((event === 'add' || event === 'remove') && collection !== this) return;\n        if (event === 'destroy') this.remove(model, options);\n        if (event === 'change') {\n          var prevId = this.modelId(model.previousAttributes());\n          var id = this.modelId(model.attributes);\n          if (prevId !== id) {\n            if (prevId != null) delete this._byId[prevId];\n            if (id != null) this._byId[id] = model;\n          }\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = {forEach: 3, each: 3, map: 3, collect: 3, reduce: 0,\n      foldl: 0, inject: 0, reduceRight: 0, foldr: 0, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 3, includes: 3,\n      contains: 3, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3, groupBy: 3, countBy: 3,\n      sortBy: 3, indexBy: 3, findIndex: 3, findLastIndex: 3};\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be set as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch': 'PATCH',\n    'delete': 'DELETE',\n    'read': 'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    this.checkUrl = _.bind(this.checkUrl, this);\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var rootPath = path.slice(0, this.root.length - 1) + '/';\n      return rootPath === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var rootPath = this.root.slice(0, -1) || '/';\n          this.location.replace(rootPath + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function(eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function(eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.some(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var rootPath = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        rootPath = rootPath.slice(0, -1) || '/';\n      }\n      var url = rootPath + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function and add the prototype properties.\n    child.prototype = _.create(parent.prototype, protoProps);\n    child.prototype.constructor = child;\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n});\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/backbone/backbone.js\n ** module id = 3\n ** module chunks = 0\n **/","/*\n\tRactive.js v0.7.3\n\tSat Apr 25 2015 13:52:38 GMT-0400 (EDT) - commit da40f81c660ba2f09c45a09a9c20fdd34ee36d80\n\n\thttp://ractivejs.org\n\thttp://twitter.com/RactiveJS\n\n\tReleased under the MIT License.\n*/\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.Ractive = factory()\n}(this, function () { 'use strict';\n\n  var TEMPLATE_VERSION = 3;\n\n  var defaultOptions = {\n\n  \t// render placement:\n  \tel: void 0,\n  \tappend: false,\n\n  \t// template:\n  \ttemplate: { v: TEMPLATE_VERSION, t: [] },\n\n  \t// parse:     // TODO static delimiters?\n  \tpreserveWhitespace: false,\n  \tsanitize: false,\n  \tstripComments: true,\n  \tdelimiters: [\"{{\", \"}}\"],\n  \ttripleDelimiters: [\"{{{\", \"}}}\"],\n  \tinterpolate: false,\n\n  \t// data & binding:\n  \tdata: {},\n  \tcomputed: {},\n  \tmagic: false,\n  \tmodifyArrays: true,\n  \tadapt: [],\n  \tisolated: false,\n  \ttwoway: true,\n  \tlazy: false,\n\n  \t// transitions:\n  \tnoIntro: false,\n  \ttransitionsEnabled: true,\n  \tcomplete: void 0,\n\n  \t// css:\n  \tcss: null,\n  \tnoCssTransform: false\n  };\n\n  var config_defaults = defaultOptions;\n\n  // These are a subset of the easing equations found at\n  // https://raw.github.com/danro/easing-js - license info\n  // follows:\n\n  // --------------------------------------------------\n  // easing.js v0.5.4\n  // Generic set of easing functions with AMD support\n  // https://github.com/danro/easing-js\n  // This code may be freely distributed under the MIT license\n  // http://danro.mit-license.org/\n  // --------------------------------------------------\n  // All functions adapted from Thomas Fuchs & Jeremy Kahn\n  // Easing Equations (c) 2003 Robert Penner, BSD license\n  // https://raw.github.com/danro/easing-js/master/LICENSE\n  // --------------------------------------------------\n\n  // In that library, the functions named easeIn, easeOut, and\n  // easeInOut below are named easeInCubic, easeOutCubic, and\n  // (you guessed it) easeInOutCubic.\n  //\n  // You can add additional easing functions to this list, and they\n  // will be globally available.\n\n  var static_easing = {\n  \tlinear: function (pos) {\n  \t\treturn pos;\n  \t},\n  \teaseIn: function (pos) {\n  \t\treturn Math.pow(pos, 3);\n  \t},\n  \teaseOut: function (pos) {\n  \t\treturn Math.pow(pos - 1, 3) + 1;\n  \t},\n  \teaseInOut: function (pos) {\n  \t\tif ((pos /= 0.5) < 1) {\n  \t\t\treturn 0.5 * Math.pow(pos, 3);\n  \t\t}\n  \t\treturn 0.5 * (Math.pow(pos - 2, 3) + 2);\n  \t}\n  };\n\n  /*global console, navigator */\n  var isClient, isJsdom, hasConsole, environment__magic, namespaces, svg, vendors;\n\n  isClient = typeof document === \"object\";\n\n  isJsdom = typeof navigator !== \"undefined\" && /jsDom/.test(navigator.appName);\n\n  hasConsole = typeof console !== \"undefined\" && typeof console.warn === \"function\" && typeof console.warn.apply === \"function\";\n\n  try {\n  \tObject.defineProperty({}, \"test\", { value: 0 });\n  \tenvironment__magic = true;\n  } catch (e) {\n  \tenvironment__magic = false;\n  }\n\n  namespaces = {\n  \thtml: \"http://www.w3.org/1999/xhtml\",\n  \tmathml: \"http://www.w3.org/1998/Math/MathML\",\n  \tsvg: \"http://www.w3.org/2000/svg\",\n  \txlink: \"http://www.w3.org/1999/xlink\",\n  \txml: \"http://www.w3.org/XML/1998/namespace\",\n  \txmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n\n  if (typeof document === \"undefined\") {\n  \tsvg = false;\n  } else {\n  \tsvg = document && document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\");\n  }\n\n  vendors = [\"o\", \"ms\", \"moz\", \"webkit\"];\n\n  var createElement, matches, dom__div, methodNames, unprefixed, prefixed, dom__i, j, makeFunction;\n\n  // Test for SVG support\n  if (!svg) {\n  \tcreateElement = function (type, ns) {\n  \t\tif (ns && ns !== namespaces.html) {\n  \t\t\tthrow \"This browser does not support namespaces other than http://www.w3.org/1999/xhtml. The most likely cause of this error is that you're trying to render SVG in an older browser. See http://docs.ractivejs.org/latest/svg-and-older-browsers for more information\";\n  \t\t}\n\n  \t\treturn document.createElement(type);\n  \t};\n  } else {\n  \tcreateElement = function (type, ns) {\n  \t\tif (!ns || ns === namespaces.html) {\n  \t\t\treturn document.createElement(type);\n  \t\t}\n\n  \t\treturn document.createElementNS(ns, type);\n  \t};\n  }\n\n  function getElement(input) {\n  \tvar output;\n\n  \tif (!input || typeof input === \"boolean\") {\n  \t\treturn;\n  \t}\n\n  \tif (typeof window === \"undefined\" || !document || !input) {\n  \t\treturn null;\n  \t}\n\n  \t// We already have a DOM node - no work to do. (Duck typing alert!)\n  \tif (input.nodeType) {\n  \t\treturn input;\n  \t}\n\n  \t// Get node from string\n  \tif (typeof input === \"string\") {\n  \t\t// try ID first\n  \t\toutput = document.getElementById(input);\n\n  \t\t// then as selector, if possible\n  \t\tif (!output && document.querySelector) {\n  \t\t\toutput = document.querySelector(input);\n  \t\t}\n\n  \t\t// did it work?\n  \t\tif (output && output.nodeType) {\n  \t\t\treturn output;\n  \t\t}\n  \t}\n\n  \t// If we've been given a collection (jQuery, Zepto etc), extract the first item\n  \tif (input[0] && input[0].nodeType) {\n  \t\treturn input[0];\n  \t}\n\n  \treturn null;\n  }\n\n  if (!isClient) {\n  \tmatches = null;\n  } else {\n  \tdom__div = createElement(\"div\");\n  \tmethodNames = [\"matches\", \"matchesSelector\"];\n\n  \tmakeFunction = function (methodName) {\n  \t\treturn function (node, selector) {\n  \t\t\treturn node[methodName](selector);\n  \t\t};\n  \t};\n\n  \tdom__i = methodNames.length;\n\n  \twhile (dom__i-- && !matches) {\n  \t\tunprefixed = methodNames[dom__i];\n\n  \t\tif (dom__div[unprefixed]) {\n  \t\t\tmatches = makeFunction(unprefixed);\n  \t\t} else {\n  \t\t\tj = vendors.length;\n  \t\t\twhile (j--) {\n  \t\t\t\tprefixed = vendors[dom__i] + unprefixed.substr(0, 1).toUpperCase() + unprefixed.substring(1);\n\n  \t\t\t\tif (dom__div[prefixed]) {\n  \t\t\t\t\tmatches = makeFunction(prefixed);\n  \t\t\t\t\tbreak;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \t// IE8...\n  \tif (!matches) {\n  \t\tmatches = function (node, selector) {\n  \t\t\tvar nodes, parentNode, i;\n\n  \t\t\tparentNode = node.parentNode;\n\n  \t\t\tif (!parentNode) {\n  \t\t\t\t// empty dummy <div>\n  \t\t\t\tdom__div.innerHTML = \"\";\n\n  \t\t\t\tparentNode = dom__div;\n  \t\t\t\tnode = node.cloneNode();\n\n  \t\t\t\tdom__div.appendChild(node);\n  \t\t\t}\n\n  \t\t\tnodes = parentNode.querySelectorAll(selector);\n\n  \t\t\ti = nodes.length;\n  \t\t\twhile (i--) {\n  \t\t\t\tif (nodes[i] === node) {\n  \t\t\t\t\treturn true;\n  \t\t\t\t}\n  \t\t\t}\n\n  \t\t\treturn false;\n  \t\t};\n  \t}\n  }\n\n  function detachNode(node) {\n  \tif (node && typeof node.parentNode !== \"unknown\" && node.parentNode) {\n  \t\tnode.parentNode.removeChild(node);\n  \t}\n\n  \treturn node;\n  }\n\n  function safeToStringValue(value) {\n  \treturn value == null || !value.toString ? \"\" : value;\n  }\n\n  var legacy = null;\n\n  var create, defineProperty, defineProperties;\n\n  try {\n  \tObject.defineProperty({}, \"test\", { value: 0 });\n\n  \tif (isClient) {\n  \t\tObject.defineProperty(document.createElement(\"div\"), \"test\", { value: 0 });\n  \t}\n\n  \tdefineProperty = Object.defineProperty;\n  } catch (err) {\n  \t// Object.defineProperty doesn't exist, or we're in IE8 where you can\n  \t// only use it with DOM objects (what were you smoking, MSFT?)\n  \tdefineProperty = function (obj, prop, desc) {\n  \t\tobj[prop] = desc.value;\n  \t};\n  }\n\n  try {\n  \ttry {\n  \t\tObject.defineProperties({}, { test: { value: 0 } });\n  \t} catch (err) {\n  \t\t// TODO how do we account for this? noMagic = true;\n  \t\tthrow err;\n  \t}\n\n  \tif (isClient) {\n  \t\tObject.defineProperties(createElement(\"div\"), { test: { value: 0 } });\n  \t}\n\n  \tdefineProperties = Object.defineProperties;\n  } catch (err) {\n  \tdefineProperties = function (obj, props) {\n  \t\tvar prop;\n\n  \t\tfor (prop in props) {\n  \t\t\tif (props.hasOwnProperty(prop)) {\n  \t\t\t\tdefineProperty(obj, prop, props[prop]);\n  \t\t\t}\n  \t\t}\n  \t};\n  }\n\n  try {\n  \tObject.create(null);\n\n  \tcreate = Object.create;\n  } catch (err) {\n  \t// sigh\n  \tcreate = (function () {\n  \t\tvar F = function () {};\n\n  \t\treturn function (proto, props) {\n  \t\t\tvar obj;\n\n  \t\t\tif (proto === null) {\n  \t\t\t\treturn {};\n  \t\t\t}\n\n  \t\t\tF.prototype = proto;\n  \t\t\tobj = new F();\n\n  \t\t\tif (props) {\n  \t\t\t\tObject.defineProperties(obj, props);\n  \t\t\t}\n\n  \t\t\treturn obj;\n  \t\t};\n  \t})();\n  }\n\n  function utils_object__extend(target) {\n  \tfor (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n  \t\tsources[_key - 1] = arguments[_key];\n  \t}\n\n  \tvar prop, source;\n\n  \twhile (source = sources.shift()) {\n  \t\tfor (prop in source) {\n  \t\t\tif (hasOwn.call(source, prop)) {\n  \t\t\t\ttarget[prop] = source[prop];\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \treturn target;\n  }\n\n  function fillGaps(target) {\n  \tfor (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n  \t\tsources[_key - 1] = arguments[_key];\n  \t}\n\n  \tsources.forEach(function (s) {\n  \t\tfor (var key in s) {\n  \t\t\tif (s.hasOwnProperty(key) && !(key in target)) {\n  \t\t\t\ttarget[key] = s[key];\n  \t\t\t}\n  \t\t}\n  \t});\n\n  \treturn target;\n  }\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n\n  // thanks, http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/\n  var is__toString = Object.prototype.toString,\n      arrayLikePattern = /^\\[object (?:Array|FileList)\\]$/;\n  function isArray(thing) {\n  \treturn is__toString.call(thing) === \"[object Array]\";\n  }\n\n  function isArrayLike(obj) {\n  \treturn arrayLikePattern.test(is__toString.call(obj));\n  }\n\n  function isEqual(a, b) {\n  \tif (a === null && b === null) {\n  \t\treturn true;\n  \t}\n\n  \tif (typeof a === \"object\" || typeof b === \"object\") {\n  \t\treturn false;\n  \t}\n\n  \treturn a === b;\n  }\n\n  function is__isNumeric(thing) {\n  \treturn !isNaN(parseFloat(thing)) && isFinite(thing);\n  }\n\n  function isObject(thing) {\n  \treturn thing && is__toString.call(thing) === \"[object Object]\";\n  }\n\n  var noop = function () {};\n\n  /* global console */\n  var alreadyWarned = {},\n      log,\n      printWarning,\n      welcome;\n\n  if (hasConsole) {\n  \t(function () {\n  \t\tvar welcomeIntro = [\"%cRactive.js %c0.7.3 %cin debug mode, %cmore...\", \"color: rgb(114, 157, 52); font-weight: normal;\", \"color: rgb(85, 85, 85); font-weight: normal;\", \"color: rgb(85, 85, 85); font-weight: normal;\", \"color: rgb(82, 140, 224); font-weight: normal; text-decoration: underline;\"];\n  \t\tvar welcomeMessage = \"You're running Ractive 0.7.3 in debug mode - messages will be printed to the console to help you fix problems and optimise your application.\\n\\nTo disable debug mode, add this line at the start of your app:\\n  Ractive.DEBUG = false;\\n\\nTo disable debug mode when your app is minified, add this snippet:\\n  Ractive.DEBUG = /unminified/.test(function(){/*unminified*/});\\n\\nGet help and support:\\n  http://docs.ractivejs.org\\n  http://stackoverflow.com/questions/tagged/ractivejs\\n  http://groups.google.com/forum/#!forum/ractive-js\\n  http://twitter.com/ractivejs\\n\\nFound a bug? Raise an issue:\\n  https://github.com/ractivejs/ractive/issues\\n\\n\";\n\n  \t\twelcome = function () {\n  \t\t\tvar hasGroup = !!console.groupCollapsed;\n  \t\t\tconsole[hasGroup ? \"groupCollapsed\" : \"log\"].apply(console, welcomeIntro);\n  \t\t\tconsole.log(welcomeMessage);\n  \t\t\tif (hasGroup) {\n  \t\t\t\tconsole.groupEnd(welcomeIntro);\n  \t\t\t}\n\n  \t\t\twelcome = noop;\n  \t\t};\n\n  \t\tprintWarning = function (message, args) {\n  \t\t\twelcome();\n\n  \t\t\t// extract information about the instance this message pertains to, if applicable\n  \t\t\tif (typeof args[args.length - 1] === \"object\") {\n  \t\t\t\tvar options = args.pop();\n  \t\t\t\tvar ractive = options ? options.ractive : null;\n\n  \t\t\t\tif (ractive) {\n  \t\t\t\t\t// if this is an instance of a component that we know the name of, add\n  \t\t\t\t\t// it to the message\n  \t\t\t\t\tvar _name = undefined;\n  \t\t\t\t\tif (ractive.component && (_name = ractive.component.name)) {\n  \t\t\t\t\t\tmessage = \"<\" + _name + \"> \" + message;\n  \t\t\t\t\t}\n\n  \t\t\t\t\tvar node = undefined;\n  \t\t\t\t\tif (node = options.node || ractive.fragment && ractive.fragment.rendered && ractive.find(\"*\")) {\n  \t\t\t\t\t\targs.push(node);\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n\n  \t\t\tconsole.warn.apply(console, [\"%cRactive.js: %c\" + message, \"color: rgb(114, 157, 52);\", \"color: rgb(85, 85, 85);\"].concat(args));\n  \t\t};\n\n  \t\tlog = function () {\n  \t\t\tconsole.log.apply(console, arguments);\n  \t\t};\n  \t})();\n  } else {\n  \tprintWarning = log = welcome = noop;\n  }\n\n  function format(message, args) {\n  \treturn message.replace(/%s/g, function () {\n  \t\treturn args.shift();\n  \t});\n  }\n\n  function fatal(message) {\n  \tfor (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n  \t\targs[_key - 1] = arguments[_key];\n  \t}\n\n  \tmessage = format(message, args);\n  \tthrow new Error(message);\n  }\n\n  function logIfDebug() {\n  \tif (_Ractive.DEBUG) {\n  \t\tlog.apply(null, arguments);\n  \t}\n  }\n\n  function warn(message) {\n  \tfor (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n  \t\targs[_key - 1] = arguments[_key];\n  \t}\n\n  \tmessage = format(message, args);\n  \tprintWarning(message, args);\n  }\n\n  function warnOnce(message) {\n  \tfor (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n  \t\targs[_key - 1] = arguments[_key];\n  \t}\n\n  \tmessage = format(message, args);\n\n  \tif (alreadyWarned[message]) {\n  \t\treturn;\n  \t}\n\n  \talreadyWarned[message] = true;\n  \tprintWarning(message, args);\n  }\n\n  function warnIfDebug() {\n  \tif (_Ractive.DEBUG) {\n  \t\twarn.apply(null, arguments);\n  \t}\n  }\n\n  function warnOnceIfDebug() {\n  \tif (_Ractive.DEBUG) {\n  \t\twarnOnce.apply(null, arguments);\n  \t}\n  }\n\n  // Error messages that are used (or could be) in multiple places\n  var badArguments = \"Bad arguments\";\n  var noRegistryFunctionReturn = \"A function was specified for \\\"%s\\\" %s, but no %s was returned\";\n  var missingPlugin = function (name, type) {\n    return \"Missing \\\"\" + name + \"\\\" \" + type + \" plugin. You may need to download a plugin via http://docs.ractivejs.org/latest/plugins#\" + type + \"s\";\n  };\n\n  function findInViewHierarchy(registryName, ractive, name) {\n  \tvar instance = findInstance(registryName, ractive, name);\n  \treturn instance ? instance[registryName][name] : null;\n  }\n\n  function findInstance(registryName, ractive, name) {\n  \twhile (ractive) {\n  \t\tif (name in ractive[registryName]) {\n  \t\t\treturn ractive;\n  \t\t}\n\n  \t\tif (ractive.isolated) {\n  \t\t\treturn null;\n  \t\t}\n\n  \t\tractive = ractive.parent;\n  \t}\n  }\n\n  var interpolate = function (from, to, ractive, type) {\n  \tif (from === to) {\n  \t\treturn snap(to);\n  \t}\n\n  \tif (type) {\n\n  \t\tvar interpol = findInViewHierarchy(\"interpolators\", ractive, type);\n  \t\tif (interpol) {\n  \t\t\treturn interpol(from, to) || snap(to);\n  \t\t}\n\n  \t\tfatal(missingPlugin(type, \"interpolator\"));\n  \t}\n\n  \treturn static_interpolators.number(from, to) || static_interpolators.array(from, to) || static_interpolators.object(from, to) || snap(to);\n  };\n\n  var shared_interpolate = interpolate;\n\n  function snap(to) {\n  \treturn function () {\n  \t\treturn to;\n  \t};\n  }\n\n  var interpolators = {\n  \tnumber: function (from, to) {\n  \t\tvar delta;\n\n  \t\tif (!is__isNumeric(from) || !is__isNumeric(to)) {\n  \t\t\treturn null;\n  \t\t}\n\n  \t\tfrom = +from;\n  \t\tto = +to;\n\n  \t\tdelta = to - from;\n\n  \t\tif (!delta) {\n  \t\t\treturn function () {\n  \t\t\t\treturn from;\n  \t\t\t};\n  \t\t}\n\n  \t\treturn function (t) {\n  \t\t\treturn from + t * delta;\n  \t\t};\n  \t},\n\n  \tarray: function (from, to) {\n  \t\tvar intermediate, interpolators, len, i;\n\n  \t\tif (!isArray(from) || !isArray(to)) {\n  \t\t\treturn null;\n  \t\t}\n\n  \t\tintermediate = [];\n  \t\tinterpolators = [];\n\n  \t\ti = len = Math.min(from.length, to.length);\n  \t\twhile (i--) {\n  \t\t\tinterpolators[i] = shared_interpolate(from[i], to[i]);\n  \t\t}\n\n  \t\t// surplus values - don't interpolate, but don't exclude them either\n  \t\tfor (i = len; i < from.length; i += 1) {\n  \t\t\tintermediate[i] = from[i];\n  \t\t}\n\n  \t\tfor (i = len; i < to.length; i += 1) {\n  \t\t\tintermediate[i] = to[i];\n  \t\t}\n\n  \t\treturn function (t) {\n  \t\t\tvar i = len;\n\n  \t\t\twhile (i--) {\n  \t\t\t\tintermediate[i] = interpolators[i](t);\n  \t\t\t}\n\n  \t\t\treturn intermediate;\n  \t\t};\n  \t},\n\n  \tobject: function (from, to) {\n  \t\tvar properties, len, interpolators, intermediate, prop;\n\n  \t\tif (!isObject(from) || !isObject(to)) {\n  \t\t\treturn null;\n  \t\t}\n\n  \t\tproperties = [];\n  \t\tintermediate = {};\n  \t\tinterpolators = {};\n\n  \t\tfor (prop in from) {\n  \t\t\tif (hasOwn.call(from, prop)) {\n  \t\t\t\tif (hasOwn.call(to, prop)) {\n  \t\t\t\t\tproperties.push(prop);\n  \t\t\t\t\tinterpolators[prop] = shared_interpolate(from[prop], to[prop]);\n  \t\t\t\t} else {\n  \t\t\t\t\tintermediate[prop] = from[prop];\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n\n  \t\tfor (prop in to) {\n  \t\t\tif (hasOwn.call(to, prop) && !hasOwn.call(from, prop)) {\n  \t\t\t\tintermediate[prop] = to[prop];\n  \t\t\t}\n  \t\t}\n\n  \t\tlen = properties.length;\n\n  \t\treturn function (t) {\n  \t\t\tvar i = len,\n  \t\t\t    prop;\n\n  \t\t\twhile (i--) {\n  \t\t\t\tprop = properties[i];\n\n  \t\t\t\tintermediate[prop] = interpolators[prop](t);\n  \t\t\t}\n\n  \t\t\treturn intermediate;\n  \t\t};\n  \t}\n  };\n\n  var static_interpolators = interpolators;\n\n  // This function takes a keypath such as 'foo.bar.baz', and returns\n  // all the variants of that keypath that include a wildcard in place\n  // of a key, such as 'foo.bar.*', 'foo.*.baz', 'foo.*.*' and so on.\n  // These are then checked against the dependants map (ractive.viewmodel.depsMap)\n  // to see if any pattern observers are downstream of one or more of\n  // these wildcard keypaths (e.g. 'foo.bar.*.status')\n  var utils_getPotentialWildcardMatches = getPotentialWildcardMatches;\n\n  var starMaps = {};\n  function getPotentialWildcardMatches(keypath) {\n  \tvar keys, starMap, mapper, i, result, wildcardKeypath;\n\n  \tkeys = keypath.split(\".\");\n  \tif (!(starMap = starMaps[keys.length])) {\n  \t\tstarMap = getStarMap(keys.length);\n  \t}\n\n  \tresult = [];\n\n  \tmapper = function (star, i) {\n  \t\treturn star ? \"*\" : keys[i];\n  \t};\n\n  \ti = starMap.length;\n  \twhile (i--) {\n  \t\twildcardKeypath = starMap[i].map(mapper).join(\".\");\n\n  \t\tif (!result.hasOwnProperty(wildcardKeypath)) {\n  \t\t\tresult.push(wildcardKeypath);\n  \t\t\tresult[wildcardKeypath] = true;\n  \t\t}\n  \t}\n\n  \treturn result;\n  }\n\n  // This function returns all the possible true/false combinations for\n  // a given number - e.g. for two, the possible combinations are\n  // [ true, true ], [ true, false ], [ false, true ], [ false, false ].\n  // It does so by getting all the binary values between 0 and e.g. 11\n  function getStarMap(num) {\n  \tvar ones = \"\",\n  \t    max,\n  \t    binary,\n  \t    starMap,\n  \t    mapper,\n  \t    i,\n  \t    j,\n  \t    l,\n  \t    map;\n\n  \tif (!starMaps[num]) {\n  \t\tstarMap = [];\n\n  \t\twhile (ones.length < num) {\n  \t\t\tones += 1;\n  \t\t}\n\n  \t\tmax = parseInt(ones, 2);\n\n  \t\tmapper = function (digit) {\n  \t\t\treturn digit === \"1\";\n  \t\t};\n\n  \t\tfor (i = 0; i <= max; i += 1) {\n  \t\t\tbinary = i.toString(2);\n  \t\t\twhile (binary.length < num) {\n  \t\t\t\tbinary = \"0\" + binary;\n  \t\t\t}\n\n  \t\t\tmap = [];\n  \t\t\tl = binary.length;\n  \t\t\tfor (j = 0; j < l; j++) {\n  \t\t\t\tmap.push(mapper(binary[j]));\n  \t\t\t}\n  \t\t\tstarMap[i] = map;\n  \t\t}\n\n  \t\tstarMaps[num] = starMap;\n  \t}\n\n  \treturn starMaps[num];\n  }\n\n  var refPattern = /\\[\\s*(\\*|[0-9]|[1-9][0-9]+)\\s*\\]/g;\n  var patternPattern = /\\*/;\n  var keypathCache = {};\n\n  var Keypath = function (str) {\n  \tvar keys = str.split(\".\");\n\n  \tthis.str = str;\n\n  \tif (str[0] === \"@\") {\n  \t\tthis.isSpecial = true;\n  \t\tthis.value = decodeKeypath(str);\n  \t}\n\n  \tthis.firstKey = keys[0];\n  \tthis.lastKey = keys.pop();\n\n  \tthis.isPattern = patternPattern.test(str);\n\n  \tthis.parent = str === \"\" ? null : getKeypath(keys.join(\".\"));\n  \tthis.isRoot = !str;\n  };\n\n  Keypath.prototype = {\n  \tequalsOrStartsWith: function (keypath) {\n  \t\treturn keypath === this || this.startsWith(keypath);\n  \t},\n\n  \tjoin: function (str) {\n  \t\treturn getKeypath(this.isRoot ? String(str) : this.str + \".\" + str);\n  \t},\n\n  \treplace: function (oldKeypath, newKeypath) {\n  \t\tif (this === oldKeypath) {\n  \t\t\treturn newKeypath;\n  \t\t}\n\n  \t\tif (this.startsWith(oldKeypath)) {\n  \t\t\treturn newKeypath === null ? newKeypath : getKeypath(this.str.replace(oldKeypath.str + \".\", newKeypath.str + \".\"));\n  \t\t}\n  \t},\n\n  \tstartsWith: function (keypath) {\n  \t\tif (!keypath) {\n  \t\t\t// TODO under what circumstances does this happen?\n  \t\t\treturn false;\n  \t\t}\n\n  \t\treturn keypath && this.str.substr(0, keypath.str.length + 1) === keypath.str + \".\";\n  \t},\n\n  \ttoString: function () {\n  \t\tthrow new Error(\"Bad coercion\");\n  \t},\n\n  \tvalueOf: function () {\n  \t\tthrow new Error(\"Bad coercion\");\n  \t},\n\n  \twildcardMatches: function () {\n  \t\treturn this._wildcardMatches || (this._wildcardMatches = utils_getPotentialWildcardMatches(this.str));\n  \t}\n  };\n  function assignNewKeypath(target, property, oldKeypath, newKeypath) {\n  \tvar existingKeypath = target[property];\n\n  \tif (existingKeypath && (existingKeypath.equalsOrStartsWith(newKeypath) || !existingKeypath.equalsOrStartsWith(oldKeypath))) {\n  \t\treturn;\n  \t}\n\n  \ttarget[property] = existingKeypath ? existingKeypath.replace(oldKeypath, newKeypath) : newKeypath;\n  \treturn true;\n  }\n\n  function decodeKeypath(keypath) {\n  \tvar value = keypath.slice(2);\n\n  \tif (keypath[1] === \"i\") {\n  \t\treturn is__isNumeric(value) ? +value : value;\n  \t} else {\n  \t\treturn value;\n  \t}\n  }\n\n  function getKeypath(str) {\n  \tif (str == null) {\n  \t\treturn str;\n  \t}\n\n  \t// TODO it *may* be worth having two versions of this function - one where\n  \t// keypathCache inherits from null, and one for IE8. Depends on how\n  \t// much of an overhead hasOwnProperty is - probably negligible\n  \tif (!keypathCache.hasOwnProperty(str)) {\n  \t\tkeypathCache[str] = new Keypath(str);\n  \t}\n\n  \treturn keypathCache[str];\n  }\n\n  function getMatchingKeypaths(ractive, keypath) {\n  \tvar keys, key, matchingKeypaths;\n\n  \tkeys = keypath.str.split(\".\");\n  \tmatchingKeypaths = [rootKeypath];\n\n  \twhile (key = keys.shift()) {\n  \t\tif (key === \"*\") {\n  \t\t\t// expand to find all valid child keypaths\n  \t\t\tmatchingKeypaths = matchingKeypaths.reduce(expand, []);\n  \t\t} else {\n  \t\t\tif (matchingKeypaths[0] === rootKeypath) {\n  \t\t\t\t// first key\n  \t\t\t\tmatchingKeypaths[0] = getKeypath(key);\n  \t\t\t} else {\n  \t\t\t\tmatchingKeypaths = matchingKeypaths.map(concatenate(key));\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \treturn matchingKeypaths;\n\n  \tfunction expand(matchingKeypaths, keypath) {\n  \t\tvar wrapper, value, keys;\n\n  \t\tif (keypath.isRoot) {\n  \t\t\tkeys = [].concat(Object.keys(ractive.viewmodel.data), Object.keys(ractive.viewmodel.mappings), Object.keys(ractive.viewmodel.computations));\n  \t\t} else {\n  \t\t\twrapper = ractive.viewmodel.wrapped[keypath.str];\n  \t\t\tvalue = wrapper ? wrapper.get() : ractive.viewmodel.get(keypath);\n\n  \t\t\tkeys = value ? Object.keys(value) : null;\n  \t\t}\n\n  \t\tif (keys) {\n  \t\t\tkeys.forEach(function (key) {\n  \t\t\t\tif (key !== \"_ractive\" || !isArray(value)) {\n  \t\t\t\t\tmatchingKeypaths.push(keypath.join(key));\n  \t\t\t\t}\n  \t\t\t});\n  \t\t}\n\n  \t\treturn matchingKeypaths;\n  \t}\n  }\n\n  function concatenate(key) {\n  \treturn function (keypath) {\n  \t\treturn keypath.join(key);\n  \t};\n  }\n  function normalise(ref) {\n  \treturn ref ? ref.replace(refPattern, \".$1\") : \"\";\n  }\n\n  var rootKeypath = getKeypath(\"\");\n\n  var shared_add = add;\n  var shared_add__errorMessage = \"Cannot add to a non-numeric value\";\n  function add(root, keypath, d) {\n  \tif (typeof keypath !== \"string\" || !is__isNumeric(d)) {\n  \t\tthrow new Error(\"Bad arguments\");\n  \t}\n\n  \tvar value = undefined,\n  \t    changes = undefined;\n\n  \tif (/\\*/.test(keypath)) {\n  \t\tchanges = {};\n\n  \t\tgetMatchingKeypaths(root, getKeypath(normalise(keypath))).forEach(function (keypath) {\n  \t\t\tvar value = root.viewmodel.get(keypath);\n\n  \t\t\tif (!is__isNumeric(value)) {\n  \t\t\t\tthrow new Error(shared_add__errorMessage);\n  \t\t\t}\n\n  \t\t\tchanges[keypath.str] = value + d;\n  \t\t});\n\n  \t\treturn root.set(changes);\n  \t}\n\n  \tvalue = root.get(keypath);\n\n  \tif (!is__isNumeric(value)) {\n  \t\tthrow new Error(shared_add__errorMessage);\n  \t}\n\n  \treturn root.set(keypath, +value + d);\n  }\n\n  var prototype_add = Ractive$add;\n  function Ractive$add(keypath, d) {\n  \treturn shared_add(this, keypath, d === undefined ? 1 : +d);\n  }\n\n  var requestAnimationFrame;\n\n  // If window doesn't exist, we don't need requestAnimationFrame\n  if (typeof window === \"undefined\") {\n  \trequestAnimationFrame = null;\n  } else {\n  \t// https://gist.github.com/paulirish/1579671\n  \t(function (vendors, lastTime, window) {\n\n  \t\tvar x, setTimeout;\n\n  \t\tif (window.requestAnimationFrame) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tfor (x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n  \t\t\twindow.requestAnimationFrame = window[vendors[x] + \"RequestAnimationFrame\"];\n  \t\t}\n\n  \t\tif (!window.requestAnimationFrame) {\n  \t\t\tsetTimeout = window.setTimeout;\n\n  \t\t\twindow.requestAnimationFrame = function (callback) {\n  \t\t\t\tvar currTime, timeToCall, id;\n\n  \t\t\t\tcurrTime = Date.now();\n  \t\t\t\ttimeToCall = Math.max(0, 16 - (currTime - lastTime));\n  \t\t\t\tid = setTimeout(function () {\n  \t\t\t\t\tcallback(currTime + timeToCall);\n  \t\t\t\t}, timeToCall);\n\n  \t\t\t\tlastTime = currTime + timeToCall;\n  \t\t\t\treturn id;\n  \t\t\t};\n  \t\t}\n  \t})(vendors, 0, window);\n\n  \trequestAnimationFrame = window.requestAnimationFrame;\n  }\n\n  var rAF = requestAnimationFrame;\n\n  var getTime;\n\n  if (typeof window !== \"undefined\" && window.performance && typeof window.performance.now === \"function\") {\n  \tgetTime = function () {\n  \t\treturn window.performance.now();\n  \t};\n  } else {\n  \tgetTime = function () {\n  \t\treturn Date.now();\n  \t};\n  }\n\n  var utils_getTime = getTime;\n\n  var deprecations = {\n  \tconstruct: {\n  \t\tdeprecated: \"beforeInit\",\n  \t\treplacement: \"onconstruct\"\n  \t},\n  \trender: {\n  \t\tdeprecated: \"init\",\n  \t\tmessage: \"The \\\"init\\\" method has been deprecated \" + \"and will likely be removed in a future release. \" + \"You can either use the \\\"oninit\\\" method which will fire \" + \"only once prior to, and regardless of, any eventual ractive \" + \"instance being rendered, or if you need to access the \" + \"rendered DOM, use \\\"onrender\\\" instead. \" + \"See http://docs.ractivejs.org/latest/migrating for more information.\"\n  \t},\n  \tcomplete: {\n  \t\tdeprecated: \"complete\",\n  \t\treplacement: \"oncomplete\"\n  \t}\n  };\n\n  function Hook(event) {\n  \tthis.event = event;\n  \tthis.method = \"on\" + event;\n  \tthis.deprecate = deprecations[event];\n  }\n\n  Hook.prototype.fire = function (ractive, arg) {\n  \tfunction call(method) {\n  \t\tif (ractive[method]) {\n  \t\t\targ ? ractive[method](arg) : ractive[method]();\n  \t\t\treturn true;\n  \t\t}\n  \t}\n\n  \tcall(this.method);\n\n  \tif (!ractive[this.method] && this.deprecate && call(this.deprecate.deprecated)) {\n  \t\tif (this.deprecate.message) {\n  \t\t\twarnIfDebug(this.deprecate.message);\n  \t\t} else {\n  \t\t\twarnIfDebug(\"The method \\\"%s\\\" has been deprecated in favor of \\\"%s\\\" and will likely be removed in a future release. See http://docs.ractivejs.org/latest/migrating for more information.\", this.deprecate.deprecated, this.deprecate.replacement);\n  \t\t}\n  \t}\n\n  \targ ? ractive.fire(this.event, arg) : ractive.fire(this.event);\n  };\n\n  var hooks_Hook = Hook;\n\n  function addToArray(array, value) {\n  \tvar index = array.indexOf(value);\n\n  \tif (index === -1) {\n  \t\tarray.push(value);\n  \t}\n  }\n\n  function arrayContains(array, value) {\n  \tfor (var i = 0, c = array.length; i < c; i++) {\n  \t\tif (array[i] == value) {\n  \t\t\treturn true;\n  \t\t}\n  \t}\n\n  \treturn false;\n  }\n\n  function arrayContentsMatch(a, b) {\n  \tvar i;\n\n  \tif (!isArray(a) || !isArray(b)) {\n  \t\treturn false;\n  \t}\n\n  \tif (a.length !== b.length) {\n  \t\treturn false;\n  \t}\n\n  \ti = a.length;\n  \twhile (i--) {\n  \t\tif (a[i] !== b[i]) {\n  \t\t\treturn false;\n  \t\t}\n  \t}\n\n  \treturn true;\n  }\n\n  function ensureArray(x) {\n  \tif (typeof x === \"string\") {\n  \t\treturn [x];\n  \t}\n\n  \tif (x === undefined) {\n  \t\treturn [];\n  \t}\n\n  \treturn x;\n  }\n\n  function lastItem(array) {\n  \treturn array[array.length - 1];\n  }\n\n  function removeFromArray(array, member) {\n  \tvar index = array.indexOf(member);\n\n  \tif (index !== -1) {\n  \t\tarray.splice(index, 1);\n  \t}\n  }\n\n  function toArray(arrayLike) {\n  \tvar array = [],\n  \t    i = arrayLike.length;\n  \twhile (i--) {\n  \t\tarray[i] = arrayLike[i];\n  \t}\n\n  \treturn array;\n  }\n\n  var _Promise,\n      PENDING = {},\n      FULFILLED = {},\n      REJECTED = {};\n\n  if (typeof Promise === \"function\") {\n  \t// use native Promise\n  \t_Promise = Promise;\n  } else {\n  \t_Promise = function (callback) {\n  \t\tvar fulfilledHandlers = [],\n  \t\t    rejectedHandlers = [],\n  \t\t    state = PENDING,\n  \t\t    result,\n  \t\t    dispatchHandlers,\n  \t\t    makeResolver,\n  \t\t    fulfil,\n  \t\t    reject,\n  \t\t    promise;\n\n  \t\tmakeResolver = function (newState) {\n  \t\t\treturn function (value) {\n  \t\t\t\tif (state !== PENDING) {\n  \t\t\t\t\treturn;\n  \t\t\t\t}\n\n  \t\t\t\tresult = value;\n  \t\t\t\tstate = newState;\n\n  \t\t\t\tdispatchHandlers = makeDispatcher(state === FULFILLED ? fulfilledHandlers : rejectedHandlers, result);\n\n  \t\t\t\t// dispatch onFulfilled and onRejected handlers asynchronously\n  \t\t\t\twait(dispatchHandlers);\n  \t\t\t};\n  \t\t};\n\n  \t\tfulfil = makeResolver(FULFILLED);\n  \t\treject = makeResolver(REJECTED);\n\n  \t\ttry {\n  \t\t\tcallback(fulfil, reject);\n  \t\t} catch (err) {\n  \t\t\treject(err);\n  \t\t}\n\n  \t\tpromise = {\n  \t\t\t// `then()` returns a Promise - 2.2.7\n  \t\t\tthen: function (onFulfilled, onRejected) {\n  \t\t\t\tvar promise2 = new _Promise(function (fulfil, reject) {\n\n  \t\t\t\t\tvar processResolutionHandler = function (handler, handlers, forward) {\n\n  \t\t\t\t\t\t// 2.2.1.1\n  \t\t\t\t\t\tif (typeof handler === \"function\") {\n  \t\t\t\t\t\t\thandlers.push(function (p1result) {\n  \t\t\t\t\t\t\t\tvar x;\n\n  \t\t\t\t\t\t\t\ttry {\n  \t\t\t\t\t\t\t\t\tx = handler(p1result);\n  \t\t\t\t\t\t\t\t\tutils_Promise__resolve(promise2, x, fulfil, reject);\n  \t\t\t\t\t\t\t\t} catch (err) {\n  \t\t\t\t\t\t\t\t\treject(err);\n  \t\t\t\t\t\t\t\t}\n  \t\t\t\t\t\t\t});\n  \t\t\t\t\t\t} else {\n  \t\t\t\t\t\t\t// Forward the result of promise1 to promise2, if resolution handlers\n  \t\t\t\t\t\t\t// are not given\n  \t\t\t\t\t\t\thandlers.push(forward);\n  \t\t\t\t\t\t}\n  \t\t\t\t\t};\n\n  \t\t\t\t\t// 2.2\n  \t\t\t\t\tprocessResolutionHandler(onFulfilled, fulfilledHandlers, fulfil);\n  \t\t\t\t\tprocessResolutionHandler(onRejected, rejectedHandlers, reject);\n\n  \t\t\t\t\tif (state !== PENDING) {\n  \t\t\t\t\t\t// If the promise has resolved already, dispatch the appropriate handlers asynchronously\n  \t\t\t\t\t\twait(dispatchHandlers);\n  \t\t\t\t\t}\n  \t\t\t\t});\n\n  \t\t\t\treturn promise2;\n  \t\t\t}\n  \t\t};\n\n  \t\tpromise[\"catch\"] = function (onRejected) {\n  \t\t\treturn this.then(null, onRejected);\n  \t\t};\n\n  \t\treturn promise;\n  \t};\n\n  \t_Promise.all = function (promises) {\n  \t\treturn new _Promise(function (fulfil, reject) {\n  \t\t\tvar result = [],\n  \t\t\t    pending,\n  \t\t\t    i,\n  \t\t\t    processPromise;\n\n  \t\t\tif (!promises.length) {\n  \t\t\t\tfulfil(result);\n  \t\t\t\treturn;\n  \t\t\t}\n\n  \t\t\tprocessPromise = function (promise, i) {\n  \t\t\t\tif (promise && typeof promise.then === \"function\") {\n  \t\t\t\t\tpromise.then(function (value) {\n  \t\t\t\t\t\tresult[i] = value;\n  \t\t\t\t\t\t--pending || fulfil(result);\n  \t\t\t\t\t}, reject);\n  \t\t\t\t} else {\n  \t\t\t\t\tresult[i] = promise;\n  \t\t\t\t\t--pending || fulfil(result);\n  \t\t\t\t}\n  \t\t\t};\n\n  \t\t\tpending = i = promises.length;\n  \t\t\twhile (i--) {\n  \t\t\t\tprocessPromise(promises[i], i);\n  \t\t\t}\n  \t\t});\n  \t};\n\n  \t_Promise.resolve = function (value) {\n  \t\treturn new _Promise(function (fulfil) {\n  \t\t\tfulfil(value);\n  \t\t});\n  \t};\n\n  \t_Promise.reject = function (reason) {\n  \t\treturn new _Promise(function (fulfil, reject) {\n  \t\t\treject(reason);\n  \t\t});\n  \t};\n  }\n\n  var utils_Promise = _Promise;\n\n  // TODO use MutationObservers or something to simulate setImmediate\n  function wait(callback) {\n  \tsetTimeout(callback, 0);\n  }\n\n  function makeDispatcher(handlers, result) {\n  \treturn function () {\n  \t\tvar handler;\n\n  \t\twhile (handler = handlers.shift()) {\n  \t\t\thandler(result);\n  \t\t}\n  \t};\n  }\n\n  function utils_Promise__resolve(promise, x, fulfil, reject) {\n  \t// Promise Resolution Procedure\n  \tvar then;\n\n  \t// 2.3.1\n  \tif (x === promise) {\n  \t\tthrow new TypeError(\"A promise's fulfillment handler cannot return the same promise\");\n  \t}\n\n  \t// 2.3.2\n  \tif (x instanceof _Promise) {\n  \t\tx.then(fulfil, reject);\n  \t}\n\n  \t// 2.3.3\n  \telse if (x && (typeof x === \"object\" || typeof x === \"function\")) {\n  \t\ttry {\n  \t\t\tthen = x.then; // 2.3.3.1\n  \t\t} catch (e) {\n  \t\t\treject(e); // 2.3.3.2\n  \t\t\treturn;\n  \t\t}\n\n  \t\t// 2.3.3.3\n  \t\tif (typeof then === \"function\") {\n  \t\t\tvar called, resolvePromise, rejectPromise;\n\n  \t\t\tresolvePromise = function (y) {\n  \t\t\t\tif (called) {\n  \t\t\t\t\treturn;\n  \t\t\t\t}\n  \t\t\t\tcalled = true;\n  \t\t\t\tutils_Promise__resolve(promise, y, fulfil, reject);\n  \t\t\t};\n\n  \t\t\trejectPromise = function (r) {\n  \t\t\t\tif (called) {\n  \t\t\t\t\treturn;\n  \t\t\t\t}\n  \t\t\t\tcalled = true;\n  \t\t\t\treject(r);\n  \t\t\t};\n\n  \t\t\ttry {\n  \t\t\t\tthen.call(x, resolvePromise, rejectPromise);\n  \t\t\t} catch (e) {\n  \t\t\t\tif (!called) {\n  \t\t\t\t\t// 2.3.3.3.4.1\n  \t\t\t\t\treject(e); // 2.3.3.3.4.2\n  \t\t\t\t\tcalled = true;\n  \t\t\t\t\treturn;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t} else {\n  \t\t\tfulfil(x);\n  \t\t}\n  \t} else {\n  \t\tfulfil(x);\n  \t}\n  }\n\n  var getInnerContext = function (fragment) {\n  \tdo {\n  \t\tif (fragment.context !== undefined) {\n  \t\t\treturn fragment.context;\n  \t\t}\n  \t} while (fragment = fragment.parent);\n\n  \treturn rootKeypath;\n  };\n\n  var shared_resolveRef = resolveRef;\n\n  function resolveRef(ractive, ref, fragment) {\n  \tvar keypath;\n\n  \tref = normalise(ref);\n\n  \t// If a reference begins '~/', it's a top-level reference\n  \tif (ref.substr(0, 2) === \"~/\") {\n  \t\tkeypath = getKeypath(ref.substring(2));\n  \t\tcreateMappingIfNecessary(ractive, keypath.firstKey, fragment);\n  \t}\n\n  \t// If a reference begins with '.', it's either a restricted reference or\n  \t// an ancestor reference...\n  \telse if (ref[0] === \".\") {\n  \t\tkeypath = resolveAncestorRef(getInnerContext(fragment), ref);\n\n  \t\tif (keypath) {\n  \t\t\tcreateMappingIfNecessary(ractive, keypath.firstKey, fragment);\n  \t\t}\n  \t}\n\n  \t// ...otherwise we need to figure out the keypath based on context\n  \telse {\n  \t\tkeypath = resolveAmbiguousReference(ractive, getKeypath(ref), fragment);\n  \t}\n\n  \treturn keypath;\n  }\n\n  function resolveAncestorRef(baseContext, ref) {\n  \tvar contextKeys;\n\n  \t// TODO...\n  \tif (baseContext != undefined && typeof baseContext !== \"string\") {\n  \t\tbaseContext = baseContext.str;\n  \t}\n\n  \t// {{.}} means 'current context'\n  \tif (ref === \".\") return getKeypath(baseContext);\n\n  \tcontextKeys = baseContext ? baseContext.split(\".\") : [];\n\n  \t// ancestor references (starting \"../\") go up the tree\n  \tif (ref.substr(0, 3) === \"../\") {\n  \t\twhile (ref.substr(0, 3) === \"../\") {\n  \t\t\tif (!contextKeys.length) {\n  \t\t\t\tthrow new Error(\"Could not resolve reference - too many \\\"../\\\" prefixes\");\n  \t\t\t}\n\n  \t\t\tcontextKeys.pop();\n  \t\t\tref = ref.substring(3);\n  \t\t}\n\n  \t\tcontextKeys.push(ref);\n  \t\treturn getKeypath(contextKeys.join(\".\"));\n  \t}\n\n  \t// not an ancestor reference - must be a restricted reference (prepended with \".\" or \"./\")\n  \tif (!baseContext) {\n  \t\treturn getKeypath(ref.replace(/^\\.\\/?/, \"\"));\n  \t}\n\n  \treturn getKeypath(baseContext + ref.replace(/^\\.\\//, \".\"));\n  }\n\n  function resolveAmbiguousReference(ractive, ref, fragment, isParentLookup) {\n  \tvar context, key, parentValue, hasContextChain, parentKeypath;\n\n  \tif (ref.isRoot) {\n  \t\treturn ref;\n  \t}\n\n  \tkey = ref.firstKey;\n\n  \twhile (fragment) {\n  \t\tcontext = fragment.context;\n  \t\tfragment = fragment.parent;\n\n  \t\tif (!context) {\n  \t\t\tcontinue;\n  \t\t}\n\n  \t\thasContextChain = true;\n  \t\tparentValue = ractive.viewmodel.get(context);\n\n  \t\tif (parentValue && (typeof parentValue === \"object\" || typeof parentValue === \"function\") && key in parentValue) {\n  \t\t\treturn context.join(ref.str);\n  \t\t}\n  \t}\n\n  \t// Root/computed/mapped property?\n  \tif (isRootProperty(ractive.viewmodel, key)) {\n  \t\treturn ref;\n  \t}\n\n  \t// If this is an inline component, and it's not isolated, we\n  \t// can try going up the scope chain\n  \tif (ractive.parent && !ractive.isolated) {\n  \t\thasContextChain = true;\n  \t\tfragment = ractive.component.parentFragment;\n\n  \t\tkey = getKeypath(key);\n\n  \t\tif (parentKeypath = resolveAmbiguousReference(ractive.parent, key, fragment, true)) {\n  \t\t\t// We need to create an inter-component binding\n  \t\t\tractive.viewmodel.map(key, {\n  \t\t\t\torigin: ractive.parent.viewmodel,\n  \t\t\t\tkeypath: parentKeypath\n  \t\t\t});\n\n  \t\t\treturn ref;\n  \t\t}\n  \t}\n\n  \t// If there's no context chain, and the instance is either a) isolated or\n  \t// b) an orphan, then we know that the keypath is identical to the reference\n  \tif (!isParentLookup && !hasContextChain) {\n  \t\t// the data object needs to have a property by this name,\n  \t\t// to prevent future failed lookups\n  \t\tractive.viewmodel.set(ref, undefined);\n  \t\treturn ref;\n  \t}\n  }\n\n  function createMappingIfNecessary(ractive, key) {\n  \tvar parentKeypath;\n\n  \tif (!ractive.parent || ractive.isolated || isRootProperty(ractive.viewmodel, key)) {\n  \t\treturn;\n  \t}\n\n  \tkey = getKeypath(key);\n\n  \tif (parentKeypath = resolveAmbiguousReference(ractive.parent, key, ractive.component.parentFragment, true)) {\n  \t\tractive.viewmodel.map(key, {\n  \t\t\torigin: ractive.parent.viewmodel,\n  \t\t\tkeypath: parentKeypath\n  \t\t});\n  \t}\n  }\n\n  function isRootProperty(viewmodel, key) {\n  \t// special case for reference to root\n  \treturn key === \"\" || key in viewmodel.data || key in viewmodel.computations || key in viewmodel.mappings;\n  }\n\n  function teardown(x) {\n    x.teardown();\n  }\n\n  function methodCallers__unbind(x) {\n    x.unbind();\n  }\n\n  function methodCallers__unrender(x) {\n    x.unrender();\n  }\n\n  function cancel(x) {\n    x.cancel();\n  }\n\n  var TransitionManager = function (callback, parent) {\n  \tthis.callback = callback;\n  \tthis.parent = parent;\n\n  \tthis.intros = [];\n  \tthis.outros = [];\n\n  \tthis.children = [];\n  \tthis.totalChildren = this.outroChildren = 0;\n\n  \tthis.detachQueue = [];\n  \tthis.decoratorQueue = [];\n  \tthis.outrosComplete = false;\n\n  \tif (parent) {\n  \t\tparent.addChild(this);\n  \t}\n  };\n\n  TransitionManager.prototype = {\n  \taddChild: function (child) {\n  \t\tthis.children.push(child);\n\n  \t\tthis.totalChildren += 1;\n  \t\tthis.outroChildren += 1;\n  \t},\n\n  \tdecrementOutros: function () {\n  \t\tthis.outroChildren -= 1;\n  \t\tcheck(this);\n  \t},\n\n  \tdecrementTotal: function () {\n  \t\tthis.totalChildren -= 1;\n  \t\tcheck(this);\n  \t},\n\n  \tadd: function (transition) {\n  \t\tvar list = transition.isIntro ? this.intros : this.outros;\n  \t\tlist.push(transition);\n  \t},\n\n  \taddDecorator: function (decorator) {\n  \t\tthis.decoratorQueue.push(decorator);\n  \t},\n\n  \tremove: function (transition) {\n  \t\tvar list = transition.isIntro ? this.intros : this.outros;\n  \t\tremoveFromArray(list, transition);\n  \t\tcheck(this);\n  \t},\n\n  \tinit: function () {\n  \t\tthis.ready = true;\n  \t\tcheck(this);\n  \t},\n\n  \tdetachNodes: function () {\n  \t\tthis.decoratorQueue.forEach(teardown);\n  \t\tthis.detachQueue.forEach(detach);\n  \t\tthis.children.forEach(detachNodes);\n  \t}\n  };\n\n  function detach(element) {\n  \telement.detach();\n  }\n\n  function detachNodes(tm) {\n  \ttm.detachNodes();\n  }\n\n  function check(tm) {\n  \tif (!tm.ready || tm.outros.length || tm.outroChildren) return;\n\n  \t// If all outros are complete, and we haven't already done this,\n  \t// we notify the parent if there is one, otherwise\n  \t// start detaching nodes\n  \tif (!tm.outrosComplete) {\n  \t\tif (tm.parent) {\n  \t\t\ttm.parent.decrementOutros(tm);\n  \t\t} else {\n  \t\t\ttm.detachNodes();\n  \t\t}\n\n  \t\ttm.outrosComplete = true;\n  \t}\n\n  \t// Once everything is done, we can notify parent transition\n  \t// manager and call the callback\n  \tif (!tm.intros.length && !tm.totalChildren) {\n  \t\tif (typeof tm.callback === \"function\") {\n  \t\t\ttm.callback();\n  \t\t}\n\n  \t\tif (tm.parent) {\n  \t\t\ttm.parent.decrementTotal();\n  \t\t}\n  \t}\n  }\n\n  var global_TransitionManager = TransitionManager;\n\n  var batch,\n      runloop,\n      unresolved = [],\n      changeHook = new hooks_Hook(\"change\");\n\n  runloop = {\n  \tstart: function (instance, returnPromise) {\n  \t\tvar promise, fulfilPromise;\n\n  \t\tif (returnPromise) {\n  \t\t\tpromise = new utils_Promise(function (f) {\n  \t\t\t\treturn fulfilPromise = f;\n  \t\t\t});\n  \t\t}\n\n  \t\tbatch = {\n  \t\t\tpreviousBatch: batch,\n  \t\t\ttransitionManager: new global_TransitionManager(fulfilPromise, batch && batch.transitionManager),\n  \t\t\tviews: [],\n  \t\t\ttasks: [],\n  \t\t\tractives: [],\n  \t\t\tinstance: instance\n  \t\t};\n\n  \t\tif (instance) {\n  \t\t\tbatch.ractives.push(instance);\n  \t\t}\n\n  \t\treturn promise;\n  \t},\n\n  \tend: function () {\n  \t\tflushChanges();\n\n  \t\tbatch.transitionManager.init();\n  \t\tif (!batch.previousBatch && !!batch.instance) batch.instance.viewmodel.changes = [];\n  \t\tbatch = batch.previousBatch;\n  \t},\n\n  \taddRactive: function (ractive) {\n  \t\tif (batch) {\n  \t\t\taddToArray(batch.ractives, ractive);\n  \t\t}\n  \t},\n\n  \tregisterTransition: function (transition) {\n  \t\ttransition._manager = batch.transitionManager;\n  \t\tbatch.transitionManager.add(transition);\n  \t},\n\n  \tregisterDecorator: function (decorator) {\n  \t\tbatch.transitionManager.addDecorator(decorator);\n  \t},\n\n  \taddView: function (view) {\n  \t\tbatch.views.push(view);\n  \t},\n\n  \taddUnresolved: function (thing) {\n  \t\tunresolved.push(thing);\n  \t},\n\n  \tremoveUnresolved: function (thing) {\n  \t\tremoveFromArray(unresolved, thing);\n  \t},\n\n  \t// synchronise node detachments with transition ends\n  \tdetachWhenReady: function (thing) {\n  \t\tbatch.transitionManager.detachQueue.push(thing);\n  \t},\n\n  \tscheduleTask: function (task, postRender) {\n  \t\tvar _batch;\n\n  \t\tif (!batch) {\n  \t\t\ttask();\n  \t\t} else {\n  \t\t\t_batch = batch;\n  \t\t\twhile (postRender && _batch.previousBatch) {\n  \t\t\t\t// this can't happen until the DOM has been fully updated\n  \t\t\t\t// otherwise in some situations (with components inside elements)\n  \t\t\t\t// transitions and decorators will initialise prematurely\n  \t\t\t\t_batch = _batch.previousBatch;\n  \t\t\t}\n\n  \t\t\t_batch.tasks.push(task);\n  \t\t}\n  \t}\n  };\n\n  var global_runloop = runloop;\n\n  function flushChanges() {\n  \tvar i, thing, changeHash;\n\n  \twhile (batch.ractives.length) {\n  \t\tthing = batch.ractives.pop();\n  \t\tchangeHash = thing.viewmodel.applyChanges();\n\n  \t\tif (changeHash) {\n  \t\t\tchangeHook.fire(thing, changeHash);\n  \t\t}\n  \t}\n\n  \tattemptKeypathResolution();\n\n  \t// Now that changes have been fully propagated, we can update the DOM\n  \t// and complete other tasks\n  \tfor (i = 0; i < batch.views.length; i += 1) {\n  \t\tbatch.views[i].update();\n  \t}\n  \tbatch.views.length = 0;\n\n  \tfor (i = 0; i < batch.tasks.length; i += 1) {\n  \t\tbatch.tasks[i]();\n  \t}\n  \tbatch.tasks.length = 0;\n\n  \t// If updating the view caused some model blowback - e.g. a triple\n  \t// containing <option> elements caused the binding on the <select>\n  \t// to update - then we start over\n  \tif (batch.ractives.length) return flushChanges();\n  }\n\n  function attemptKeypathResolution() {\n  \tvar i, item, keypath, resolved;\n\n  \ti = unresolved.length;\n\n  \t// see if we can resolve any unresolved references\n  \twhile (i--) {\n  \t\titem = unresolved[i];\n\n  \t\tif (item.keypath) {\n  \t\t\t// it resolved some other way. TODO how? two-way binding? Seems\n  \t\t\t// weird that we'd still end up here\n  \t\t\tunresolved.splice(i, 1);\n  \t\t\tcontinue; // avoid removing the wrong thing should the next condition be true\n  \t\t}\n\n  \t\tif (keypath = shared_resolveRef(item.root, item.ref, item.parentFragment)) {\n  \t\t\t(resolved || (resolved = [])).push({\n  \t\t\t\titem: item,\n  \t\t\t\tkeypath: keypath\n  \t\t\t});\n\n  \t\t\tunresolved.splice(i, 1);\n  \t\t}\n  \t}\n\n  \tif (resolved) {\n  \t\tresolved.forEach(global_runloop__resolve);\n  \t}\n  }\n\n  function global_runloop__resolve(resolved) {\n  \tresolved.item.resolve(resolved.keypath);\n  }\n\n  var queue = [];\n\n  var animations = {\n  \ttick: function () {\n  \t\tvar i, animation, now;\n\n  \t\tnow = utils_getTime();\n\n  \t\tglobal_runloop.start();\n\n  \t\tfor (i = 0; i < queue.length; i += 1) {\n  \t\t\tanimation = queue[i];\n\n  \t\t\tif (!animation.tick(now)) {\n  \t\t\t\t// animation is complete, remove it from the stack, and decrement i so we don't miss one\n  \t\t\t\tqueue.splice(i--, 1);\n  \t\t\t}\n  \t\t}\n\n  \t\tglobal_runloop.end();\n\n  \t\tif (queue.length) {\n  \t\t\trAF(animations.tick);\n  \t\t} else {\n  \t\t\tanimations.running = false;\n  \t\t}\n  \t},\n\n  \tadd: function (animation) {\n  \t\tqueue.push(animation);\n\n  \t\tif (!animations.running) {\n  \t\t\tanimations.running = true;\n  \t\t\trAF(animations.tick);\n  \t\t}\n  \t},\n\n  \t// TODO optimise this\n  \tabort: function (keypath, root) {\n  \t\tvar i = queue.length,\n  \t\t    animation;\n\n  \t\twhile (i--) {\n  \t\t\tanimation = queue[i];\n\n  \t\t\tif (animation.root === root && animation.keypath === keypath) {\n  \t\t\t\tanimation.stop();\n  \t\t\t}\n  \t\t}\n  \t}\n  };\n\n  var shared_animations = animations;\n\n  var Animation = function (options) {\n  \tvar key;\n\n  \tthis.startTime = Date.now();\n\n  \t// from and to\n  \tfor (key in options) {\n  \t\tif (options.hasOwnProperty(key)) {\n  \t\t\tthis[key] = options[key];\n  \t\t}\n  \t}\n\n  \tthis.interpolator = shared_interpolate(this.from, this.to, this.root, this.interpolator);\n  \tthis.running = true;\n\n  \tthis.tick();\n  };\n\n  Animation.prototype = {\n  \ttick: function () {\n  \t\tvar elapsed, t, value, timeNow, index, keypath;\n\n  \t\tkeypath = this.keypath;\n\n  \t\tif (this.running) {\n  \t\t\ttimeNow = Date.now();\n  \t\t\telapsed = timeNow - this.startTime;\n\n  \t\t\tif (elapsed >= this.duration) {\n  \t\t\t\tif (keypath !== null) {\n  \t\t\t\t\tglobal_runloop.start(this.root);\n  \t\t\t\t\tthis.root.viewmodel.set(keypath, this.to);\n  \t\t\t\t\tglobal_runloop.end();\n  \t\t\t\t}\n\n  \t\t\t\tif (this.step) {\n  \t\t\t\t\tthis.step(1, this.to);\n  \t\t\t\t}\n\n  \t\t\t\tthis.complete(this.to);\n\n  \t\t\t\tindex = this.root._animations.indexOf(this);\n\n  \t\t\t\t// TODO investigate why this happens\n  \t\t\t\tif (index === -1) {\n  \t\t\t\t\twarnIfDebug(\"Animation was not found\");\n  \t\t\t\t}\n\n  \t\t\t\tthis.root._animations.splice(index, 1);\n\n  \t\t\t\tthis.running = false;\n  \t\t\t\treturn false; // remove from the stack\n  \t\t\t}\n\n  \t\t\tt = this.easing ? this.easing(elapsed / this.duration) : elapsed / this.duration;\n\n  \t\t\tif (keypath !== null) {\n  \t\t\t\tvalue = this.interpolator(t);\n  \t\t\t\tglobal_runloop.start(this.root);\n  \t\t\t\tthis.root.viewmodel.set(keypath, value);\n  \t\t\t\tglobal_runloop.end();\n  \t\t\t}\n\n  \t\t\tif (this.step) {\n  \t\t\t\tthis.step(t, value);\n  \t\t\t}\n\n  \t\t\treturn true; // keep in the stack\n  \t\t}\n\n  \t\treturn false; // remove from the stack\n  \t},\n\n  \tstop: function () {\n  \t\tvar index;\n\n  \t\tthis.running = false;\n\n  \t\tindex = this.root._animations.indexOf(this);\n\n  \t\t// TODO investigate why this happens\n  \t\tif (index === -1) {\n  \t\t\twarnIfDebug(\"Animation was not found\");\n  \t\t}\n\n  \t\tthis.root._animations.splice(index, 1);\n  \t}\n  };\n\n  var animate_Animation = Animation;\n\n  var prototype_animate = Ractive$animate;\n\n  var noAnimation = { stop: noop };\n  function Ractive$animate(keypath, to, options) {\n  \tvar promise, fulfilPromise, k, animation, animations, easing, duration, step, complete, makeValueCollector, currentValues, collectValue, dummy, dummyOptions;\n\n  \tpromise = new utils_Promise(function (fulfil) {\n  \t\treturn fulfilPromise = fulfil;\n  \t});\n\n  \t// animate multiple keypaths\n  \tif (typeof keypath === \"object\") {\n  \t\toptions = to || {};\n  \t\teasing = options.easing;\n  \t\tduration = options.duration;\n\n  \t\tanimations = [];\n\n  \t\t// we don't want to pass the `step` and `complete` handlers, as they will\n  \t\t// run for each animation! So instead we'll store the handlers and create\n  \t\t// our own...\n  \t\tstep = options.step;\n  \t\tcomplete = options.complete;\n\n  \t\tif (step || complete) {\n  \t\t\tcurrentValues = {};\n\n  \t\t\toptions.step = null;\n  \t\t\toptions.complete = null;\n\n  \t\t\tmakeValueCollector = function (keypath) {\n  \t\t\t\treturn function (t, value) {\n  \t\t\t\t\tcurrentValues[keypath] = value;\n  \t\t\t\t};\n  \t\t\t};\n  \t\t}\n\n  \t\tfor (k in keypath) {\n  \t\t\tif (keypath.hasOwnProperty(k)) {\n  \t\t\t\tif (step || complete) {\n  \t\t\t\t\tcollectValue = makeValueCollector(k);\n  \t\t\t\t\toptions = { easing: easing, duration: duration };\n\n  \t\t\t\t\tif (step) {\n  \t\t\t\t\t\toptions.step = collectValue;\n  \t\t\t\t\t}\n  \t\t\t\t}\n\n  \t\t\t\toptions.complete = complete ? collectValue : noop;\n  \t\t\t\tanimations.push(animate(this, k, keypath[k], options));\n  \t\t\t}\n  \t\t}\n\n  \t\t// Create a dummy animation, to facilitate step/complete\n  \t\t// callbacks, and Promise fulfilment\n  \t\tdummyOptions = { easing: easing, duration: duration };\n\n  \t\tif (step) {\n  \t\t\tdummyOptions.step = function (t) {\n  \t\t\t\treturn step(t, currentValues);\n  \t\t\t};\n  \t\t}\n\n  \t\tif (complete) {\n  \t\t\tpromise.then(function (t) {\n  \t\t\t\treturn complete(t, currentValues);\n  \t\t\t});\n  \t\t}\n\n  \t\tdummyOptions.complete = fulfilPromise;\n\n  \t\tdummy = animate(this, null, null, dummyOptions);\n  \t\tanimations.push(dummy);\n\n  \t\tpromise.stop = function () {\n  \t\t\tvar animation;\n\n  \t\t\twhile (animation = animations.pop()) {\n  \t\t\t\tanimation.stop();\n  \t\t\t}\n\n  \t\t\tif (dummy) {\n  \t\t\t\tdummy.stop();\n  \t\t\t}\n  \t\t};\n\n  \t\treturn promise;\n  \t}\n\n  \t// animate a single keypath\n  \toptions = options || {};\n\n  \tif (options.complete) {\n  \t\tpromise.then(options.complete);\n  \t}\n\n  \toptions.complete = fulfilPromise;\n  \tanimation = animate(this, keypath, to, options);\n\n  \tpromise.stop = function () {\n  \t\treturn animation.stop();\n  \t};\n  \treturn promise;\n  }\n\n  function animate(root, keypath, to, options) {\n  \tvar easing, duration, animation, from;\n\n  \tif (keypath) {\n  \t\tkeypath = getKeypath(normalise(keypath));\n  \t}\n\n  \tif (keypath !== null) {\n  \t\tfrom = root.viewmodel.get(keypath);\n  \t}\n\n  \t// cancel any existing animation\n  \t// TODO what about upstream/downstream keypaths?\n  \tshared_animations.abort(keypath, root);\n\n  \t// don't bother animating values that stay the same\n  \tif (isEqual(from, to)) {\n  \t\tif (options.complete) {\n  \t\t\toptions.complete(options.to);\n  \t\t}\n\n  \t\treturn noAnimation;\n  \t}\n\n  \t// easing function\n  \tif (options.easing) {\n  \t\tif (typeof options.easing === \"function\") {\n  \t\t\teasing = options.easing;\n  \t\t} else {\n  \t\t\teasing = root.easing[options.easing];\n  \t\t}\n\n  \t\tif (typeof easing !== \"function\") {\n  \t\t\teasing = null;\n  \t\t}\n  \t}\n\n  \t// duration\n  \tduration = options.duration === undefined ? 400 : options.duration;\n\n  \t// TODO store keys, use an internal set method\n  \tanimation = new animate_Animation({\n  \t\tkeypath: keypath,\n  \t\tfrom: from,\n  \t\tto: to,\n  \t\troot: root,\n  \t\tduration: duration,\n  \t\teasing: easing,\n  \t\tinterpolator: options.interpolator,\n\n  \t\t// TODO wrap callbacks if necessary, to use instance as context\n  \t\tstep: options.step,\n  \t\tcomplete: options.complete\n  \t});\n\n  \tshared_animations.add(animation);\n  \troot._animations.push(animation);\n\n  \treturn animation;\n  }\n\n  var prototype_detach = Ractive$detach;\n  var prototype_detach__detachHook = new hooks_Hook(\"detach\");\n  function Ractive$detach() {\n  \tif (this.detached) {\n  \t\treturn this.detached;\n  \t}\n\n  \tif (this.el) {\n  \t\tremoveFromArray(this.el.__ractive_instances__, this);\n  \t}\n  \tthis.detached = this.fragment.detach();\n  \tprototype_detach__detachHook.fire(this);\n  \treturn this.detached;\n  }\n\n  var prototype_find = Ractive$find;\n\n  function Ractive$find(selector) {\n  \tif (!this.el) {\n  \t\treturn null;\n  \t}\n\n  \treturn this.fragment.find(selector);\n  }\n\n  var test = Query$test;\n  function Query$test(item, noDirty) {\n  \tvar itemMatches;\n\n  \tif (this._isComponentQuery) {\n  \t\titemMatches = !this.selector || item.name === this.selector;\n  \t} else {\n  \t\titemMatches = item.node ? matches(item.node, this.selector) : null;\n  \t}\n\n  \tif (itemMatches) {\n  \t\tthis.push(item.node || item.instance);\n\n  \t\tif (!noDirty) {\n  \t\t\tthis._makeDirty();\n  \t\t}\n\n  \t\treturn true;\n  \t}\n  }\n\n  var makeQuery_cancel = function () {\n  \tvar liveQueries, selector, index;\n\n  \tliveQueries = this._root[this._isComponentQuery ? \"liveComponentQueries\" : \"liveQueries\"];\n  \tselector = this.selector;\n\n  \tindex = liveQueries.indexOf(selector);\n\n  \tif (index !== -1) {\n  \t\tliveQueries.splice(index, 1);\n  \t\tliveQueries[selector] = null;\n  \t}\n  };\n\n  var sortByItemPosition = function (a, b) {\n  \tvar ancestryA, ancestryB, oldestA, oldestB, mutualAncestor, indexA, indexB, fragments, fragmentA, fragmentB;\n\n  \tancestryA = getAncestry(a.component || a._ractive.proxy);\n  \tancestryB = getAncestry(b.component || b._ractive.proxy);\n\n  \toldestA = lastItem(ancestryA);\n  \toldestB = lastItem(ancestryB);\n\n  \t// remove items from the end of both ancestries as long as they are identical\n  \t// - the final one removed is the closest mutual ancestor\n  \twhile (oldestA && oldestA === oldestB) {\n  \t\tancestryA.pop();\n  \t\tancestryB.pop();\n\n  \t\tmutualAncestor = oldestA;\n\n  \t\toldestA = lastItem(ancestryA);\n  \t\toldestB = lastItem(ancestryB);\n  \t}\n\n  \t// now that we have the mutual ancestor, we can find which is earliest\n  \toldestA = oldestA.component || oldestA;\n  \toldestB = oldestB.component || oldestB;\n\n  \tfragmentA = oldestA.parentFragment;\n  \tfragmentB = oldestB.parentFragment;\n\n  \t// if both items share a parent fragment, our job is easy\n  \tif (fragmentA === fragmentB) {\n  \t\tindexA = fragmentA.items.indexOf(oldestA);\n  \t\tindexB = fragmentB.items.indexOf(oldestB);\n\n  \t\t// if it's the same index, it means one contains the other,\n  \t\t// so we see which has the longest ancestry\n  \t\treturn indexA - indexB || ancestryA.length - ancestryB.length;\n  \t}\n\n  \t// if mutual ancestor is a section, we first test to see which section\n  \t// fragment comes first\n  \tif (fragments = mutualAncestor.fragments) {\n  \t\tindexA = fragments.indexOf(fragmentA);\n  \t\tindexB = fragments.indexOf(fragmentB);\n\n  \t\treturn indexA - indexB || ancestryA.length - ancestryB.length;\n  \t}\n\n  \tthrow new Error(\"An unexpected condition was met while comparing the position of two components. Please file an issue at https://github.com/RactiveJS/Ractive/issues - thanks!\");\n  };\n\n  function getParent(item) {\n  \tvar parentFragment;\n\n  \tif (parentFragment = item.parentFragment) {\n  \t\treturn parentFragment.owner;\n  \t}\n\n  \tif (item.component && (parentFragment = item.component.parentFragment)) {\n  \t\treturn parentFragment.owner;\n  \t}\n  }\n\n  function getAncestry(item) {\n  \tvar ancestry, ancestor;\n\n  \tancestry = [item];\n\n  \tancestor = getParent(item);\n\n  \twhile (ancestor) {\n  \t\tancestry.push(ancestor);\n  \t\tancestor = getParent(ancestor);\n  \t}\n\n  \treturn ancestry;\n  }\n\n  var sortByDocumentPosition = function (node, otherNode) {\n  \tvar bitmask;\n\n  \tif (node.compareDocumentPosition) {\n  \t\tbitmask = node.compareDocumentPosition(otherNode);\n  \t\treturn bitmask & 2 ? 1 : -1;\n  \t}\n\n  \t// In old IE, we can piggy back on the mechanism for\n  \t// comparing component positions\n  \treturn sortByItemPosition(node, otherNode);\n  };\n\n  var sort = function () {\n  \tthis.sort(this._isComponentQuery ? sortByItemPosition : sortByDocumentPosition);\n  \tthis._dirty = false;\n  };\n\n  var makeQuery_dirty = function () {\n  \tvar _this = this;\n\n  \tif (!this._dirty) {\n  \t\tthis._dirty = true;\n\n  \t\t// Once the DOM has been updated, ensure the query\n  \t\t// is correctly ordered\n  \t\tglobal_runloop.scheduleTask(function () {\n  \t\t\t_this._sort();\n  \t\t});\n  \t}\n  };\n\n  var remove = function (nodeOrComponent) {\n  \tvar index = this.indexOf(this._isComponentQuery ? nodeOrComponent.instance : nodeOrComponent);\n\n  \tif (index !== -1) {\n  \t\tthis.splice(index, 1);\n  \t}\n  };\n\n  var _makeQuery = makeQuery;\n  function makeQuery(ractive, selector, live, isComponentQuery) {\n  \tvar query = [];\n\n  \tdefineProperties(query, {\n  \t\tselector: { value: selector },\n  \t\tlive: { value: live },\n\n  \t\t_isComponentQuery: { value: isComponentQuery },\n  \t\t_test: { value: test }\n  \t});\n\n  \tif (!live) {\n  \t\treturn query;\n  \t}\n\n  \tdefineProperties(query, {\n  \t\tcancel: { value: makeQuery_cancel },\n\n  \t\t_root: { value: ractive },\n  \t\t_sort: { value: sort },\n  \t\t_makeDirty: { value: makeQuery_dirty },\n  \t\t_remove: { value: remove },\n\n  \t\t_dirty: { value: false, writable: true }\n  \t});\n\n  \treturn query;\n  }\n\n  var prototype_findAll = Ractive$findAll;\n  function Ractive$findAll(selector, options) {\n  \tvar liveQueries, query;\n\n  \tif (!this.el) {\n  \t\treturn [];\n  \t}\n\n  \toptions = options || {};\n  \tliveQueries = this._liveQueries;\n\n  \t// Shortcut: if we're maintaining a live query with this\n  \t// selector, we don't need to traverse the parallel DOM\n  \tif (query = liveQueries[selector]) {\n\n  \t\t// Either return the exact same query, or (if not live) a snapshot\n  \t\treturn options && options.live ? query : query.slice();\n  \t}\n\n  \tquery = _makeQuery(this, selector, !!options.live, false);\n\n  \t// Add this to the list of live queries Ractive needs to maintain,\n  \t// if applicable\n  \tif (query.live) {\n  \t\tliveQueries.push(selector);\n  \t\tliveQueries[\"_\" + selector] = query;\n  \t}\n\n  \tthis.fragment.findAll(selector, query);\n  \treturn query;\n  }\n\n  var prototype_findAllComponents = Ractive$findAllComponents;\n  function Ractive$findAllComponents(selector, options) {\n  \tvar liveQueries, query;\n\n  \toptions = options || {};\n  \tliveQueries = this._liveComponentQueries;\n\n  \t// Shortcut: if we're maintaining a live query with this\n  \t// selector, we don't need to traverse the parallel DOM\n  \tif (query = liveQueries[selector]) {\n\n  \t\t// Either return the exact same query, or (if not live) a snapshot\n  \t\treturn options && options.live ? query : query.slice();\n  \t}\n\n  \tquery = _makeQuery(this, selector, !!options.live, true);\n\n  \t// Add this to the list of live queries Ractive needs to maintain,\n  \t// if applicable\n  \tif (query.live) {\n  \t\tliveQueries.push(selector);\n  \t\tliveQueries[\"_\" + selector] = query;\n  \t}\n\n  \tthis.fragment.findAllComponents(selector, query);\n  \treturn query;\n  }\n\n  var prototype_findComponent = Ractive$findComponent;\n\n  function Ractive$findComponent(selector) {\n  \treturn this.fragment.findComponent(selector);\n  }\n\n  var findContainer = Ractive$findContainer;\n\n  function Ractive$findContainer(selector) {\n  \tif (this.container) {\n  \t\tif (this.container.component && this.container.component.name === selector) {\n  \t\t\treturn this.container;\n  \t\t} else {\n  \t\t\treturn this.container.findContainer(selector);\n  \t\t}\n  \t}\n\n  \treturn null;\n  }\n\n  var findParent = Ractive$findParent;\n\n  function Ractive$findParent(selector) {\n\n  \tif (this.parent) {\n  \t\tif (this.parent.component && this.parent.component.name === selector) {\n  \t\t\treturn this.parent;\n  \t\t} else {\n  \t\t\treturn this.parent.findParent(selector);\n  \t\t}\n  \t}\n\n  \treturn null;\n  }\n\n  var eventStack = {\n  \tenqueue: function (ractive, event) {\n  \t\tif (ractive.event) {\n  \t\t\tractive._eventQueue = ractive._eventQueue || [];\n  \t\t\tractive._eventQueue.push(ractive.event);\n  \t\t}\n  \t\tractive.event = event;\n  \t},\n  \tdequeue: function (ractive) {\n  \t\tif (ractive._eventQueue && ractive._eventQueue.length) {\n  \t\t\tractive.event = ractive._eventQueue.pop();\n  \t\t} else {\n  \t\t\tdelete ractive.event;\n  \t\t}\n  \t}\n  };\n\n  var shared_eventStack = eventStack;\n\n  var shared_fireEvent = fireEvent;\n\n  function fireEvent(ractive, eventName) {\n  \tvar options = arguments[2] === undefined ? {} : arguments[2];\n\n  \tif (!eventName) {\n  \t\treturn;\n  \t}\n\n  \tif (!options.event) {\n  \t\toptions.event = {\n  \t\t\tname: eventName,\n  \t\t\t// until event not included as argument default\n  \t\t\t_noArg: true\n  \t\t};\n  \t} else {\n  \t\toptions.event.name = eventName;\n  \t}\n\n  \tvar eventNames = getKeypath(eventName).wildcardMatches();\n  \tfireEventAs(ractive, eventNames, options.event, options.args, true);\n  }\n\n  function fireEventAs(ractive, eventNames, event, args) {\n  \tvar initialFire = arguments[4] === undefined ? false : arguments[4];\n\n  \tvar subscribers,\n  \t    i,\n  \t    bubble = true;\n\n  \tshared_eventStack.enqueue(ractive, event);\n\n  \tfor (i = eventNames.length; i >= 0; i--) {\n  \t\tsubscribers = ractive._subs[eventNames[i]];\n\n  \t\tif (subscribers) {\n  \t\t\tbubble = notifySubscribers(ractive, subscribers, event, args) && bubble;\n  \t\t}\n  \t}\n\n  \tshared_eventStack.dequeue(ractive);\n\n  \tif (ractive.parent && bubble) {\n\n  \t\tif (initialFire && ractive.component) {\n  \t\t\tvar fullName = ractive.component.name + \".\" + eventNames[eventNames.length - 1];\n  \t\t\teventNames = getKeypath(fullName).wildcardMatches();\n\n  \t\t\tif (event) {\n  \t\t\t\tevent.component = ractive;\n  \t\t\t}\n  \t\t}\n\n  \t\tfireEventAs(ractive.parent, eventNames, event, args);\n  \t}\n  }\n\n  function notifySubscribers(ractive, subscribers, event, args) {\n  \tvar originalEvent = null,\n  \t    stopEvent = false;\n\n  \tif (event && !event._noArg) {\n  \t\targs = [event].concat(args);\n  \t}\n\n  \t// subscribers can be modified inflight, e.g. \"once\" functionality\n  \t// so we need to copy to make sure everyone gets called\n  \tsubscribers = subscribers.slice();\n\n  \tfor (var i = 0, len = subscribers.length; i < len; i += 1) {\n  \t\tif (subscribers[i].apply(ractive, args) === false) {\n  \t\t\tstopEvent = true;\n  \t\t}\n  \t}\n\n  \tif (event && !event._noArg && stopEvent && (originalEvent = event.original)) {\n  \t\toriginalEvent.preventDefault && originalEvent.preventDefault();\n  \t\toriginalEvent.stopPropagation && originalEvent.stopPropagation();\n  \t}\n\n  \treturn !stopEvent;\n  }\n\n  var prototype_fire = Ractive$fire;\n  function Ractive$fire(eventName) {\n\n  \tvar options = {\n  \t\targs: Array.prototype.slice.call(arguments, 1)\n  \t};\n\n  \tshared_fireEvent(this, eventName, options);\n  }\n\n  var prototype_get = Ractive$get;\n  var options = {\n  \tcapture: true, // top-level calls should be intercepted\n  \tnoUnwrap: true, // wrapped values should NOT be unwrapped\n  \tfullRootGet: true // root get should return mappings\n  };\n  function Ractive$get(keypath) {\n  \tvar value;\n\n  \tkeypath = getKeypath(normalise(keypath));\n  \tvalue = this.viewmodel.get(keypath, options);\n\n  \t// Create inter-component binding, if necessary\n  \tif (value === undefined && this.parent && !this.isolated) {\n  \t\tif (shared_resolveRef(this, keypath.str, this.component.parentFragment)) {\n  \t\t\t// creates binding as side-effect, if appropriate\n  \t\t\tvalue = this.viewmodel.get(keypath);\n  \t\t}\n  \t}\n\n  \treturn value;\n  }\n\n  var insert = Ractive$insert;\n\n  var insertHook = new hooks_Hook(\"insert\");\n  function Ractive$insert(target, anchor) {\n  \tif (!this.fragment.rendered) {\n  \t\t// TODO create, and link to, documentation explaining this\n  \t\tthrow new Error(\"The API has changed - you must call `ractive.render(target[, anchor])` to render your Ractive instance. Once rendered you can use `ractive.insert()`.\");\n  \t}\n\n  \ttarget = getElement(target);\n  \tanchor = getElement(anchor) || null;\n\n  \tif (!target) {\n  \t\tthrow new Error(\"You must specify a valid target to insert into\");\n  \t}\n\n  \ttarget.insertBefore(this.detach(), anchor);\n  \tthis.el = target;\n\n  \t(target.__ractive_instances__ || (target.__ractive_instances__ = [])).push(this);\n  \tthis.detached = null;\n\n  \tfireInsertHook(this);\n  }\n\n  function fireInsertHook(ractive) {\n  \tinsertHook.fire(ractive);\n\n  \tractive.findAllComponents(\"*\").forEach(function (child) {\n  \t\tfireInsertHook(child.instance);\n  \t});\n  }\n\n  var prototype_merge = Ractive$merge;\n  function Ractive$merge(keypath, array, options) {\n  \tvar currentArray, promise;\n\n  \tkeypath = getKeypath(normalise(keypath));\n  \tcurrentArray = this.viewmodel.get(keypath);\n\n  \t// If either the existing value or the new value isn't an\n  \t// array, just do a regular set\n  \tif (!isArray(currentArray) || !isArray(array)) {\n  \t\treturn this.set(keypath, array, options && options.complete);\n  \t}\n\n  \t// Manage transitions\n  \tpromise = global_runloop.start(this, true);\n  \tthis.viewmodel.merge(keypath, currentArray, array, options);\n  \tglobal_runloop.end();\n\n  \treturn promise;\n  }\n\n  var Observer = function (ractive, keypath, callback, options) {\n  \tthis.root = ractive;\n  \tthis.keypath = keypath;\n  \tthis.callback = callback;\n  \tthis.defer = options.defer;\n\n  \t// default to root as context, but allow it to be overridden\n  \tthis.context = options && options.context ? options.context : ractive;\n  };\n\n  Observer.prototype = {\n  \tinit: function (immediate) {\n  \t\tthis.value = this.root.get(this.keypath.str);\n\n  \t\tif (immediate !== false) {\n  \t\t\tthis.update();\n  \t\t} else {\n  \t\t\tthis.oldValue = this.value;\n  \t\t}\n  \t},\n\n  \tsetValue: function (value) {\n  \t\tvar _this = this;\n\n  \t\tif (!isEqual(value, this.value)) {\n  \t\t\tthis.value = value;\n\n  \t\t\tif (this.defer && this.ready) {\n  \t\t\t\tglobal_runloop.scheduleTask(function () {\n  \t\t\t\t\treturn _this.update();\n  \t\t\t\t});\n  \t\t\t} else {\n  \t\t\t\tthis.update();\n  \t\t\t}\n  \t\t}\n  \t},\n\n  \tupdate: function () {\n  \t\t// Prevent infinite loops\n  \t\tif (this.updating) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tthis.updating = true;\n\n  \t\tthis.callback.call(this.context, this.value, this.oldValue, this.keypath.str);\n  \t\tthis.oldValue = this.value;\n\n  \t\tthis.updating = false;\n  \t}\n  };\n\n  var observe_Observer = Observer;\n\n  var observe_getPattern = getPattern;\n  function getPattern(ractive, pattern) {\n  \tvar matchingKeypaths, values;\n\n  \tmatchingKeypaths = getMatchingKeypaths(ractive, pattern);\n\n  \tvalues = {};\n  \tmatchingKeypaths.forEach(function (keypath) {\n  \t\tvalues[keypath.str] = ractive.get(keypath.str);\n  \t});\n\n  \treturn values;\n  }\n\n  var PatternObserver,\n      slice = Array.prototype.slice;\n\n  PatternObserver = function (ractive, keypath, callback, options) {\n  \tthis.root = ractive;\n\n  \tthis.callback = callback;\n  \tthis.defer = options.defer;\n\n  \tthis.keypath = keypath;\n  \tthis.regex = new RegExp(\"^\" + keypath.str.replace(/\\./g, \"\\\\.\").replace(/\\*/g, \"([^\\\\.]+)\") + \"$\");\n  \tthis.values = {};\n\n  \tif (this.defer) {\n  \t\tthis.proxies = [];\n  \t}\n\n  \t// default to root as context, but allow it to be overridden\n  \tthis.context = options && options.context ? options.context : ractive;\n  };\n\n  PatternObserver.prototype = {\n  \tinit: function (immediate) {\n  \t\tvar values, keypath;\n\n  \t\tvalues = observe_getPattern(this.root, this.keypath);\n\n  \t\tif (immediate !== false) {\n  \t\t\tfor (keypath in values) {\n  \t\t\t\tif (values.hasOwnProperty(keypath)) {\n  \t\t\t\t\tthis.update(getKeypath(keypath));\n  \t\t\t\t}\n  \t\t\t}\n  \t\t} else {\n  \t\t\tthis.values = values;\n  \t\t}\n  \t},\n\n  \tupdate: function (keypath) {\n  \t\tvar _this = this;\n\n  \t\tvar values;\n\n  \t\tif (keypath.isPattern) {\n  \t\t\tvalues = observe_getPattern(this.root, keypath);\n\n  \t\t\tfor (keypath in values) {\n  \t\t\t\tif (values.hasOwnProperty(keypath)) {\n  \t\t\t\t\tthis.update(getKeypath(keypath));\n  \t\t\t\t}\n  \t\t\t}\n\n  \t\t\treturn;\n  \t\t}\n\n  \t\t// special case - array mutation should not trigger `array.*`\n  \t\t// pattern observer with `array.length`\n  \t\tif (this.root.viewmodel.implicitChanges[keypath.str]) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tif (this.defer && this.ready) {\n  \t\t\tglobal_runloop.scheduleTask(function () {\n  \t\t\t\treturn _this.getProxy(keypath).update();\n  \t\t\t});\n  \t\t\treturn;\n  \t\t}\n\n  \t\tthis.reallyUpdate(keypath);\n  \t},\n\n  \treallyUpdate: function (keypath) {\n  \t\tvar keypathStr, value, keys, args;\n\n  \t\tkeypathStr = keypath.str;\n  \t\tvalue = this.root.viewmodel.get(keypath);\n\n  \t\t// Prevent infinite loops\n  \t\tif (this.updating) {\n  \t\t\tthis.values[keypathStr] = value;\n  \t\t\treturn;\n  \t\t}\n\n  \t\tthis.updating = true;\n\n  \t\tif (!isEqual(value, this.values[keypathStr]) || !this.ready) {\n  \t\t\tkeys = slice.call(this.regex.exec(keypathStr), 1);\n  \t\t\targs = [value, this.values[keypathStr], keypathStr].concat(keys);\n\n  \t\t\tthis.values[keypathStr] = value;\n  \t\t\tthis.callback.apply(this.context, args);\n  \t\t}\n\n  \t\tthis.updating = false;\n  \t},\n\n  \tgetProxy: function (keypath) {\n  \t\tvar _this = this;\n\n  \t\tif (!this.proxies[keypath.str]) {\n  \t\t\tthis.proxies[keypath.str] = {\n  \t\t\t\tupdate: function () {\n  \t\t\t\t\treturn _this.reallyUpdate(keypath);\n  \t\t\t\t}\n  \t\t\t};\n  \t\t}\n\n  \t\treturn this.proxies[keypath.str];\n  \t}\n  };\n\n  var observe_PatternObserver = PatternObserver;\n\n  var observe_getObserverFacade = getObserverFacade;\n  var emptyObject = {};\n  function getObserverFacade(ractive, keypath, callback, options) {\n  \tvar observer, isPatternObserver, cancelled;\n\n  \tkeypath = getKeypath(normalise(keypath));\n  \toptions = options || emptyObject;\n\n  \t// pattern observers are treated differently\n  \tif (keypath.isPattern) {\n  \t\tobserver = new observe_PatternObserver(ractive, keypath, callback, options);\n  \t\tractive.viewmodel.patternObservers.push(observer);\n  \t\tisPatternObserver = true;\n  \t} else {\n  \t\tobserver = new observe_Observer(ractive, keypath, callback, options);\n  \t}\n\n  \tobserver.init(options.init);\n  \tractive.viewmodel.register(keypath, observer, isPatternObserver ? \"patternObservers\" : \"observers\");\n\n  \t// This flag allows observers to initialise even with undefined values\n  \tobserver.ready = true;\n\n  \tvar facade = {\n  \t\tcancel: function () {\n  \t\t\tvar index;\n\n  \t\t\tif (cancelled) {\n  \t\t\t\treturn;\n  \t\t\t}\n\n  \t\t\tif (isPatternObserver) {\n  \t\t\t\tindex = ractive.viewmodel.patternObservers.indexOf(observer);\n\n  \t\t\t\tractive.viewmodel.patternObservers.splice(index, 1);\n  \t\t\t\tractive.viewmodel.unregister(keypath, observer, \"patternObservers\");\n  \t\t\t} else {\n  \t\t\t\tractive.viewmodel.unregister(keypath, observer, \"observers\");\n  \t\t\t}\n  \t\t\tcancelled = true;\n  \t\t}\n  \t};\n\n  \tractive._observers.push(facade);\n  \treturn facade;\n  }\n\n  var observe = Ractive$observe;\n  function Ractive$observe(keypath, callback, options) {\n\n  \tvar observers, map, keypaths, i;\n\n  \t// Allow a map of keypaths to handlers\n  \tif (isObject(keypath)) {\n  \t\toptions = callback;\n  \t\tmap = keypath;\n\n  \t\tobservers = [];\n\n  \t\tfor (keypath in map) {\n  \t\t\tif (map.hasOwnProperty(keypath)) {\n  \t\t\t\tcallback = map[keypath];\n  \t\t\t\tobservers.push(this.observe(keypath, callback, options));\n  \t\t\t}\n  \t\t}\n\n  \t\treturn {\n  \t\t\tcancel: function () {\n  \t\t\t\twhile (observers.length) {\n  \t\t\t\t\tobservers.pop().cancel();\n  \t\t\t\t}\n  \t\t\t}\n  \t\t};\n  \t}\n\n  \t// Allow `ractive.observe( callback )` - i.e. observe entire model\n  \tif (typeof keypath === \"function\") {\n  \t\toptions = callback;\n  \t\tcallback = keypath;\n  \t\tkeypath = \"\";\n\n  \t\treturn observe_getObserverFacade(this, keypath, callback, options);\n  \t}\n\n  \tkeypaths = keypath.split(\" \");\n\n  \t// Single keypath\n  \tif (keypaths.length === 1) {\n  \t\treturn observe_getObserverFacade(this, keypath, callback, options);\n  \t}\n\n  \t// Multiple space-separated keypaths\n  \tobservers = [];\n\n  \ti = keypaths.length;\n  \twhile (i--) {\n  \t\tkeypath = keypaths[i];\n\n  \t\tif (keypath) {\n  \t\t\tobservers.push(observe_getObserverFacade(this, keypath, callback, options));\n  \t\t}\n  \t}\n\n  \treturn {\n  \t\tcancel: function () {\n  \t\t\twhile (observers.length) {\n  \t\t\t\tobservers.pop().cancel();\n  \t\t\t}\n  \t\t}\n  \t};\n  }\n\n  var observeOnce = Ractive$observeOnce;\n\n  function Ractive$observeOnce(property, callback, options) {\n\n  \tvar observer = this.observe(property, function () {\n  \t\tcallback.apply(this, arguments);\n  \t\tobserver.cancel();\n  \t}, { init: false, defer: options && options.defer });\n\n  \treturn observer;\n  }\n\n  var shared_trim = function (str) {\n    return str.trim();\n  };\n\n  var notEmptyString = function (str) {\n    return str !== \"\";\n  };\n\n  var off = Ractive$off;\n  function Ractive$off(eventName, callback) {\n  \tvar _this = this;\n\n  \tvar eventNames;\n\n  \t// if no arguments specified, remove all callbacks\n  \tif (!eventName) {\n  \t\t// TODO use this code instead, once the following issue has been resolved\n  \t\t// in PhantomJS (tests are unpassable otherwise!)\n  \t\t// https://github.com/ariya/phantomjs/issues/11856\n  \t\t// defineProperty( this, '_subs', { value: create( null ), configurable: true });\n  \t\tfor (eventName in this._subs) {\n  \t\t\tdelete this._subs[eventName];\n  \t\t}\n  \t} else {\n  \t\t// Handle multiple space-separated event names\n  \t\teventNames = eventName.split(\" \").map(shared_trim).filter(notEmptyString);\n\n  \t\teventNames.forEach(function (eventName) {\n  \t\t\tvar subscribers, index;\n\n  \t\t\t// If we have subscribers for this event...\n  \t\t\tif (subscribers = _this._subs[eventName]) {\n  \t\t\t\t// ...if a callback was specified, only remove that\n  \t\t\t\tif (callback) {\n  \t\t\t\t\tindex = subscribers.indexOf(callback);\n  \t\t\t\t\tif (index !== -1) {\n  \t\t\t\t\t\tsubscribers.splice(index, 1);\n  \t\t\t\t\t}\n  \t\t\t\t}\n\n  \t\t\t\t// ...otherwise remove all callbacks\n  \t\t\t\telse {\n  \t\t\t\t\t_this._subs[eventName] = [];\n  \t\t\t\t}\n  \t\t\t}\n  \t\t});\n  \t}\n\n  \treturn this;\n  }\n\n  var on = Ractive$on;\n  function Ractive$on(eventName, callback) {\n  \tvar _this = this;\n\n  \tvar listeners, n, eventNames;\n\n  \t// allow mutliple listeners to be bound in one go\n  \tif (typeof eventName === \"object\") {\n  \t\tlisteners = [];\n\n  \t\tfor (n in eventName) {\n  \t\t\tif (eventName.hasOwnProperty(n)) {\n  \t\t\t\tlisteners.push(this.on(n, eventName[n]));\n  \t\t\t}\n  \t\t}\n\n  \t\treturn {\n  \t\t\tcancel: function () {\n  \t\t\t\tvar listener;\n\n  \t\t\t\twhile (listener = listeners.pop()) {\n  \t\t\t\t\tlistener.cancel();\n  \t\t\t\t}\n  \t\t\t}\n  \t\t};\n  \t}\n\n  \t// Handle multiple space-separated event names\n  \teventNames = eventName.split(\" \").map(shared_trim).filter(notEmptyString);\n\n  \teventNames.forEach(function (eventName) {\n  \t\t(_this._subs[eventName] || (_this._subs[eventName] = [])).push(callback);\n  \t});\n\n  \treturn {\n  \t\tcancel: function () {\n  \t\t\treturn _this.off(eventName, callback);\n  \t\t}\n  \t};\n  }\n\n  var once = Ractive$once;\n\n  function Ractive$once(eventName, handler) {\n\n  \tvar listener = this.on(eventName, function () {\n  \t\thandler.apply(this, arguments);\n  \t\tlistener.cancel();\n  \t});\n\n  \t// so we can still do listener.cancel() manually\n  \treturn listener;\n  }\n\n  // This function takes an array, the name of a mutator method, and the\n  // arguments to call that mutator method with, and returns an array that\n  // maps the old indices to their new indices.\n\n  // So if you had something like this...\n  //\n  //     array = [ 'a', 'b', 'c', 'd' ];\n  //     array.push( 'e' );\n  //\n  // ...you'd get `[ 0, 1, 2, 3 ]` - in other words, none of the old indices\n  // have changed. If you then did this...\n  //\n  //     array.unshift( 'z' );\n  //\n  // ...the indices would be `[ 1, 2, 3, 4, 5 ]` - every item has been moved\n  // one higher to make room for the 'z'. If you removed an item, the new index\n  // would be -1...\n  //\n  //     array.splice( 2, 2 );\n  //\n  // ...this would result in [ 0, 1, -1, -1, 2, 3 ].\n  //\n  // This information is used to enable fast, non-destructive shuffling of list\n  // sections when you do e.g. `ractive.splice( 'items', 2, 2 );\n\n  var shared_getNewIndices = getNewIndices;\n\n  function getNewIndices(array, methodName, args) {\n  \tvar spliceArguments,\n  \t    len,\n  \t    newIndices = [],\n  \t    removeStart,\n  \t    removeEnd,\n  \t    balance,\n  \t    i;\n\n  \tspliceArguments = getSpliceEquivalent(array, methodName, args);\n\n  \tif (!spliceArguments) {\n  \t\treturn null; // TODO support reverse and sort?\n  \t}\n\n  \tlen = array.length;\n  \tbalance = spliceArguments.length - 2 - spliceArguments[1];\n\n  \tremoveStart = Math.min(len, spliceArguments[0]);\n  \tremoveEnd = removeStart + spliceArguments[1];\n\n  \tfor (i = 0; i < removeStart; i += 1) {\n  \t\tnewIndices.push(i);\n  \t}\n\n  \tfor (; i < removeEnd; i += 1) {\n  \t\tnewIndices.push(-1);\n  \t}\n\n  \tfor (; i < len; i += 1) {\n  \t\tnewIndices.push(i + balance);\n  \t}\n\n  \t// there is a net shift for the rest of the array starting with index + balance\n  \tif (balance !== 0) {\n  \t\tnewIndices.touchedFrom = spliceArguments[0];\n  \t} else {\n  \t\tnewIndices.touchedFrom = array.length;\n  \t}\n\n  \treturn newIndices;\n  }\n\n  // The pop, push, shift an unshift methods can all be represented\n  // as an equivalent splice\n  function getSpliceEquivalent(array, methodName, args) {\n  \tswitch (methodName) {\n  \t\tcase \"splice\":\n  \t\t\tif (args[0] !== undefined && args[0] < 0) {\n  \t\t\t\targs[0] = array.length + Math.max(args[0], -array.length);\n  \t\t\t}\n\n  \t\t\twhile (args.length < 2) {\n  \t\t\t\targs.push(0);\n  \t\t\t}\n\n  \t\t\t// ensure we only remove elements that exist\n  \t\t\targs[1] = Math.min(args[1], array.length - args[0]);\n\n  \t\t\treturn args;\n\n  \t\tcase \"sort\":\n  \t\tcase \"reverse\":\n  \t\t\treturn null;\n\n  \t\tcase \"pop\":\n  \t\t\tif (array.length) {\n  \t\t\t\treturn [array.length - 1, 1];\n  \t\t\t}\n  \t\t\treturn [0, 0];\n\n  \t\tcase \"push\":\n  \t\t\treturn [array.length, 0].concat(args);\n\n  \t\tcase \"shift\":\n  \t\t\treturn [0, array.length ? 1 : 0];\n\n  \t\tcase \"unshift\":\n  \t\t\treturn [0, 0].concat(args);\n  \t}\n  }\n\n  var arrayProto = Array.prototype;\n\n  var makeArrayMethod = function (methodName) {\n  \treturn function (keypath) {\n  \t\tfor (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n  \t\t\targs[_key - 1] = arguments[_key];\n  \t\t}\n\n  \t\tvar array,\n  \t\t    newIndices = [],\n  \t\t    len,\n  \t\t    promise,\n  \t\t    result;\n\n  \t\tkeypath = getKeypath(normalise(keypath));\n\n  \t\tarray = this.viewmodel.get(keypath);\n  \t\tlen = array.length;\n\n  \t\tif (!isArray(array)) {\n  \t\t\tthrow new Error(\"Called ractive.\" + methodName + \"('\" + keypath.str + \"'), but '\" + keypath.str + \"' does not refer to an array\");\n  \t\t}\n\n  \t\tnewIndices = shared_getNewIndices(array, methodName, args);\n\n  \t\tresult = arrayProto[methodName].apply(array, args);\n  \t\tpromise = global_runloop.start(this, true).then(function () {\n  \t\t\treturn result;\n  \t\t});\n\n  \t\tif (!!newIndices) {\n  \t\t\tthis.viewmodel.smartUpdate(keypath, array, newIndices);\n  \t\t} else {\n  \t\t\tthis.viewmodel.mark(keypath);\n  \t\t}\n\n  \t\tglobal_runloop.end();\n\n  \t\treturn promise;\n  \t};\n  };\n\n  var pop = makeArrayMethod(\"pop\");\n\n  var push = makeArrayMethod(\"push\");\n\n  var css,\n      update,\n      styleElement,\n      head,\n      styleSheet,\n      inDom,\n      global_css__prefix = \"/* Ractive.js component styles */\\n\",\n      styles = [],\n      dirty = false;\n\n  if (!isClient) {\n  \t// TODO handle encapsulated CSS in server-rendered HTML!\n  \tcss = {\n  \t\tadd: noop,\n  \t\tapply: noop\n  \t};\n  } else {\n  \tstyleElement = document.createElement(\"style\");\n  \tstyleElement.type = \"text/css\";\n\n  \thead = document.getElementsByTagName(\"head\")[0];\n\n  \tinDom = false;\n\n  \t// Internet Exploder won't let you use styleSheet.innerHTML - we have to\n  \t// use styleSheet.cssText instead\n  \tstyleSheet = styleElement.styleSheet;\n\n  \tupdate = function () {\n  \t\tvar css = global_css__prefix + styles.map(function (s) {\n  \t\t\treturn \"\\n/* {\" + s.id + \"} */\\n\" + s.styles;\n  \t\t}).join(\"\\n\");\n\n  \t\tif (styleSheet) {\n  \t\t\tstyleSheet.cssText = css;\n  \t\t} else {\n  \t\t\tstyleElement.innerHTML = css;\n  \t\t}\n\n  \t\tif (!inDom) {\n  \t\t\thead.appendChild(styleElement);\n  \t\t\tinDom = true;\n  \t\t}\n  \t};\n\n  \tcss = {\n  \t\tadd: function (s) {\n  \t\t\tstyles.push(s);\n  \t\t\tdirty = true;\n  \t\t},\n\n  \t\tapply: function () {\n  \t\t\tif (dirty) {\n  \t\t\t\tupdate();\n  \t\t\t\tdirty = false;\n  \t\t\t}\n  \t\t}\n  \t};\n  }\n\n  var global_css = css;\n\n  var prototype_render = Ractive$render;\n\n  var renderHook = new hooks_Hook(\"render\"),\n      completeHook = new hooks_Hook(\"complete\");\n  function Ractive$render(target, anchor) {\n  \tvar _this = this;\n\n  \tvar promise, instances, transitionsEnabled;\n\n  \t// if `noIntro` is `true`, temporarily disable transitions\n  \ttransitionsEnabled = this.transitionsEnabled;\n  \tif (this.noIntro) {\n  \t\tthis.transitionsEnabled = false;\n  \t}\n\n  \tpromise = global_runloop.start(this, true);\n  \tglobal_runloop.scheduleTask(function () {\n  \t\treturn renderHook.fire(_this);\n  \t}, true);\n\n  \tif (this.fragment.rendered) {\n  \t\tthrow new Error(\"You cannot call ractive.render() on an already rendered instance! Call ractive.unrender() first\");\n  \t}\n\n  \ttarget = getElement(target) || this.el;\n  \tanchor = getElement(anchor) || this.anchor;\n\n  \tthis.el = target;\n  \tthis.anchor = anchor;\n\n  \tif (!this.append && target) {\n  \t\t// Teardown any existing instances *before* trying to set up the new one -\n  \t\t// avoids certain weird bugs\n  \t\tvar others = target.__ractive_instances__;\n  \t\tif (others && others.length) {\n  \t\t\tremoveOtherInstances(others);\n  \t\t}\n\n  \t\t// make sure we are the only occupants\n  \t\ttarget.innerHTML = \"\"; // TODO is this quicker than removeChild? Initial research inconclusive\n  \t}\n\n  \tif (this.cssId) {\n  \t\t// ensure encapsulated CSS is up-to-date\n  \t\tglobal_css.apply();\n  \t}\n\n  \tif (target) {\n  \t\tif (!(instances = target.__ractive_instances__)) {\n  \t\t\ttarget.__ractive_instances__ = [this];\n  \t\t} else {\n  \t\t\tinstances.push(this);\n  \t\t}\n\n  \t\tif (anchor) {\n  \t\t\ttarget.insertBefore(this.fragment.render(), anchor);\n  \t\t} else {\n  \t\t\ttarget.appendChild(this.fragment.render());\n  \t\t}\n  \t}\n\n  \tglobal_runloop.end();\n\n  \tthis.transitionsEnabled = transitionsEnabled;\n\n  \treturn promise.then(function () {\n  \t\treturn completeHook.fire(_this);\n  \t});\n  }\n\n  function removeOtherInstances(others) {\n  \tothers.splice(0, others.length).forEach(teardown);\n  }\n\n  var adaptConfigurator = {\n  \textend: function (Parent, proto, options) {\n  \t\tproto.adapt = custom_adapt__combine(proto.adapt, ensureArray(options.adapt));\n  \t},\n\n  \tinit: function () {}\n  };\n\n  var custom_adapt = adaptConfigurator;\n\n  function custom_adapt__combine(a, b) {\n  \tvar c = a.slice(),\n  \t    i = b.length;\n\n  \twhile (i--) {\n  \t\tif (! ~c.indexOf(b[i])) {\n  \t\t\tc.push(b[i]);\n  \t\t}\n  \t}\n\n  \treturn c;\n  }\n\n  var transform = transformCss;\n\n  var selectorsPattern = /(?:^|\\})?\\s*([^\\{\\}]+)\\s*\\{/g,\n      commentsPattern = /\\/\\*.*?\\*\\//g,\n      selectorUnitPattern = /((?:(?:\\[[^\\]+]\\])|(?:[^\\s\\+\\>\\~:]))+)((?::[^\\s\\+\\>\\~\\(]+(?:\\([^\\)]+\\))?)?\\s*[\\s\\+\\>\\~]?)\\s*/g,\n      mediaQueryPattern = /^@media/,\n      dataRvcGuidPattern = /\\[data-ractive-css~=\"\\{[a-z0-9-]+\\}\"]/g;\n  function transformCss(css, id) {\n  \tvar transformed, dataAttr, addGuid;\n\n  \tdataAttr = \"[data-ractive-css~=\\\"{\" + id + \"}\\\"]\";\n\n  \taddGuid = function (selector) {\n  \t\tvar selectorUnits,\n  \t\t    match,\n  \t\t    unit,\n  \t\t    base,\n  \t\t    prepended,\n  \t\t    appended,\n  \t\t    i,\n  \t\t    transformed = [];\n\n  \t\tselectorUnits = [];\n\n  \t\twhile (match = selectorUnitPattern.exec(selector)) {\n  \t\t\tselectorUnits.push({\n  \t\t\t\tstr: match[0],\n  \t\t\t\tbase: match[1],\n  \t\t\t\tmodifiers: match[2]\n  \t\t\t});\n  \t\t}\n\n  \t\t// For each simple selector within the selector, we need to create a version\n  \t\t// that a) combines with the id, and b) is inside the id\n  \t\tbase = selectorUnits.map(extractString);\n\n  \t\ti = selectorUnits.length;\n  \t\twhile (i--) {\n  \t\t\tappended = base.slice();\n\n  \t\t\t// Pseudo-selectors should go after the attribute selector\n  \t\t\tunit = selectorUnits[i];\n  \t\t\tappended[i] = unit.base + dataAttr + unit.modifiers || \"\";\n\n  \t\t\tprepended = base.slice();\n  \t\t\tprepended[i] = dataAttr + \" \" + prepended[i];\n\n  \t\t\ttransformed.push(appended.join(\" \"), prepended.join(\" \"));\n  \t\t}\n\n  \t\treturn transformed.join(\", \");\n  \t};\n\n  \tif (dataRvcGuidPattern.test(css)) {\n  \t\ttransformed = css.replace(dataRvcGuidPattern, dataAttr);\n  \t} else {\n  \t\ttransformed = css.replace(commentsPattern, \"\").replace(selectorsPattern, function (match, $1) {\n  \t\t\tvar selectors, transformed;\n\n  \t\t\t// don't transform media queries!\n  \t\t\tif (mediaQueryPattern.test($1)) return match;\n\n  \t\t\tselectors = $1.split(\",\").map(trim);\n  \t\t\ttransformed = selectors.map(addGuid).join(\", \") + \" \";\n\n  \t\t\treturn match.replace($1, transformed);\n  \t\t});\n  \t}\n\n  \treturn transformed;\n  }\n\n  function trim(str) {\n  \tif (str.trim) {\n  \t\treturn str.trim();\n  \t}\n\n  \treturn str.replace(/^\\s+/, \"\").replace(/\\s+$/, \"\");\n  }\n\n  function extractString(unit) {\n  \treturn unit.str;\n  }\n\n  var css_css__uid = 1;\n\n  var cssConfigurator = {\n  \tname: \"css\",\n\n  \textend: function (Parent, proto, options) {\n  \t\tif (options.css) {\n  \t\t\tvar id = css_css__uid++;\n  \t\t\tvar styles = options.noCssTransform ? options.css : transform(options.css, id);\n\n  \t\t\tproto.cssId = id;\n  \t\t\tglobal_css.add({ id: id, styles: styles });\n  \t\t}\n  \t},\n\n  \tinit: function () {}\n  };\n\n  var css_css = cssConfigurator;\n\n  function validate(data) {\n  \t// Warn if userOptions.data is a non-POJO\n  \tif (data && data.constructor !== Object) {\n  \t\tif (typeof data === \"function\") {} else if (typeof data !== \"object\") {\n  \t\t\tfatal(\"data option must be an object or a function, `\" + data + \"` is not valid\");\n  \t\t} else {\n  \t\t\twarnIfDebug(\"If supplied, options.data should be a plain JavaScript object - using a non-POJO as the root object may work, but is discouraged\");\n  \t\t}\n  \t}\n  }\n\n  var dataConfigurator = {\n  \tname: \"data\",\n\n  \textend: function (Parent, proto, options) {\n  \t\tvar key = undefined,\n  \t\t    value = undefined;\n\n  \t\t// check for non-primitives, which could cause mutation-related bugs\n  \t\tif (options.data && isObject(options.data)) {\n  \t\t\tfor (key in options.data) {\n  \t\t\t\tvalue = options.data[key];\n\n  \t\t\t\tif (value && typeof value === \"object\") {\n  \t\t\t\t\tif (isObject(value) || isArray(value)) {\n  \t\t\t\t\t\twarnIfDebug(\"Passing a `data` option with object and array properties to Ractive.extend() is discouraged, as mutating them is likely to cause bugs. Consider using a data function instead:\\n\\n  // this...\\n  data: function () {\\n    return {\\n      myObject: {}\\n    };\\n  })\\n\\n  // instead of this:\\n  data: {\\n    myObject: {}\\n  }\");\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n\n  \t\tproto.data = custom_data__combine(proto.data, options.data);\n  \t},\n\n  \tinit: function (Parent, ractive, options) {\n  \t\tvar result = custom_data__combine(Parent.prototype.data, options.data);\n\n  \t\tif (typeof result === \"function\") {\n  \t\t\tresult = result.call(ractive);\n  \t\t}\n\n  \t\treturn result || {};\n  \t},\n\n  \treset: function (ractive) {\n  \t\tvar result = this.init(ractive.constructor, ractive, ractive.viewmodel);\n\n  \t\tractive.viewmodel.reset(result);\n  \t\treturn true;\n  \t}\n  };\n\n  var custom_data = dataConfigurator;\n\n  function custom_data__combine(parentValue, childValue) {\n  \tvalidate(childValue);\n\n  \tvar parentIsFn = typeof parentValue === \"function\";\n  \tvar childIsFn = typeof childValue === \"function\";\n\n  \t// Very important, otherwise child instance can become\n  \t// the default data object on Ractive or a component.\n  \t// then ractive.set() ends up setting on the prototype!\n  \tif (!childValue && !parentIsFn) {\n  \t\tchildValue = {};\n  \t}\n\n  \t// Fast path, where we just need to copy properties from\n  \t// parent to child\n  \tif (!parentIsFn && !childIsFn) {\n  \t\treturn fromProperties(childValue, parentValue);\n  \t}\n\n  \treturn function () {\n  \t\tvar child = childIsFn ? callDataFunction(childValue, this) : childValue;\n  \t\tvar parent = parentIsFn ? callDataFunction(parentValue, this) : parentValue;\n\n  \t\treturn fromProperties(child, parent);\n  \t};\n  }\n\n  function callDataFunction(fn, context) {\n  \tvar data = fn.call(context);\n\n  \tif (!data) return;\n\n  \tif (typeof data !== \"object\") {\n  \t\tfatal(\"Data function must return an object\");\n  \t}\n\n  \tif (data.constructor !== Object) {\n  \t\twarnOnceIfDebug(\"Data function returned something other than a plain JavaScript object. This might work, but is strongly discouraged\");\n  \t}\n\n  \treturn data;\n  }\n\n  function fromProperties(primary, secondary) {\n  \tif (primary && secondary) {\n  \t\tfor (var key in secondary) {\n  \t\t\tif (!(key in primary)) {\n  \t\t\t\tprimary[key] = secondary[key];\n  \t\t\t}\n  \t\t}\n\n  \t\treturn primary;\n  \t}\n\n  \treturn primary || secondary;\n  }\n\n  // TODO do we need to support this in the new Ractive() case?\n\n  var parse = null;\n\n  var parseOptions = [\"preserveWhitespace\", \"sanitize\", \"stripComments\", \"delimiters\", \"tripleDelimiters\", \"interpolate\"];\n\n  var parser = {\n  \tfromId: fromId, isHashedId: isHashedId, isParsed: isParsed, getParseOptions: getParseOptions, createHelper: template_parser__createHelper,\n  \tparse: doParse\n  };\n\n  function template_parser__createHelper(parseOptions) {\n  \tvar helper = create(parser);\n  \thelper.parse = function (template, options) {\n  \t\treturn doParse(template, options || parseOptions);\n  \t};\n  \treturn helper;\n  }\n\n  function doParse(template, parseOptions) {\n  \tif (!parse) {\n  \t\tthrow new Error(\"Missing Ractive.parse - cannot parse template. Either preparse or use the version that includes the parser\");\n  \t}\n\n  \treturn parse(template, parseOptions || this.options);\n  }\n\n  function fromId(id, options) {\n  \tvar template;\n\n  \tif (!isClient) {\n  \t\tif (options && options.noThrow) {\n  \t\t\treturn;\n  \t\t}\n  \t\tthrow new Error(\"Cannot retrieve template #\" + id + \" as Ractive is not running in a browser.\");\n  \t}\n\n  \tif (isHashedId(id)) {\n  \t\tid = id.substring(1);\n  \t}\n\n  \tif (!(template = document.getElementById(id))) {\n  \t\tif (options && options.noThrow) {\n  \t\t\treturn;\n  \t\t}\n  \t\tthrow new Error(\"Could not find template element with id #\" + id);\n  \t}\n\n  \tif (template.tagName.toUpperCase() !== \"SCRIPT\") {\n  \t\tif (options && options.noThrow) {\n  \t\t\treturn;\n  \t\t}\n  \t\tthrow new Error(\"Template element with id #\" + id + \", must be a <script> element\");\n  \t}\n\n  \treturn \"textContent\" in template ? template.textContent : template.innerHTML;\n  }\n\n  function isHashedId(id) {\n  \treturn id && id[0] === \"#\";\n  }\n\n  function isParsed(template) {\n  \treturn !(typeof template === \"string\");\n  }\n\n  function getParseOptions(ractive) {\n  \t// Could be Ractive or a Component\n  \tif (ractive.defaults) {\n  \t\tractive = ractive.defaults;\n  \t}\n\n  \treturn parseOptions.reduce(function (val, key) {\n  \t\tval[key] = ractive[key];\n  \t\treturn val;\n  \t}, {});\n  }\n\n  var template_parser = parser;\n\n  var templateConfigurator = {\n  \tname: \"template\",\n\n  \textend: function extend(Parent, proto, options) {\n  \t\tvar template;\n\n  \t\t// only assign if exists\n  \t\tif (\"template\" in options) {\n  \t\t\ttemplate = options.template;\n\n  \t\t\tif (typeof template === \"function\") {\n  \t\t\t\tproto.template = template;\n  \t\t\t} else {\n  \t\t\t\tproto.template = parseIfString(template, proto);\n  \t\t\t}\n  \t\t}\n  \t},\n\n  \tinit: function init(Parent, ractive, options) {\n  \t\tvar template, fn;\n\n  \t\t// TODO because of prototypal inheritance, we might just be able to use\n  \t\t// ractive.template, and not bother passing through the Parent object.\n  \t\t// At present that breaks the test mocks' expectations\n  \t\ttemplate = \"template\" in options ? options.template : Parent.prototype.template;\n\n  \t\tif (typeof template === \"function\") {\n  \t\t\tfn = template;\n  \t\t\ttemplate = getDynamicTemplate(ractive, fn);\n\n  \t\t\tractive._config.template = {\n  \t\t\t\tfn: fn,\n  \t\t\t\tresult: template\n  \t\t\t};\n  \t\t}\n\n  \t\ttemplate = parseIfString(template, ractive);\n\n  \t\t// TODO the naming of this is confusing - ractive.template refers to [...],\n  \t\t// but Component.prototype.template refers to {v:1,t:[],p:[]}...\n  \t\t// it's unnecessary, because the developer never needs to access\n  \t\t// ractive.template\n  \t\tractive.template = template.t;\n\n  \t\tif (template.p) {\n  \t\t\textendPartials(ractive.partials, template.p);\n  \t\t}\n  \t},\n\n  \treset: function (ractive) {\n  \t\tvar result = resetValue(ractive),\n  \t\t    parsed;\n\n  \t\tif (result) {\n  \t\t\tparsed = parseIfString(result, ractive);\n\n  \t\t\tractive.template = parsed.t;\n  \t\t\textendPartials(ractive.partials, parsed.p, true);\n\n  \t\t\treturn true;\n  \t\t}\n  \t}\n  };\n\n  function resetValue(ractive) {\n  \tvar initial = ractive._config.template,\n  \t    result;\n\n  \t// If this isn't a dynamic template, there's nothing to do\n  \tif (!initial || !initial.fn) {\n  \t\treturn;\n  \t}\n\n  \tresult = getDynamicTemplate(ractive, initial.fn);\n\n  \t// TODO deep equality check to prevent unnecessary re-rendering\n  \t// in the case of already-parsed templates\n  \tif (result !== initial.result) {\n  \t\tinitial.result = result;\n  \t\tresult = parseIfString(result, ractive);\n  \t\treturn result;\n  \t}\n  }\n\n  function getDynamicTemplate(ractive, fn) {\n  \tvar helper = template_template__createHelper(template_parser.getParseOptions(ractive));\n  \treturn fn.call(ractive, helper);\n  }\n\n  function template_template__createHelper(parseOptions) {\n  \tvar helper = create(template_parser);\n  \thelper.parse = function (template, options) {\n  \t\treturn template_parser.parse(template, options || parseOptions);\n  \t};\n  \treturn helper;\n  }\n\n  function parseIfString(template, ractive) {\n  \tif (typeof template === \"string\") {\n  \t\t// ID of an element containing the template?\n  \t\tif (template[0] === \"#\") {\n  \t\t\ttemplate = template_parser.fromId(template);\n  \t\t}\n\n  \t\ttemplate = parse(template, template_parser.getParseOptions(ractive));\n  \t}\n\n  \t// Check that the template even exists\n  \telse if (template == undefined) {\n  \t\tthrow new Error(\"The template cannot be \" + template + \".\");\n  \t}\n\n  \t// Check the parsed template has a version at all\n  \telse if (typeof template.v !== \"number\") {\n  \t\tthrow new Error(\"The template parser was passed a non-string template, but the template doesn't have a version.  Make sure you're passing in the template you think you are.\");\n  \t}\n\n  \t// Check we're using the correct version\n  \telse if (template.v !== TEMPLATE_VERSION) {\n  \t\tthrow new Error(\"Mismatched template version (expected \" + TEMPLATE_VERSION + \", got \" + template.v + \") Please ensure you are using the latest version of Ractive.js in your build process as well as in your app\");\n  \t}\n\n  \treturn template;\n  }\n\n  function extendPartials(existingPartials, newPartials, overwrite) {\n  \tif (!newPartials) return;\n\n  \t// TODO there's an ambiguity here - we need to overwrite in the `reset()`\n  \t// case, but not initially...\n\n  \tfor (var key in newPartials) {\n  \t\tif (overwrite || !existingPartials.hasOwnProperty(key)) {\n  \t\t\texistingPartials[key] = newPartials[key];\n  \t\t}\n  \t}\n  }\n\n  var template_template = templateConfigurator;\n\n  var config_registries__registryNames, Registry, registries;\n\n  config_registries__registryNames = [\"adaptors\", \"components\", \"computed\", \"decorators\", \"easing\", \"events\", \"interpolators\", \"partials\", \"transitions\"];\n\n  Registry = function (name, useDefaults) {\n  \tthis.name = name;\n  \tthis.useDefaults = useDefaults;\n  };\n\n  Registry.prototype = {\n  \tconstructor: Registry,\n\n  \textend: function (Parent, proto, options) {\n  \t\tthis.configure(this.useDefaults ? Parent.defaults : Parent, this.useDefaults ? proto : proto.constructor, options);\n  \t},\n\n  \tinit: function () {},\n\n  \tconfigure: function (Parent, target, options) {\n  \t\tvar name = this.name,\n  \t\t    option = options[name],\n  \t\t    registry;\n\n  \t\tregistry = create(Parent[name]);\n\n  \t\tfor (var key in option) {\n  \t\t\tregistry[key] = option[key];\n  \t\t}\n\n  \t\ttarget[name] = registry;\n  \t},\n\n  \treset: function (ractive) {\n  \t\tvar registry = ractive[this.name];\n  \t\tvar changed = false;\n  \t\tObject.keys(registry).forEach(function (key) {\n  \t\t\tvar item = registry[key];\n  \t\t\tif (item._fn) {\n  \t\t\t\tif (item._fn.isOwner) {\n  \t\t\t\t\tregistry[key] = item._fn;\n  \t\t\t\t} else {\n  \t\t\t\t\tdelete registry[key];\n  \t\t\t\t}\n  \t\t\t\tchanged = true;\n  \t\t\t}\n  \t\t});\n  \t\treturn changed;\n  \t}\n  };\n\n  registries = config_registries__registryNames.map(function (name) {\n  \treturn new Registry(name, name === \"computed\");\n  });\n\n  var config_registries = registries;\n\n  /*this.configure(\n  \tthis.useDefaults ? Parent.defaults : Parent,\n  \tractive,\n  \toptions );*/\n\n  var wrapPrototype = wrap;\n\n  function wrap(parent, name, method) {\n  \tif (!/_super/.test(method)) {\n  \t\treturn method;\n  \t}\n\n  \tvar wrapper = function wrapSuper() {\n  \t\tvar superMethod = getSuperMethod(wrapper._parent, name),\n  \t\t    hasSuper = (\"_super\" in this),\n  \t\t    oldSuper = this._super,\n  \t\t    result;\n\n  \t\tthis._super = superMethod;\n\n  \t\tresult = method.apply(this, arguments);\n\n  \t\tif (hasSuper) {\n  \t\t\tthis._super = oldSuper;\n  \t\t} else {\n  \t\t\tdelete this._super;\n  \t\t}\n\n  \t\treturn result;\n  \t};\n\n  \twrapper._parent = parent;\n  \twrapper._method = method;\n\n  \treturn wrapper;\n  }\n\n  function getSuperMethod(parent, name) {\n  \tvar value, method;\n\n  \tif (name in parent) {\n  \t\tvalue = parent[name];\n\n  \t\tif (typeof value === \"function\") {\n  \t\t\tmethod = value;\n  \t\t} else {\n  \t\t\tmethod = function returnValue() {\n  \t\t\t\treturn value;\n  \t\t\t};\n  \t\t}\n  \t} else {\n  \t\tmethod = noop;\n  \t}\n\n  \treturn method;\n  }\n\n  var config_deprecate = deprecate;\n  function getMessage(deprecated, correct, isError) {\n  \treturn \"options.\" + deprecated + \" has been deprecated in favour of options.\" + correct + \".\" + (isError ? \" You cannot specify both options, please use options.\" + correct + \".\" : \"\");\n  }\n\n  function deprecateOption(options, deprecatedOption, correct) {\n  \tif (deprecatedOption in options) {\n  \t\tif (!(correct in options)) {\n  \t\t\twarnIfDebug(getMessage(deprecatedOption, correct));\n  \t\t\toptions[correct] = options[deprecatedOption];\n  \t\t} else {\n  \t\t\tthrow new Error(getMessage(deprecatedOption, correct, true));\n  \t\t}\n  \t}\n  }\n  function deprecate(options) {\n  \tdeprecateOption(options, \"beforeInit\", \"onconstruct\");\n  \tdeprecateOption(options, \"init\", \"onrender\");\n  \tdeprecateOption(options, \"complete\", \"oncomplete\");\n  \tdeprecateOption(options, \"eventDefinitions\", \"events\");\n\n  \t// Using extend with Component instead of options,\n  \t// like Human.extend( Spider ) means adaptors as a registry\n  \t// gets copied to options. So we have to check if actually an array\n  \tif (isArray(options.adaptors)) {\n  \t\tdeprecateOption(options, \"adaptors\", \"adapt\");\n  \t}\n  }\n\n  var config, order, defaultKeys, custom, isBlacklisted, isStandardKey;\n\n  custom = {\n  \tadapt: custom_adapt,\n  \tcss: css_css,\n  \tdata: custom_data,\n  \ttemplate: template_template\n  };\n\n  defaultKeys = Object.keys(config_defaults);\n\n  isStandardKey = makeObj(defaultKeys.filter(function (key) {\n  \treturn !custom[key];\n  }));\n\n  // blacklisted keys that we don't double extend\n  isBlacklisted = makeObj(defaultKeys.concat(config_registries.map(function (r) {\n  \treturn r.name;\n  })));\n\n  order = [].concat(defaultKeys.filter(function (key) {\n  \treturn !config_registries[key] && !custom[key];\n  }), config_registries, custom.data, custom.template, custom.css);\n\n  config = {\n  \textend: function (Parent, proto, options) {\n  \t\treturn configure(\"extend\", Parent, proto, options);\n  \t},\n\n  \tinit: function (Parent, ractive, options) {\n  \t\treturn configure(\"init\", Parent, ractive, options);\n  \t},\n\n  \treset: function (ractive) {\n  \t\treturn order.filter(function (c) {\n  \t\t\treturn c.reset && c.reset(ractive);\n  \t\t}).map(function (c) {\n  \t\t\treturn c.name;\n  \t\t});\n  \t},\n\n  \t// this defines the order. TODO this isn't used anywhere in the codebase,\n  \t// only in the test suite - should get rid of it\n  \torder: order };\n\n  function configure(method, Parent, target, options) {\n  \tconfig_deprecate(options);\n\n  \tfor (var key in options) {\n  \t\tif (isStandardKey.hasOwnProperty(key)) {\n  \t\t\tvar value = options[key];\n\n  \t\t\t// warn the developer if they passed a function and ignore its value\n\n  \t\t\t// NOTE: we allow some functions on \"el\" because we duck type element lists\n  \t\t\t// and some libraries or ef'ed-up virtual browsers (phantomJS) return a\n  \t\t\t// function object as the result of querySelector methods\n  \t\t\tif (key !== \"el\" && typeof value === \"function\") {\n  \t\t\t\twarnIfDebug(\"\" + key + \" is a Ractive option that does not expect a function and will be ignored\", method === \"init\" ? target : null);\n  \t\t\t} else {\n  \t\t\t\ttarget[key] = value;\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \tconfig_registries.forEach(function (registry) {\n  \t\tregistry[method](Parent, target, options);\n  \t});\n\n  \tcustom_adapt[method](Parent, target, options);\n  \ttemplate_template[method](Parent, target, options);\n  \tcss_css[method](Parent, target, options);\n\n  \textendOtherMethods(Parent.prototype, target, options);\n  }\n\n  function extendOtherMethods(parent, target, options) {\n  \tfor (var key in options) {\n  \t\tif (!isBlacklisted[key] && options.hasOwnProperty(key)) {\n  \t\t\tvar member = options[key];\n\n  \t\t\t// if this is a method that overwrites a method, wrap it:\n  \t\t\tif (typeof member === \"function\") {\n  \t\t\t\tmember = wrapPrototype(parent, key, member);\n  \t\t\t}\n\n  \t\t\ttarget[key] = member;\n  \t\t}\n  \t}\n  }\n\n  function makeObj(array) {\n  \tvar obj = {};\n  \tarray.forEach(function (x) {\n  \t\treturn obj[x] = true;\n  \t});\n  \treturn obj;\n  }\n\n  var config_config = config;\n\n  var prototype_bubble = Fragment$bubble;\n\n  function Fragment$bubble() {\n  \tthis.dirtyValue = this.dirtyArgs = true;\n\n  \tif (this.bound && typeof this.owner.bubble === \"function\") {\n  \t\tthis.owner.bubble();\n  \t}\n  }\n\n  var Fragment_prototype_detach = Fragment$detach;\n\n  function Fragment$detach() {\n  \tvar docFrag;\n\n  \tif (this.items.length === 1) {\n  \t\treturn this.items[0].detach();\n  \t}\n\n  \tdocFrag = document.createDocumentFragment();\n\n  \tthis.items.forEach(function (item) {\n  \t\tvar node = item.detach();\n\n  \t\t// TODO The if {...} wasn't previously required - it is now, because we're\n  \t\t// forcibly detaching everything to reorder sections after an update. That's\n  \t\t// a non-ideal brute force approach, implemented to get all the tests to pass\n  \t\t// - as soon as it's replaced with something more elegant, this should\n  \t\t// revert to `docFrag.appendChild( item.detach() )`\n  \t\tif (node) {\n  \t\t\tdocFrag.appendChild(node);\n  \t\t}\n  \t});\n\n  \treturn docFrag;\n  }\n\n  var Fragment_prototype_find = Fragment$find;\n\n  function Fragment$find(selector) {\n  \tvar i, len, item, queryResult;\n\n  \tif (this.items) {\n  \t\tlen = this.items.length;\n  \t\tfor (i = 0; i < len; i += 1) {\n  \t\t\titem = this.items[i];\n\n  \t\t\tif (item.find && (queryResult = item.find(selector))) {\n  \t\t\t\treturn queryResult;\n  \t\t\t}\n  \t\t}\n\n  \t\treturn null;\n  \t}\n  }\n\n  var Fragment_prototype_findAll = Fragment$findAll;\n\n  function Fragment$findAll(selector, query) {\n  \tvar i, len, item;\n\n  \tif (this.items) {\n  \t\tlen = this.items.length;\n  \t\tfor (i = 0; i < len; i += 1) {\n  \t\t\titem = this.items[i];\n\n  \t\t\tif (item.findAll) {\n  \t\t\t\titem.findAll(selector, query);\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \treturn query;\n  }\n\n  var Fragment_prototype_findAllComponents = Fragment$findAllComponents;\n\n  function Fragment$findAllComponents(selector, query) {\n  \tvar i, len, item;\n\n  \tif (this.items) {\n  \t\tlen = this.items.length;\n  \t\tfor (i = 0; i < len; i += 1) {\n  \t\t\titem = this.items[i];\n\n  \t\t\tif (item.findAllComponents) {\n  \t\t\t\titem.findAllComponents(selector, query);\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \treturn query;\n  }\n\n  var Fragment_prototype_findComponent = Fragment$findComponent;\n\n  function Fragment$findComponent(selector) {\n  \tvar len, i, item, queryResult;\n\n  \tif (this.items) {\n  \t\tlen = this.items.length;\n  \t\tfor (i = 0; i < len; i += 1) {\n  \t\t\titem = this.items[i];\n\n  \t\t\tif (item.findComponent && (queryResult = item.findComponent(selector))) {\n  \t\t\t\treturn queryResult;\n  \t\t\t}\n  \t\t}\n\n  \t\treturn null;\n  \t}\n  }\n\n  var prototype_findNextNode = Fragment$findNextNode;\n\n  function Fragment$findNextNode(item) {\n  \tvar index = item.index,\n  \t    node;\n\n  \tif (this.items[index + 1]) {\n  \t\tnode = this.items[index + 1].firstNode();\n  \t}\n\n  \t// if this is the root fragment, and there are no more items,\n  \t// it means we're at the end...\n  \telse if (this.owner === this.root) {\n  \t\tif (!this.owner.component) {\n  \t\t\t// TODO but something else could have been appended to\n  \t\t\t// this.root.el, no?\n  \t\t\tnode = null;\n  \t\t}\n\n  \t\t// ...unless this is a component\n  \t\telse {\n  \t\t\tnode = this.owner.component.findNextNode();\n  \t\t}\n  \t} else {\n  \t\tnode = this.owner.findNextNode(this);\n  \t}\n\n  \treturn node;\n  }\n\n  var prototype_firstNode = Fragment$firstNode;\n\n  function Fragment$firstNode() {\n  \tif (this.items && this.items[0]) {\n  \t\treturn this.items[0].firstNode();\n  \t}\n\n  \treturn null;\n  }\n\n  var Parser,\n      ParseError,\n      parse_Parser__leadingWhitespace = /^\\s+/;\n\n  ParseError = function (message) {\n  \tthis.name = \"ParseError\";\n  \tthis.message = message;\n  \ttry {\n  \t\tthrow new Error(message);\n  \t} catch (e) {\n  \t\tthis.stack = e.stack;\n  \t}\n  };\n\n  ParseError.prototype = Error.prototype;\n\n  Parser = function (str, options) {\n  \tvar items,\n  \t    item,\n  \t    lineStart = 0;\n\n  \tthis.str = str;\n  \tthis.options = options || {};\n  \tthis.pos = 0;\n\n  \tthis.lines = this.str.split(\"\\n\");\n  \tthis.lineEnds = this.lines.map(function (line) {\n  \t\tvar lineEnd = lineStart + line.length + 1; // +1 for the newline\n\n  \t\tlineStart = lineEnd;\n  \t\treturn lineEnd;\n  \t}, 0);\n\n  \t// Custom init logic\n  \tif (this.init) this.init(str, options);\n\n  \titems = [];\n\n  \twhile (this.pos < this.str.length && (item = this.read())) {\n  \t\titems.push(item);\n  \t}\n\n  \tthis.leftover = this.remaining();\n  \tthis.result = this.postProcess ? this.postProcess(items, options) : items;\n  };\n\n  Parser.prototype = {\n  \tread: function (converters) {\n  \t\tvar pos, i, len, item;\n\n  \t\tif (!converters) converters = this.converters;\n\n  \t\tpos = this.pos;\n\n  \t\tlen = converters.length;\n  \t\tfor (i = 0; i < len; i += 1) {\n  \t\t\tthis.pos = pos; // reset for each attempt\n\n  \t\t\tif (item = converters[i](this)) {\n  \t\t\t\treturn item;\n  \t\t\t}\n  \t\t}\n\n  \t\treturn null;\n  \t},\n\n  \tgetLinePos: function (char) {\n  \t\tvar lineNum = 0,\n  \t\t    lineStart = 0,\n  \t\t    columnNum;\n\n  \t\twhile (char >= this.lineEnds[lineNum]) {\n  \t\t\tlineStart = this.lineEnds[lineNum];\n  \t\t\tlineNum += 1;\n  \t\t}\n\n  \t\tcolumnNum = char - lineStart;\n  \t\treturn [lineNum + 1, columnNum + 1, char]; // line/col should be one-based, not zero-based!\n  \t},\n\n  \terror: function (message) {\n  \t\tvar pos = this.getLinePos(this.pos);\n  \t\tvar lineNum = pos[0];\n  \t\tvar columnNum = pos[1];\n\n  \t\tvar line = this.lines[pos[0] - 1];\n  \t\tvar numTabs = 0;\n  \t\tvar annotation = line.replace(/\\t/g, function (match, char) {\n  \t\t\tif (char < pos[1]) {\n  \t\t\t\tnumTabs += 1;\n  \t\t\t}\n\n  \t\t\treturn \"  \";\n  \t\t}) + \"\\n\" + new Array(pos[1] + numTabs).join(\" \") + \"^----\";\n\n  \t\tvar error = new ParseError(\"\" + message + \" at line \" + lineNum + \" character \" + columnNum + \":\\n\" + annotation);\n\n  \t\terror.line = pos[0];\n  \t\terror.character = pos[1];\n  \t\terror.shortMessage = message;\n\n  \t\tthrow error;\n  \t},\n\n  \tmatchString: function (string) {\n  \t\tif (this.str.substr(this.pos, string.length) === string) {\n  \t\t\tthis.pos += string.length;\n  \t\t\treturn string;\n  \t\t}\n  \t},\n\n  \tmatchPattern: function (pattern) {\n  \t\tvar match;\n\n  \t\tif (match = pattern.exec(this.remaining())) {\n  \t\t\tthis.pos += match[0].length;\n  \t\t\treturn match[1] || match[0];\n  \t\t}\n  \t},\n\n  \tallowWhitespace: function () {\n  \t\tthis.matchPattern(parse_Parser__leadingWhitespace);\n  \t},\n\n  \tremaining: function () {\n  \t\treturn this.str.substring(this.pos);\n  \t},\n\n  \tnextChar: function () {\n  \t\treturn this.str.charAt(this.pos);\n  \t}\n  };\n\n  Parser.extend = function (proto) {\n  \tvar Parent = this,\n  \t    Child,\n  \t    key;\n\n  \tChild = function (str, options) {\n  \t\tParser.call(this, str, options);\n  \t};\n\n  \tChild.prototype = create(Parent.prototype);\n\n  \tfor (key in proto) {\n  \t\tif (hasOwn.call(proto, key)) {\n  \t\t\tChild.prototype[key] = proto[key];\n  \t\t}\n  \t}\n\n  \tChild.extend = Parser.extend;\n  \treturn Child;\n  };\n\n  var parse_Parser = Parser;\n\n  var TEXT = 1;\n  var INTERPOLATOR = 2;\n  var TRIPLE = 3;\n  var SECTION = 4;\n  var INVERTED = 5;\n  var CLOSING = 6;\n  var ELEMENT = 7;\n  var PARTIAL = 8;\n  var COMMENT = 9;\n  var DELIMCHANGE = 10;\n  var ATTRIBUTE = 13;\n  var CLOSING_TAG = 14;\n  var COMPONENT = 15;\n  var YIELDER = 16;\n  var INLINE_PARTIAL = 17;\n  var DOCTYPE = 18;\n\n  var NUMBER_LITERAL = 20;\n  var STRING_LITERAL = 21;\n  var ARRAY_LITERAL = 22;\n  var OBJECT_LITERAL = 23;\n  var BOOLEAN_LITERAL = 24;\n  var REGEXP_LITERAL = 25;\n\n  var GLOBAL = 26;\n  var KEY_VALUE_PAIR = 27;\n\n  var REFERENCE = 30;\n  var REFINEMENT = 31;\n  var MEMBER = 32;\n  var PREFIX_OPERATOR = 33;\n  var BRACKETED = 34;\n  var CONDITIONAL = 35;\n  var INFIX_OPERATOR = 36;\n\n  var INVOCATION = 40;\n\n  var SECTION_IF = 50;\n  var SECTION_UNLESS = 51;\n  var SECTION_EACH = 52;\n  var SECTION_WITH = 53;\n  var SECTION_IF_WITH = 54;\n\n  var ELSE = 60;\n  var ELSEIF = 61;\n\n  var stringMiddlePattern, escapeSequencePattern, lineContinuationPattern;\n\n  // Match one or more characters until: \", ', \\, or EOL/EOF.\n  // EOL/EOF is written as (?!.) (meaning there's no non-newline char next).\n  stringMiddlePattern = /^(?=.)[^\"'\\\\]+?(?:(?!.)|(?=[\"'\\\\]))/;\n\n  // Match one escape sequence, including the backslash.\n  escapeSequencePattern = /^\\\\(?:['\"\\\\bfnrt]|0(?![0-9])|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|(?=.)[^ux0-9])/;\n\n  // Match one ES5 line continuation (backslash + line terminator).\n  lineContinuationPattern = /^\\\\(?:\\r\\n|[\\u000A\\u000D\\u2028\\u2029])/;\n\n  // Helper for defining getDoubleQuotedString and getSingleQuotedString.\n  var makeQuotedStringMatcher = function (okQuote) {\n  \treturn function (parser) {\n  \t\tvar start, literal, done, next;\n\n  \t\tstart = parser.pos;\n  \t\tliteral = \"\\\"\";\n  \t\tdone = false;\n\n  \t\twhile (!done) {\n  \t\t\tnext = parser.matchPattern(stringMiddlePattern) || parser.matchPattern(escapeSequencePattern) || parser.matchString(okQuote);\n  \t\t\tif (next) {\n  \t\t\t\tif (next === \"\\\"\") {\n  \t\t\t\t\tliteral += \"\\\\\\\"\";\n  \t\t\t\t} else if (next === \"\\\\'\") {\n  \t\t\t\t\tliteral += \"'\";\n  \t\t\t\t} else {\n  \t\t\t\t\tliteral += next;\n  \t\t\t\t}\n  \t\t\t} else {\n  \t\t\t\tnext = parser.matchPattern(lineContinuationPattern);\n  \t\t\t\tif (next) {\n  \t\t\t\t\t// convert \\(newline-like) into a \\u escape, which is allowed in JSON\n  \t\t\t\t\tliteral += \"\\\\u\" + (\"000\" + next.charCodeAt(1).toString(16)).slice(-4);\n  \t\t\t\t} else {\n  \t\t\t\t\tdone = true;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n\n  \t\tliteral += \"\\\"\";\n\n  \t\t// use JSON.parse to interpret escapes\n  \t\treturn JSON.parse(literal);\n  \t};\n  };\n\n  var getSingleQuotedString = makeQuotedStringMatcher(\"\\\"\");\n  var getDoubleQuotedString = makeQuotedStringMatcher(\"'\");\n\n  var readStringLiteral = function (parser) {\n  \tvar start, string;\n\n  \tstart = parser.pos;\n\n  \tif (parser.matchString(\"\\\"\")) {\n  \t\tstring = getDoubleQuotedString(parser);\n\n  \t\tif (!parser.matchString(\"\\\"\")) {\n  \t\t\tparser.pos = start;\n  \t\t\treturn null;\n  \t\t}\n\n  \t\treturn {\n  \t\t\tt: STRING_LITERAL,\n  \t\t\tv: string\n  \t\t};\n  \t}\n\n  \tif (parser.matchString(\"'\")) {\n  \t\tstring = getSingleQuotedString(parser);\n\n  \t\tif (!parser.matchString(\"'\")) {\n  \t\t\tparser.pos = start;\n  \t\t\treturn null;\n  \t\t}\n\n  \t\treturn {\n  \t\t\tt: STRING_LITERAL,\n  \t\t\tv: string\n  \t\t};\n  \t}\n\n  \treturn null;\n  };\n\n  var literal_readNumberLiteral = readNumberLiteral;\n  var literal_readNumberLiteral__numberPattern = /^(?:[+-]?)0*(?:(?:(?:[1-9]\\d*)?\\.\\d+)|(?:(?:0|[1-9]\\d*)\\.)|(?:0|[1-9]\\d*))(?:[eE][+-]?\\d+)?/;\n  function readNumberLiteral(parser) {\n  \tvar result;\n\n  \tif (result = parser.matchPattern(literal_readNumberLiteral__numberPattern)) {\n  \t\treturn {\n  \t\t\tt: NUMBER_LITERAL,\n  \t\t\tv: result\n  \t\t};\n  \t}\n\n  \treturn null;\n  }\n\n  var patterns__name = /^[a-zA-Z_$][a-zA-Z_$0-9]*/;\n\n  // http://mathiasbynens.be/notes/javascript-properties\n  // can be any name, string literal, or number literal\n  var shared_readKey = readKey;\n  var identifier = /^[a-zA-Z_$][a-zA-Z_$0-9]*$/;\n  function readKey(parser) {\n  \tvar token;\n\n  \tif (token = readStringLiteral(parser)) {\n  \t\treturn identifier.test(token.v) ? token.v : \"\\\"\" + token.v.replace(/\"/g, \"\\\\\\\"\") + \"\\\"\";\n  \t}\n\n  \tif (token = literal_readNumberLiteral(parser)) {\n  \t\treturn token.v;\n  \t}\n\n  \tif (token = parser.matchPattern(patterns__name)) {\n  \t\treturn token;\n  \t}\n  }\n\n  var JsonParser, specials, specialsPattern, parseJSON__numberPattern, placeholderPattern, placeholderAtStartPattern, onlyWhitespace;\n\n  specials = {\n  \t\"true\": true,\n  \t\"false\": false,\n  \tundefined: undefined,\n  \t\"null\": null\n  };\n\n  specialsPattern = new RegExp(\"^(?:\" + Object.keys(specials).join(\"|\") + \")\");\n  parseJSON__numberPattern = /^(?:[+-]?)(?:(?:(?:0|[1-9]\\d*)?\\.\\d+)|(?:(?:0|[1-9]\\d*)\\.)|(?:0|[1-9]\\d*))(?:[eE][+-]?\\d+)?/;\n  placeholderPattern = /\\$\\{([^\\}]+)\\}/g;\n  placeholderAtStartPattern = /^\\$\\{([^\\}]+)\\}/;\n  onlyWhitespace = /^\\s*$/;\n\n  JsonParser = parse_Parser.extend({\n  \tinit: function (str, options) {\n  \t\tthis.values = options.values;\n  \t\tthis.allowWhitespace();\n  \t},\n\n  \tpostProcess: function (result) {\n  \t\tif (result.length !== 1 || !onlyWhitespace.test(this.leftover)) {\n  \t\t\treturn null;\n  \t\t}\n\n  \t\treturn { value: result[0].v };\n  \t},\n\n  \tconverters: [function getPlaceholder(parser) {\n  \t\tvar placeholder;\n\n  \t\tif (!parser.values) {\n  \t\t\treturn null;\n  \t\t}\n\n  \t\tplaceholder = parser.matchPattern(placeholderAtStartPattern);\n\n  \t\tif (placeholder && parser.values.hasOwnProperty(placeholder)) {\n  \t\t\treturn { v: parser.values[placeholder] };\n  \t\t}\n  \t}, function getSpecial(parser) {\n  \t\tvar special;\n\n  \t\tif (special = parser.matchPattern(specialsPattern)) {\n  \t\t\treturn { v: specials[special] };\n  \t\t}\n  \t}, function getNumber(parser) {\n  \t\tvar number;\n\n  \t\tif (number = parser.matchPattern(parseJSON__numberPattern)) {\n  \t\t\treturn { v: +number };\n  \t\t}\n  \t}, function getString(parser) {\n  \t\tvar stringLiteral = readStringLiteral(parser),\n  \t\t    values;\n\n  \t\tif (stringLiteral && (values = parser.values)) {\n  \t\t\treturn {\n  \t\t\t\tv: stringLiteral.v.replace(placeholderPattern, function (match, $1) {\n  \t\t\t\t\treturn $1 in values ? values[$1] : $1;\n  \t\t\t\t})\n  \t\t\t};\n  \t\t}\n\n  \t\treturn stringLiteral;\n  \t}, function getObject(parser) {\n  \t\tvar result, pair;\n\n  \t\tif (!parser.matchString(\"{\")) {\n  \t\t\treturn null;\n  \t\t}\n\n  \t\tresult = {};\n\n  \t\tparser.allowWhitespace();\n\n  \t\tif (parser.matchString(\"}\")) {\n  \t\t\treturn { v: result };\n  \t\t}\n\n  \t\twhile (pair = getKeyValuePair(parser)) {\n  \t\t\tresult[pair.key] = pair.value;\n\n  \t\t\tparser.allowWhitespace();\n\n  \t\t\tif (parser.matchString(\"}\")) {\n  \t\t\t\treturn { v: result };\n  \t\t\t}\n\n  \t\t\tif (!parser.matchString(\",\")) {\n  \t\t\t\treturn null;\n  \t\t\t}\n  \t\t}\n\n  \t\treturn null;\n  \t}, function getArray(parser) {\n  \t\tvar result, valueToken;\n\n  \t\tif (!parser.matchString(\"[\")) {\n  \t\t\treturn null;\n  \t\t}\n\n  \t\tresult = [];\n\n  \t\tparser.allowWhitespace();\n\n  \t\tif (parser.matchString(\"]\")) {\n  \t\t\treturn { v: result };\n  \t\t}\n\n  \t\twhile (valueToken = parser.read()) {\n  \t\t\tresult.push(valueToken.v);\n\n  \t\t\tparser.allowWhitespace();\n\n  \t\t\tif (parser.matchString(\"]\")) {\n  \t\t\t\treturn { v: result };\n  \t\t\t}\n\n  \t\t\tif (!parser.matchString(\",\")) {\n  \t\t\t\treturn null;\n  \t\t\t}\n\n  \t\t\tparser.allowWhitespace();\n  \t\t}\n\n  \t\treturn null;\n  \t}]\n  });\n\n  function getKeyValuePair(parser) {\n  \tvar key, valueToken, pair;\n\n  \tparser.allowWhitespace();\n\n  \tkey = shared_readKey(parser);\n\n  \tif (!key) {\n  \t\treturn null;\n  \t}\n\n  \tpair = { key: key };\n\n  \tparser.allowWhitespace();\n  \tif (!parser.matchString(\":\")) {\n  \t\treturn null;\n  \t}\n  \tparser.allowWhitespace();\n\n  \tvalueToken = parser.read();\n  \tif (!valueToken) {\n  \t\treturn null;\n  \t}\n\n  \tpair.value = valueToken.v;\n\n  \treturn pair;\n  }\n\n  var parseJSON = function (str, values) {\n  \tvar parser = new JsonParser(str, {\n  \t\tvalues: values\n  \t});\n\n  \treturn parser.result;\n  };\n\n  var shared_processItems = processItems;\n\n  function processItems(items, values, guid, counter) {\n  \tcounter = counter || 0;\n\n  \treturn items.map(function (item) {\n  \t\tvar placeholderId, wrapped, value;\n\n  \t\tif (item.text) {\n  \t\t\treturn item.text;\n  \t\t}\n\n  \t\tif (item.fragments) {\n  \t\t\treturn item.fragments.map(function (fragment) {\n  \t\t\t\treturn processItems(fragment.items, values, guid, counter);\n  \t\t\t}).join(\"\");\n  \t\t}\n\n  \t\tplaceholderId = guid + \"-\" + counter++;\n\n  \t\tif (item.keypath && (wrapped = item.root.viewmodel.wrapped[item.keypath.str])) {\n  \t\t\tvalue = wrapped.value;\n  \t\t} else {\n  \t\t\tvalue = item.getValue();\n  \t\t}\n\n  \t\tvalues[placeholderId] = value;\n\n  \t\treturn \"${\" + placeholderId + \"}\";\n  \t}).join(\"\");\n  }\n\n  var getArgsList = Fragment$getArgsList;\n  function Fragment$getArgsList() {\n  \tvar values, source, parsed, result;\n\n  \tif (this.dirtyArgs) {\n  \t\tsource = shared_processItems(this.items, values = {}, this.root._guid);\n  \t\tparsed = parseJSON(\"[\" + source + \"]\", values);\n\n  \t\tif (!parsed) {\n  \t\t\tresult = [this.toString()];\n  \t\t} else {\n  \t\t\tresult = parsed.value;\n  \t\t}\n\n  \t\tthis.argsList = result;\n  \t\tthis.dirtyArgs = false;\n  \t}\n\n  \treturn this.argsList;\n  }\n\n  var getNode = Fragment$getNode;\n\n  function Fragment$getNode() {\n  \tvar fragment = this;\n\n  \tdo {\n  \t\tif (fragment.pElement) {\n  \t\t\treturn fragment.pElement.node;\n  \t\t}\n  \t} while (fragment = fragment.parent);\n\n  \treturn this.root.detached || this.root.el;\n  }\n\n  var prototype_getValue = Fragment$getValue;\n  function Fragment$getValue() {\n  \tvar values, source, parsed, result;\n\n  \tif (this.dirtyValue) {\n  \t\tsource = shared_processItems(this.items, values = {}, this.root._guid);\n  \t\tparsed = parseJSON(source, values);\n\n  \t\tif (!parsed) {\n  \t\t\tresult = this.toString();\n  \t\t} else {\n  \t\t\tresult = parsed.value;\n  \t\t}\n\n  \t\tthis.value = result;\n  \t\tthis.dirtyValue = false;\n  \t}\n\n  \treturn this.value;\n  }\n\n  var booleanAttributes, voidElementNames, htmlEntities, controlCharacters, entityPattern, lessThan, greaterThan, amp;\n\n  // https://github.com/kangax/html-minifier/issues/63#issuecomment-37763316\n  booleanAttributes = /^(allowFullscreen|async|autofocus|autoplay|checked|compact|controls|declare|default|defaultChecked|defaultMuted|defaultSelected|defer|disabled|enabled|formNoValidate|hidden|indeterminate|inert|isMap|itemScope|loop|multiple|muted|noHref|noResize|noShade|noValidate|noWrap|open|pauseOnExit|readOnly|required|reversed|scoped|seamless|selected|sortable|translate|trueSpeed|typeMustMatch|visible)$/i;\n  voidElementNames = /^(?:area|base|br|col|command|doctype|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/i;\n\n  htmlEntities = { quot: 34, amp: 38, apos: 39, lt: 60, gt: 62, nbsp: 160, iexcl: 161, cent: 162, pound: 163, curren: 164, yen: 165, brvbar: 166, sect: 167, uml: 168, copy: 169, ordf: 170, laquo: 171, not: 172, shy: 173, reg: 174, macr: 175, deg: 176, plusmn: 177, sup2: 178, sup3: 179, acute: 180, micro: 181, para: 182, middot: 183, cedil: 184, sup1: 185, ordm: 186, raquo: 187, frac14: 188, frac12: 189, frac34: 190, iquest: 191, Agrave: 192, Aacute: 193, Acirc: 194, Atilde: 195, Auml: 196, Aring: 197, AElig: 198, Ccedil: 199, Egrave: 200, Eacute: 201, Ecirc: 202, Euml: 203, Igrave: 204, Iacute: 205, Icirc: 206, Iuml: 207, ETH: 208, Ntilde: 209, Ograve: 210, Oacute: 211, Ocirc: 212, Otilde: 213, Ouml: 214, times: 215, Oslash: 216, Ugrave: 217, Uacute: 218, Ucirc: 219, Uuml: 220, Yacute: 221, THORN: 222, szlig: 223, agrave: 224, aacute: 225, acirc: 226, atilde: 227, auml: 228, aring: 229, aelig: 230, ccedil: 231, egrave: 232, eacute: 233, ecirc: 234, euml: 235, igrave: 236, iacute: 237, icirc: 238, iuml: 239, eth: 240, ntilde: 241, ograve: 242, oacute: 243, ocirc: 244, otilde: 245, ouml: 246, divide: 247, oslash: 248, ugrave: 249, uacute: 250, ucirc: 251, uuml: 252, yacute: 253, thorn: 254, yuml: 255, OElig: 338, oelig: 339, Scaron: 352, scaron: 353, Yuml: 376, fnof: 402, circ: 710, tilde: 732, Alpha: 913, Beta: 914, Gamma: 915, Delta: 916, Epsilon: 917, Zeta: 918, Eta: 919, Theta: 920, Iota: 921, Kappa: 922, Lambda: 923, Mu: 924, Nu: 925, Xi: 926, Omicron: 927, Pi: 928, Rho: 929, Sigma: 931, Tau: 932, Upsilon: 933, Phi: 934, Chi: 935, Psi: 936, Omega: 937, alpha: 945, beta: 946, gamma: 947, delta: 948, epsilon: 949, zeta: 950, eta: 951, theta: 952, iota: 953, kappa: 954, lambda: 955, mu: 956, nu: 957, xi: 958, omicron: 959, pi: 960, rho: 961, sigmaf: 962, sigma: 963, tau: 964, upsilon: 965, phi: 966, chi: 967, psi: 968, omega: 969, thetasym: 977, upsih: 978, piv: 982, ensp: 8194, emsp: 8195, thinsp: 8201, zwnj: 8204, zwj: 8205, lrm: 8206, rlm: 8207, ndash: 8211, mdash: 8212, lsquo: 8216, rsquo: 8217, sbquo: 8218, ldquo: 8220, rdquo: 8221, bdquo: 8222, dagger: 8224, Dagger: 8225, bull: 8226, hellip: 8230, permil: 8240, prime: 8242, Prime: 8243, lsaquo: 8249, rsaquo: 8250, oline: 8254, frasl: 8260, euro: 8364, image: 8465, weierp: 8472, real: 8476, trade: 8482, alefsym: 8501, larr: 8592, uarr: 8593, rarr: 8594, darr: 8595, harr: 8596, crarr: 8629, lArr: 8656, uArr: 8657, rArr: 8658, dArr: 8659, hArr: 8660, forall: 8704, part: 8706, exist: 8707, empty: 8709, nabla: 8711, isin: 8712, notin: 8713, ni: 8715, prod: 8719, sum: 8721, minus: 8722, lowast: 8727, radic: 8730, prop: 8733, infin: 8734, ang: 8736, and: 8743, or: 8744, cap: 8745, cup: 8746, int: 8747, there4: 8756, sim: 8764, cong: 8773, asymp: 8776, ne: 8800, equiv: 8801, le: 8804, ge: 8805, sub: 8834, sup: 8835, nsub: 8836, sube: 8838, supe: 8839, oplus: 8853, otimes: 8855, perp: 8869, sdot: 8901, lceil: 8968, rceil: 8969, lfloor: 8970, rfloor: 8971, lang: 9001, rang: 9002, loz: 9674, spades: 9824, clubs: 9827, hearts: 9829, diams: 9830 };\n  controlCharacters = [8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352, 8249, 338, 141, 381, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 353, 8250, 339, 157, 382, 376];\n  entityPattern = new RegExp(\"&(#?(?:x[\\\\w\\\\d]+|\\\\d+|\" + Object.keys(htmlEntities).join(\"|\") + \"));?\", \"g\");\n\n  function decodeCharacterReferences(html) {\n  \treturn html.replace(entityPattern, function (match, entity) {\n  \t\tvar code;\n\n  \t\t// Handle named entities\n  \t\tif (entity[0] !== \"#\") {\n  \t\t\tcode = htmlEntities[entity];\n  \t\t} else if (entity[1] === \"x\") {\n  \t\t\tcode = parseInt(entity.substring(2), 16);\n  \t\t} else {\n  \t\t\tcode = parseInt(entity.substring(1), 10);\n  \t\t}\n\n  \t\tif (!code) {\n  \t\t\treturn match;\n  \t\t}\n\n  \t\treturn String.fromCharCode(validateCode(code));\n  \t});\n  }\n\n  // some code points are verboten. If we were inserting HTML, the browser would replace the illegal\n  // code points with alternatives in some cases - since we're bypassing that mechanism, we need\n  // to replace them ourselves\n  //\n  // Source: http://en.wikipedia.org/wiki/Character_encodings_in_HTML#Illegal_characters\n  function validateCode(code) {\n  \tif (!code) {\n  \t\treturn 65533;\n  \t}\n\n  \t// line feed becomes generic whitespace\n  \tif (code === 10) {\n  \t\treturn 32;\n  \t}\n\n  \t// ASCII range. (Why someone would use HTML entities for ASCII characters I don't know, but...)\n  \tif (code < 128) {\n  \t\treturn code;\n  \t}\n\n  \t// code points 128-159 are dealt with leniently by browsers, but they're incorrect. We need\n  \t// to correct the mistake or we'll end up with missing € signs and so on\n  \tif (code <= 159) {\n  \t\treturn controlCharacters[code - 128];\n  \t}\n\n  \t// basic multilingual plane\n  \tif (code < 55296) {\n  \t\treturn code;\n  \t}\n\n  \t// UTF-16 surrogate halves\n  \tif (code <= 57343) {\n  \t\treturn 65533;\n  \t}\n\n  \t// rest of the basic multilingual plane\n  \tif (code <= 65535) {\n  \t\treturn code;\n  \t}\n\n  \treturn 65533;\n  }\n\n  lessThan = /</g;\n  greaterThan = />/g;\n  amp = /&/g;\n\n  function escapeHtml(str) {\n  \treturn str.replace(amp, \"&amp;\").replace(lessThan, \"&lt;\").replace(greaterThan, \"&gt;\");\n  }\n\n  var shared_detach = function () {\n  \treturn detachNode(this.node);\n  };\n\n  var Text = function (options) {\n  \tthis.type = TEXT;\n  \tthis.text = options.template;\n  };\n\n  Text.prototype = {\n  \tdetach: shared_detach,\n\n  \tfirstNode: function () {\n  \t\treturn this.node;\n  \t},\n\n  \trender: function () {\n  \t\tif (!this.node) {\n  \t\t\tthis.node = document.createTextNode(this.text);\n  \t\t}\n\n  \t\treturn this.node;\n  \t},\n\n  \ttoString: function (escape) {\n  \t\treturn escape ? escapeHtml(this.text) : this.text;\n  \t},\n\n  \tunrender: function (shouldDestroy) {\n  \t\tif (shouldDestroy) {\n  \t\t\treturn this.detach();\n  \t\t}\n  \t}\n  };\n\n  var items_Text = Text;\n\n  var shared_unbind = shared_unbind__unbind;\n\n  function shared_unbind__unbind() {\n  \tif (this.registered) {\n  \t\t// this was registered as a dependant\n  \t\tthis.root.viewmodel.unregister(this.keypath, this);\n  \t}\n\n  \tif (this.resolver) {\n  \t\tthis.resolver.unbind();\n  \t}\n  }\n\n  var Mustache_getValue = Mustache$getValue;\n\n  function Mustache$getValue() {\n  \treturn this.value;\n  }\n\n  var ReferenceResolver = function (owner, ref, callback) {\n  \tvar keypath;\n\n  \tthis.ref = ref;\n  \tthis.resolved = false;\n\n  \tthis.root = owner.root;\n  \tthis.parentFragment = owner.parentFragment;\n  \tthis.callback = callback;\n\n  \tkeypath = shared_resolveRef(owner.root, ref, owner.parentFragment);\n  \tif (keypath != undefined) {\n  \t\tthis.resolve(keypath);\n  \t} else {\n  \t\tglobal_runloop.addUnresolved(this);\n  \t}\n  };\n\n  ReferenceResolver.prototype = {\n  \tresolve: function (keypath) {\n  \t\tif (this.keypath && !keypath) {\n  \t\t\t// it was resolved, and now it's not. Can happen if e.g. `bar` in\n  \t\t\t// `{{foo[bar]}}` becomes undefined\n  \t\t\tglobal_runloop.addUnresolved(this);\n  \t\t}\n\n  \t\tthis.resolved = true;\n\n  \t\tthis.keypath = keypath;\n  \t\tthis.callback(keypath);\n  \t},\n\n  \tforceResolution: function () {\n  \t\tthis.resolve(getKeypath(this.ref));\n  \t},\n\n  \trebind: function (oldKeypath, newKeypath) {\n  \t\tvar keypath;\n\n  \t\tif (this.keypath != undefined) {\n  \t\t\tkeypath = this.keypath.replace(oldKeypath, newKeypath);\n  \t\t\t// was a new keypath created?\n  \t\t\tif (keypath !== undefined) {\n  \t\t\t\t// resolve it\n  \t\t\t\tthis.resolve(keypath);\n  \t\t\t}\n  \t\t}\n  \t},\n\n  \tunbind: function () {\n  \t\tif (!this.resolved) {\n  \t\t\tglobal_runloop.removeUnresolved(this);\n  \t\t}\n  \t}\n  };\n\n  var Resolvers_ReferenceResolver = ReferenceResolver;\n\n  var SpecialResolver = function (owner, ref, callback) {\n  \tthis.parentFragment = owner.parentFragment;\n  \tthis.ref = ref;\n  \tthis.callback = callback;\n\n  \tthis.rebind();\n  };\n\n  var props = {\n  \t\"@keypath\": { prefix: \"c\", prop: [\"context\"] },\n  \t\"@index\": { prefix: \"i\", prop: [\"index\"] },\n  \t\"@key\": { prefix: \"k\", prop: [\"key\", \"index\"] }\n  };\n\n  function getProp(target, prop) {\n  \tvar value;\n  \tfor (var i = 0; i < prop.prop.length; i++) {\n  \t\tif ((value = target[prop.prop[i]]) !== undefined) {\n  \t\t\treturn value;\n  \t\t}\n  \t}\n  }\n\n  SpecialResolver.prototype = {\n  \trebind: function () {\n  \t\tvar ref = this.ref,\n  \t\t    fragment = this.parentFragment,\n  \t\t    prop = props[ref],\n  \t\t    value;\n\n  \t\tif (!prop) {\n  \t\t\tthrow new Error(\"Unknown special reference \\\"\" + ref + \"\\\" - valid references are @index, @key and @keypath\");\n  \t\t}\n\n  \t\t// have we already found the nearest parent?\n  \t\tif (this.cached) {\n  \t\t\treturn this.callback(getKeypath(\"@\" + prop.prefix + getProp(this.cached, prop)));\n  \t\t}\n\n  \t\t// special case for indices, which may cross component boundaries\n  \t\tif (prop.prop.indexOf(\"index\") !== -1 || prop.prop.indexOf(\"key\") !== -1) {\n  \t\t\twhile (fragment) {\n  \t\t\t\tif (fragment.owner.currentSubtype === SECTION_EACH && (value = getProp(fragment, prop)) !== undefined) {\n  \t\t\t\t\tthis.cached = fragment;\n\n  \t\t\t\t\tfragment.registerIndexRef(this);\n\n  \t\t\t\t\treturn this.callback(getKeypath(\"@\" + prop.prefix + value));\n  \t\t\t\t}\n\n  \t\t\t\t// watch for component boundaries\n  \t\t\t\tif (!fragment.parent && fragment.owner && fragment.owner.component && fragment.owner.component.parentFragment && !fragment.owner.component.instance.isolated) {\n  \t\t\t\t\tfragment = fragment.owner.component.parentFragment;\n  \t\t\t\t} else {\n  \t\t\t\t\tfragment = fragment.parent;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t} else {\n  \t\t\twhile (fragment) {\n  \t\t\t\tif ((value = getProp(fragment, prop)) !== undefined) {\n  \t\t\t\t\treturn this.callback(getKeypath(\"@\" + prop.prefix + value.str));\n  \t\t\t\t}\n\n  \t\t\t\tfragment = fragment.parent;\n  \t\t\t}\n  \t\t}\n  \t},\n\n  \tunbind: function () {\n  \t\tif (this.cached) {\n  \t\t\tthis.cached.unregisterIndexRef(this);\n  \t\t}\n  \t}\n  };\n\n  var Resolvers_SpecialResolver = SpecialResolver;\n\n  var IndexResolver = function (owner, ref, callback) {\n  \tthis.parentFragment = owner.parentFragment;\n  \tthis.ref = ref;\n  \tthis.callback = callback;\n\n  \tref.ref.fragment.registerIndexRef(this);\n\n  \tthis.rebind();\n  };\n\n  IndexResolver.prototype = {\n  \trebind: function () {\n  \t\tvar index,\n  \t\t    ref = this.ref.ref;\n\n  \t\tif (ref.ref.t === \"k\") {\n  \t\t\tindex = \"k\" + ref.fragment.key;\n  \t\t} else {\n  \t\t\tindex = \"i\" + ref.fragment.index;\n  \t\t}\n\n  \t\tif (index !== undefined) {\n  \t\t\tthis.callback(getKeypath(\"@\" + index));\n  \t\t}\n  \t},\n\n  \tunbind: function () {\n  \t\tthis.ref.ref.fragment.unregisterIndexRef(this);\n  \t}\n  };\n\n  var Resolvers_IndexResolver = IndexResolver;\n\n  var Resolvers_findIndexRefs = findIndexRefs;\n\n  function findIndexRefs(fragment, refName) {\n  \tvar result = {},\n  \t    refs,\n  \t    fragRefs,\n  \t    ref,\n  \t    i,\n  \t    owner,\n  \t    hit = false;\n\n  \tif (!refName) {\n  \t\tresult.refs = refs = {};\n  \t}\n\n  \twhile (fragment) {\n  \t\tif ((owner = fragment.owner) && (fragRefs = owner.indexRefs)) {\n\n  \t\t\t// we're looking for a particular ref, and it's here\n  \t\t\tif (refName && (ref = owner.getIndexRef(refName))) {\n  \t\t\t\tresult.ref = {\n  \t\t\t\t\tfragment: fragment,\n  \t\t\t\t\tref: ref\n  \t\t\t\t};\n  \t\t\t\treturn result;\n  \t\t\t}\n\n  \t\t\t// we're collecting refs up-tree\n  \t\t\telse if (!refName) {\n  \t\t\t\tfor (i in fragRefs) {\n  \t\t\t\t\tref = fragRefs[i];\n\n  \t\t\t\t\t// don't overwrite existing refs - they should shadow parents\n  \t\t\t\t\tif (!refs[ref.n]) {\n  \t\t\t\t\t\thit = true;\n  \t\t\t\t\t\trefs[ref.n] = {\n  \t\t\t\t\t\t\tfragment: fragment,\n  \t\t\t\t\t\t\tref: ref\n  \t\t\t\t\t\t};\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n\n  \t\t// watch for component boundaries\n  \t\tif (!fragment.parent && fragment.owner && fragment.owner.component && fragment.owner.component.parentFragment && !fragment.owner.component.instance.isolated) {\n  \t\t\tresult.componentBoundary = true;\n  \t\t\tfragment = fragment.owner.component.parentFragment;\n  \t\t} else {\n  \t\t\tfragment = fragment.parent;\n  \t\t}\n  \t}\n\n  \tif (!hit) {\n  \t\treturn undefined;\n  \t} else {\n  \t\treturn result;\n  \t}\n  }\n\n  findIndexRefs.resolve = function resolve(indices) {\n  \tvar refs = {},\n  \t    k,\n  \t    ref;\n\n  \tfor (k in indices.refs) {\n  \t\tref = indices.refs[k];\n  \t\trefs[ref.ref.n] = ref.ref.t === \"k\" ? ref.fragment.key : ref.fragment.index;\n  \t}\n\n  \treturn refs;\n  };\n\n  var Resolvers_createReferenceResolver = createReferenceResolver;\n  function createReferenceResolver(owner, ref, callback) {\n  \tvar indexRef;\n\n  \tif (ref.charAt(0) === \"@\") {\n  \t\treturn new Resolvers_SpecialResolver(owner, ref, callback);\n  \t}\n\n  \tif (indexRef = Resolvers_findIndexRefs(owner.parentFragment, ref)) {\n  \t\treturn new Resolvers_IndexResolver(owner, indexRef, callback);\n  \t}\n\n  \treturn new Resolvers_ReferenceResolver(owner, ref, callback);\n  }\n\n  var shared_getFunctionFromString = getFunctionFromString;\n  var cache = {};\n  function getFunctionFromString(str, i) {\n  \tvar fn, args;\n\n  \tif (cache[str]) {\n  \t\treturn cache[str];\n  \t}\n\n  \targs = [];\n  \twhile (i--) {\n  \t\targs[i] = \"_\" + i;\n  \t}\n\n  \tfn = new Function(args.join(\",\"), \"return(\" + str + \")\");\n\n  \tcache[str] = fn;\n  \treturn fn;\n  }\n\n  var ExpressionResolver,\n      Resolvers_ExpressionResolver__bind = Function.prototype.bind;\n\n  ExpressionResolver = function (owner, parentFragment, expression, callback) {\n  \tvar _this = this;\n\n  \tvar ractive;\n\n  \tractive = owner.root;\n\n  \tthis.root = ractive;\n  \tthis.parentFragment = parentFragment;\n  \tthis.callback = callback;\n  \tthis.owner = owner;\n  \tthis.str = expression.s;\n  \tthis.keypaths = [];\n\n  \t// Create resolvers for each reference\n  \tthis.pending = expression.r.length;\n  \tthis.refResolvers = expression.r.map(function (ref, i) {\n  \t\treturn Resolvers_createReferenceResolver(_this, ref, function (keypath) {\n  \t\t\t_this.resolve(i, keypath);\n  \t\t});\n  \t});\n\n  \tthis.ready = true;\n  \tthis.bubble();\n  };\n\n  ExpressionResolver.prototype = {\n  \tbubble: function () {\n  \t\tif (!this.ready) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tthis.uniqueString = getUniqueString(this.str, this.keypaths);\n  \t\tthis.keypath = createExpressionKeypath(this.uniqueString);\n\n  \t\tthis.createEvaluator();\n  \t\tthis.callback(this.keypath);\n  \t},\n\n  \tunbind: function () {\n  \t\tvar resolver;\n\n  \t\twhile (resolver = this.refResolvers.pop()) {\n  \t\t\tresolver.unbind();\n  \t\t}\n  \t},\n\n  \tresolve: function (index, keypath) {\n  \t\tthis.keypaths[index] = keypath;\n  \t\tthis.bubble();\n  \t},\n\n  \tcreateEvaluator: function () {\n  \t\tvar _this = this;\n\n  \t\tvar computation, valueGetters, signature, keypath, fn;\n\n  \t\tkeypath = this.keypath;\n  \t\tcomputation = this.root.viewmodel.computations[keypath.str];\n\n  \t\t// only if it doesn't exist yet!\n  \t\tif (!computation) {\n  \t\t\tfn = shared_getFunctionFromString(this.str, this.refResolvers.length);\n\n  \t\t\tvalueGetters = this.keypaths.map(function (keypath) {\n  \t\t\t\tvar value;\n\n  \t\t\t\tif (keypath === \"undefined\") {\n  \t\t\t\t\treturn function () {\n  \t\t\t\t\t\treturn undefined;\n  \t\t\t\t\t};\n  \t\t\t\t}\n\n  \t\t\t\t// 'special' keypaths encode a value\n  \t\t\t\tif (keypath.isSpecial) {\n  \t\t\t\t\tvalue = keypath.value;\n  \t\t\t\t\treturn function () {\n  \t\t\t\t\t\treturn value;\n  \t\t\t\t\t};\n  \t\t\t\t}\n\n  \t\t\t\treturn function () {\n  \t\t\t\t\tvar value = _this.root.viewmodel.get(keypath, { noUnwrap: true, fullRootGet: true });\n  \t\t\t\t\tif (typeof value === \"function\") {\n  \t\t\t\t\t\tvalue = wrapFunction(value, _this.root);\n  \t\t\t\t\t}\n  \t\t\t\t\treturn value;\n  \t\t\t\t};\n  \t\t\t});\n\n  \t\t\tsignature = {\n  \t\t\t\tdeps: this.keypaths.filter(isValidDependency),\n  \t\t\t\tgetter: function () {\n  \t\t\t\t\tvar args = valueGetters.map(call);\n  \t\t\t\t\treturn fn.apply(null, args);\n  \t\t\t\t}\n  \t\t\t};\n\n  \t\t\tcomputation = this.root.viewmodel.compute(keypath, signature);\n  \t\t} else {\n  \t\t\tthis.root.viewmodel.mark(keypath);\n  \t\t}\n  \t},\n\n  \trebind: function (oldKeypath, newKeypath) {\n  \t\t// TODO only bubble once, no matter how many references are affected by the rebind\n  \t\tthis.refResolvers.forEach(function (r) {\n  \t\t\treturn r.rebind(oldKeypath, newKeypath);\n  \t\t});\n  \t}\n  };\n\n  var Resolvers_ExpressionResolver = ExpressionResolver;\n\n  function call(value) {\n  \treturn value.call();\n  }\n\n  function getUniqueString(str, keypaths) {\n  \t// get string that is unique to this expression\n  \treturn str.replace(/_([0-9]+)/g, function (match, $1) {\n  \t\tvar keypath, value;\n\n  \t\t// make sure we're not replacing a non-keypath _[0-9]\n  \t\tif (+$1 >= keypaths.length) {\n  \t\t\treturn \"_\" + $1;\n  \t\t}\n\n  \t\tkeypath = keypaths[$1];\n\n  \t\tif (keypath === undefined) {\n  \t\t\treturn \"undefined\";\n  \t\t}\n\n  \t\tif (keypath.isSpecial) {\n  \t\t\tvalue = keypath.value;\n  \t\t\treturn typeof value === \"number\" ? value : \"\\\"\" + value + \"\\\"\";\n  \t\t}\n\n  \t\treturn keypath.str;\n  \t});\n  }\n\n  function createExpressionKeypath(uniqueString) {\n  \t// Sanitize by removing any periods or square brackets. Otherwise\n  \t// we can't split the keypath into keys!\n  \t// Remove asterisks too, since they mess with pattern observers\n  \treturn getKeypath(\"${\" + uniqueString.replace(/[\\.\\[\\]]/g, \"-\").replace(/\\*/, \"#MUL#\") + \"}\");\n  }\n\n  function isValidDependency(keypath) {\n  \treturn keypath !== undefined && keypath[0] !== \"@\";\n  }\n\n  function wrapFunction(fn, ractive) {\n  \tvar wrapped, prop, key;\n\n  \tif (fn.__ractive_nowrap) {\n  \t\treturn fn;\n  \t}\n\n  \tprop = \"__ractive_\" + ractive._guid;\n  \twrapped = fn[prop];\n\n  \tif (wrapped) {\n  \t\treturn wrapped;\n  \t} else if (/this/.test(fn.toString())) {\n  \t\tdefineProperty(fn, prop, {\n  \t\t\tvalue: Resolvers_ExpressionResolver__bind.call(fn, ractive),\n  \t\t\tconfigurable: true\n  \t\t});\n\n  \t\t// Add properties/methods to wrapped function\n  \t\tfor (key in fn) {\n  \t\t\tif (fn.hasOwnProperty(key)) {\n  \t\t\t\tfn[prop][key] = fn[key];\n  \t\t\t}\n  \t\t}\n\n  \t\tractive._boundFunctions.push({\n  \t\t\tfn: fn,\n  \t\t\tprop: prop\n  \t\t});\n\n  \t\treturn fn[prop];\n  \t}\n\n  \tdefineProperty(fn, \"__ractive_nowrap\", {\n  \t\tvalue: fn\n  \t});\n\n  \treturn fn.__ractive_nowrap;\n  }\n\n  var MemberResolver = function (template, resolver, parentFragment) {\n  \tvar _this = this;\n\n  \tthis.resolver = resolver;\n  \tthis.root = resolver.root;\n  \tthis.parentFragment = parentFragment;\n  \tthis.viewmodel = resolver.root.viewmodel;\n\n  \tif (typeof template === \"string\") {\n  \t\tthis.value = template;\n  \t}\n\n  \t// Simple reference?\n  \telse if (template.t === REFERENCE) {\n  \t\tthis.refResolver = Resolvers_createReferenceResolver(this, template.n, function (keypath) {\n  \t\t\t_this.resolve(keypath);\n  \t\t});\n  \t}\n\n  \t// Otherwise we have an expression in its own right\n  \telse {\n  \t\tnew Resolvers_ExpressionResolver(resolver, parentFragment, template, function (keypath) {\n  \t\t\t_this.resolve(keypath);\n  \t\t});\n  \t}\n  };\n\n  MemberResolver.prototype = {\n  \tresolve: function (keypath) {\n  \t\tif (this.keypath) {\n  \t\t\tthis.viewmodel.unregister(this.keypath, this);\n  \t\t}\n\n  \t\tthis.keypath = keypath;\n  \t\tthis.value = this.viewmodel.get(keypath);\n\n  \t\tthis.bind();\n\n  \t\tthis.resolver.bubble();\n  \t},\n\n  \tbind: function () {\n  \t\tthis.viewmodel.register(this.keypath, this);\n  \t},\n\n  \trebind: function (oldKeypath, newKeypath) {\n  \t\tif (this.refResolver) {\n  \t\t\tthis.refResolver.rebind(oldKeypath, newKeypath);\n  \t\t}\n  \t},\n\n  \tsetValue: function (value) {\n  \t\tthis.value = value;\n  \t\tthis.resolver.bubble();\n  \t},\n\n  \tunbind: function () {\n  \t\tif (this.keypath) {\n  \t\t\tthis.viewmodel.unregister(this.keypath, this);\n  \t\t}\n\n  \t\tif (this.refResolver) {\n  \t\t\tthis.refResolver.unbind();\n  \t\t}\n  \t},\n\n  \tforceResolution: function () {\n  \t\tif (this.refResolver) {\n  \t\t\tthis.refResolver.forceResolution();\n  \t\t}\n  \t}\n  };\n\n  var ReferenceExpressionResolver_MemberResolver = MemberResolver;\n\n  var ReferenceExpressionResolver = function (mustache, template, callback) {\n  \tvar _this = this;\n\n  \tvar ractive, ref, keypath, parentFragment;\n\n  \tthis.parentFragment = parentFragment = mustache.parentFragment;\n  \tthis.root = ractive = mustache.root;\n  \tthis.mustache = mustache;\n\n  \tthis.ref = ref = template.r;\n  \tthis.callback = callback;\n\n  \tthis.unresolved = [];\n\n  \t// Find base keypath\n  \tif (keypath = shared_resolveRef(ractive, ref, parentFragment)) {\n  \t\tthis.base = keypath;\n  \t} else {\n  \t\tthis.baseResolver = new Resolvers_ReferenceResolver(this, ref, function (keypath) {\n  \t\t\t_this.base = keypath;\n  \t\t\t_this.baseResolver = null;\n  \t\t\t_this.bubble();\n  \t\t});\n  \t}\n\n  \t// Find values for members, or mark them as unresolved\n  \tthis.members = template.m.map(function (template) {\n  \t\treturn new ReferenceExpressionResolver_MemberResolver(template, _this, parentFragment);\n  \t});\n\n  \tthis.ready = true;\n  \tthis.bubble(); // trigger initial resolution if possible\n  };\n\n  ReferenceExpressionResolver.prototype = {\n  \tgetKeypath: function () {\n  \t\tvar values = this.members.map(ReferenceExpressionResolver_ReferenceExpressionResolver__getValue);\n\n  \t\tif (!values.every(isDefined) || this.baseResolver) {\n  \t\t\treturn null;\n  \t\t}\n\n  \t\treturn this.base.join(values.join(\".\"));\n  \t},\n\n  \tbubble: function () {\n  \t\tif (!this.ready || this.baseResolver) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tthis.callback(this.getKeypath());\n  \t},\n\n  \tunbind: function () {\n  \t\tthis.members.forEach(methodCallers__unbind);\n  \t},\n\n  \trebind: function (oldKeypath, newKeypath) {\n  \t\tvar changed;\n\n  \t\tif (this.base) {\n  \t\t\tvar newBase = this.base.replace(oldKeypath, newKeypath);\n  \t\t\tif (newBase && newBase !== this.base) {\n  \t\t\t\tthis.base = newBase;\n  \t\t\t\tchanged = true;\n  \t\t\t}\n  \t\t}\n\n  \t\tthis.members.forEach(function (members) {\n  \t\t\tif (members.rebind(oldKeypath, newKeypath)) {\n  \t\t\t\tchanged = true;\n  \t\t\t}\n  \t\t});\n\n  \t\tif (changed) {\n  \t\t\tthis.bubble();\n  \t\t}\n  \t},\n\n  \tforceResolution: function () {\n  \t\tif (this.baseResolver) {\n  \t\t\tthis.base = getKeypath(this.ref);\n\n  \t\t\tthis.baseResolver.unbind();\n  \t\t\tthis.baseResolver = null;\n  \t\t}\n\n  \t\tthis.members.forEach(forceResolution);\n  \t\tthis.bubble();\n  \t}\n  };\n\n  function ReferenceExpressionResolver_ReferenceExpressionResolver__getValue(member) {\n  \treturn member.value;\n  }\n\n  function isDefined(value) {\n  \treturn value != undefined;\n  }\n\n  function forceResolution(member) {\n  \tmember.forceResolution();\n  }\n\n  var ReferenceExpressionResolver_ReferenceExpressionResolver = ReferenceExpressionResolver;\n\n  var Mustache_initialise = Mustache$init;\n  function Mustache$init(mustache, options) {\n\n  \tvar ref, parentFragment, template;\n\n  \tparentFragment = options.parentFragment;\n  \ttemplate = options.template;\n\n  \tmustache.root = parentFragment.root;\n  \tmustache.parentFragment = parentFragment;\n  \tmustache.pElement = parentFragment.pElement;\n\n  \tmustache.template = options.template;\n  \tmustache.index = options.index || 0;\n  \tmustache.isStatic = options.template.s;\n\n  \tmustache.type = options.template.t;\n\n  \tmustache.registered = false;\n\n  \t// if this is a simple mustache, with a reference, we just need to resolve\n  \t// the reference to a keypath\n  \tif (ref = template.r) {\n  \t\tmustache.resolver = Resolvers_createReferenceResolver(mustache, ref, resolve);\n  \t}\n\n  \t// if it's an expression, we have a bit more work to do\n  \tif (options.template.x) {\n  \t\tmustache.resolver = new Resolvers_ExpressionResolver(mustache, parentFragment, options.template.x, resolveAndRebindChildren);\n  \t}\n\n  \tif (options.template.rx) {\n  \t\tmustache.resolver = new ReferenceExpressionResolver_ReferenceExpressionResolver(mustache, options.template.rx, resolveAndRebindChildren);\n  \t}\n\n  \t// Special case - inverted sections\n  \tif (mustache.template.n === SECTION_UNLESS && !mustache.hasOwnProperty(\"value\")) {\n  \t\tmustache.setValue(undefined);\n  \t}\n\n  \tfunction resolve(keypath) {\n  \t\tmustache.resolve(keypath);\n  \t}\n\n  \tfunction resolveAndRebindChildren(newKeypath) {\n  \t\tvar oldKeypath = mustache.keypath;\n\n  \t\tif (newKeypath != oldKeypath) {\n  \t\t\tmustache.resolve(newKeypath);\n\n  \t\t\tif (oldKeypath !== undefined) {\n  \t\t\t\tmustache.fragments && mustache.fragments.forEach(function (f) {\n  \t\t\t\t\tf.rebind(oldKeypath, newKeypath);\n  \t\t\t\t});\n  \t\t\t}\n  \t\t}\n  \t}\n  }\n\n  var Mustache_resolve = Mustache$resolve;\n\n  function Mustache$resolve(keypath) {\n  \tvar wasResolved, value, twowayBinding;\n\n  \t// 'Special' keypaths, e.g. @foo or @7, encode a value\n  \tif (keypath && keypath.isSpecial) {\n  \t\tthis.keypath = keypath;\n  \t\tthis.setValue(keypath.value);\n  \t\treturn;\n  \t}\n\n  \t// If we resolved previously, we need to unregister\n  \tif (this.registered) {\n  \t\t// undefined or null\n  \t\tthis.root.viewmodel.unregister(this.keypath, this);\n  \t\tthis.registered = false;\n\n  \t\twasResolved = true;\n  \t}\n\n  \tthis.keypath = keypath;\n\n  \t// If the new keypath exists, we need to register\n  \t// with the viewmodel\n  \tif (keypath != undefined) {\n  \t\t// undefined or null\n  \t\tvalue = this.root.viewmodel.get(keypath);\n  \t\tthis.root.viewmodel.register(keypath, this);\n\n  \t\tthis.registered = true;\n  \t}\n\n  \t// Either way we need to queue up a render (`value`\n  \t// will be `undefined` if there's no keypath)\n  \tthis.setValue(value);\n\n  \t// Two-way bindings need to point to their new target keypath\n  \tif (wasResolved && (twowayBinding = this.twowayBinding)) {\n  \t\ttwowayBinding.rebound();\n  \t}\n  }\n\n  var Mustache_rebind = Mustache$rebind;\n\n  function Mustache$rebind(oldKeypath, newKeypath) {\n  \t// Children first\n  \tif (this.fragments) {\n  \t\tthis.fragments.forEach(function (f) {\n  \t\t\treturn f.rebind(oldKeypath, newKeypath);\n  \t\t});\n  \t}\n\n  \t// Expression mustache?\n  \tif (this.resolver) {\n  \t\tthis.resolver.rebind(oldKeypath, newKeypath);\n  \t}\n  }\n\n  var Mustache = {\n  \tgetValue: Mustache_getValue,\n  \tinit: Mustache_initialise,\n  \tresolve: Mustache_resolve,\n  \trebind: Mustache_rebind\n  };\n\n  var Interpolator = function (options) {\n  \tthis.type = INTERPOLATOR;\n  \tMustache.init(this, options);\n  };\n\n  Interpolator.prototype = {\n  \tupdate: function () {\n  \t\tthis.node.data = this.value == undefined ? \"\" : this.value;\n  \t},\n  \tresolve: Mustache.resolve,\n  \trebind: Mustache.rebind,\n  \tdetach: shared_detach,\n\n  \tunbind: shared_unbind,\n\n  \trender: function () {\n  \t\tif (!this.node) {\n  \t\t\tthis.node = document.createTextNode(safeToStringValue(this.value));\n  \t\t}\n\n  \t\treturn this.node;\n  \t},\n\n  \tunrender: function (shouldDestroy) {\n  \t\tif (shouldDestroy) {\n  \t\t\tdetachNode(this.node);\n  \t\t}\n  \t},\n\n  \tgetValue: Mustache.getValue,\n\n  \t// TEMP\n  \tsetValue: function (value) {\n  \t\tvar wrapper;\n\n  \t\t// TODO is there a better way to approach this?\n  \t\tif (this.keypath && (wrapper = this.root.viewmodel.wrapped[this.keypath.str])) {\n  \t\t\tvalue = wrapper.get();\n  \t\t}\n\n  \t\tif (!isEqual(value, this.value)) {\n  \t\t\tthis.value = value;\n  \t\t\tthis.parentFragment.bubble();\n\n  \t\t\tif (this.node) {\n  \t\t\t\tglobal_runloop.addView(this);\n  \t\t\t}\n  \t\t}\n  \t},\n\n  \tfirstNode: function () {\n  \t\treturn this.node;\n  \t},\n\n  \ttoString: function (escape) {\n  \t\tvar string = \"\" + safeToStringValue(this.value);\n  \t\treturn escape ? escapeHtml(string) : string;\n  \t}\n  };\n\n  var items_Interpolator = Interpolator;\n\n  var Section_prototype_bubble = Section$bubble;\n\n  function Section$bubble() {\n  \tthis.parentFragment.bubble();\n  }\n\n  var Section_prototype_detach = Section$detach;\n\n  function Section$detach() {\n  \tvar docFrag;\n\n  \tif (this.fragments.length === 1) {\n  \t\treturn this.fragments[0].detach();\n  \t}\n\n  \tdocFrag = document.createDocumentFragment();\n\n  \tthis.fragments.forEach(function (item) {\n  \t\tdocFrag.appendChild(item.detach());\n  \t});\n\n  \treturn docFrag;\n  }\n\n  var find = Section$find;\n\n  function Section$find(selector) {\n  \tvar i, len, queryResult;\n\n  \tlen = this.fragments.length;\n  \tfor (i = 0; i < len; i += 1) {\n  \t\tif (queryResult = this.fragments[i].find(selector)) {\n  \t\t\treturn queryResult;\n  \t\t}\n  \t}\n\n  \treturn null;\n  }\n\n  var findAll = Section$findAll;\n\n  function Section$findAll(selector, query) {\n  \tvar i, len;\n\n  \tlen = this.fragments.length;\n  \tfor (i = 0; i < len; i += 1) {\n  \t\tthis.fragments[i].findAll(selector, query);\n  \t}\n  }\n\n  var findAllComponents = Section$findAllComponents;\n\n  function Section$findAllComponents(selector, query) {\n  \tvar i, len;\n\n  \tlen = this.fragments.length;\n  \tfor (i = 0; i < len; i += 1) {\n  \t\tthis.fragments[i].findAllComponents(selector, query);\n  \t}\n  }\n\n  var findComponent = Section$findComponent;\n\n  function Section$findComponent(selector) {\n  \tvar i, len, queryResult;\n\n  \tlen = this.fragments.length;\n  \tfor (i = 0; i < len; i += 1) {\n  \t\tif (queryResult = this.fragments[i].findComponent(selector)) {\n  \t\t\treturn queryResult;\n  \t\t}\n  \t}\n\n  \treturn null;\n  }\n\n  var findNextNode = Section$findNextNode;\n\n  function Section$findNextNode(fragment) {\n  \tif (this.fragments[fragment.index + 1]) {\n  \t\treturn this.fragments[fragment.index + 1].firstNode();\n  \t}\n\n  \treturn this.parentFragment.findNextNode(this);\n  }\n\n  var firstNode = Section$firstNode;\n\n  function Section$firstNode() {\n  \tvar len, i, node;\n\n  \tif (len = this.fragments.length) {\n  \t\tfor (i = 0; i < len; i += 1) {\n  \t\t\tif (node = this.fragments[i].firstNode()) {\n  \t\t\t\treturn node;\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \treturn this.parentFragment.findNextNode(this);\n  }\n\n  var shuffle = Section$shuffle;\n\n  function Section$shuffle(newIndices) {\n  \tvar _this = this;\n\n  \tvar parentFragment, firstChange, i, newLength, reboundFragments, fragmentOptions, fragment;\n\n  \t// short circuit any double-updates, and ensure that this isn't applied to\n  \t// non-list sections\n  \tif (this.shuffling || this.unbound || this.currentSubtype !== SECTION_EACH) {\n  \t\treturn;\n  \t}\n\n  \tthis.shuffling = true;\n  \tglobal_runloop.scheduleTask(function () {\n  \t\treturn _this.shuffling = false;\n  \t});\n\n  \tparentFragment = this.parentFragment;\n\n  \treboundFragments = [];\n\n  \t// TODO: need to update this\n  \t// first, rebind existing fragments\n  \tnewIndices.forEach(function (newIndex, oldIndex) {\n  \t\tvar fragment, by, oldKeypath, newKeypath, deps;\n\n  \t\tif (newIndex === oldIndex) {\n  \t\t\treboundFragments[newIndex] = _this.fragments[oldIndex];\n  \t\t\treturn;\n  \t\t}\n\n  \t\tfragment = _this.fragments[oldIndex];\n\n  \t\tif (firstChange === undefined) {\n  \t\t\tfirstChange = oldIndex;\n  \t\t}\n\n  \t\t// does this fragment need to be torn down?\n  \t\tif (newIndex === -1) {\n  \t\t\t_this.fragmentsToUnrender.push(fragment);\n  \t\t\tfragment.unbind();\n  \t\t\treturn;\n  \t\t}\n\n  \t\t// Otherwise, it needs to be rebound to a new index\n  \t\tby = newIndex - oldIndex;\n  \t\toldKeypath = _this.keypath.join(oldIndex);\n  \t\tnewKeypath = _this.keypath.join(newIndex);\n\n  \t\tfragment.index = newIndex;\n\n  \t\t// notify any registered index refs directly\n  \t\tif (deps = fragment.registeredIndexRefs) {\n  \t\t\tdeps.forEach(shuffle__blindRebind);\n  \t\t}\n\n  \t\tfragment.rebind(oldKeypath, newKeypath);\n  \t\treboundFragments[newIndex] = fragment;\n  \t});\n\n  \tnewLength = this.root.viewmodel.get(this.keypath).length;\n\n  \t// If nothing changed with the existing fragments, then we start adding\n  \t// new fragments at the end...\n  \tif (firstChange === undefined) {\n  \t\t// ...unless there are no new fragments to add\n  \t\tif (this.length === newLength) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tfirstChange = this.length;\n  \t}\n\n  \tthis.length = this.fragments.length = newLength;\n\n  \tif (this.rendered) {\n  \t\tglobal_runloop.addView(this);\n  \t}\n\n  \t// Prepare new fragment options\n  \tfragmentOptions = {\n  \t\ttemplate: this.template.f,\n  \t\troot: this.root,\n  \t\towner: this\n  \t};\n\n  \t// Add as many new fragments as we need to, or add back existing\n  \t// (detached) fragments\n  \tfor (i = firstChange; i < newLength; i += 1) {\n  \t\tfragment = reboundFragments[i];\n\n  \t\tif (!fragment) {\n  \t\t\tthis.fragmentsToCreate.push(i);\n  \t\t}\n\n  \t\tthis.fragments[i] = fragment;\n  \t}\n  }\n\n  function shuffle__blindRebind(dep) {\n  \t// the keypath doesn't actually matter here as it won't have changed\n  \tdep.rebind(\"\", \"\");\n  }\n\n  var prototype_rebind = function (oldKeypath, newKeypath) {\n  \tMustache.rebind.call(this, oldKeypath, newKeypath);\n  };\n\n  var Section_prototype_render = Section$render;\n\n  function Section$render() {\n  \tvar _this = this;\n\n  \tthis.docFrag = document.createDocumentFragment();\n\n  \tthis.fragments.forEach(function (f) {\n  \t\treturn _this.docFrag.appendChild(f.render());\n  \t});\n\n  \tthis.renderedFragments = this.fragments.slice();\n  \tthis.fragmentsToRender = [];\n\n  \tthis.rendered = true;\n  \treturn this.docFrag;\n  }\n\n  var setValue = Section$setValue;\n\n  function Section$setValue(value) {\n  \tvar _this = this;\n\n  \tvar wrapper, fragmentOptions;\n\n  \tif (this.updating) {\n  \t\t// If a child of this section causes a re-evaluation - for example, an\n  \t\t// expression refers to a function that mutates the array that this\n  \t\t// section depends on - we'll end up with a double rendering bug (see\n  \t\t// https://github.com/ractivejs/ractive/issues/748). This prevents it.\n  \t\treturn;\n  \t}\n\n  \tthis.updating = true;\n\n  \t// with sections, we need to get the fake value if we have a wrapped object\n  \tif (this.keypath && (wrapper = this.root.viewmodel.wrapped[this.keypath.str])) {\n  \t\tvalue = wrapper.get();\n  \t}\n\n  \t// If any fragments are awaiting creation after a splice,\n  \t// this is the place to do it\n  \tif (this.fragmentsToCreate.length) {\n  \t\tfragmentOptions = {\n  \t\t\ttemplate: this.template.f || [],\n  \t\t\troot: this.root,\n  \t\t\tpElement: this.pElement,\n  \t\t\towner: this\n  \t\t};\n\n  \t\tthis.fragmentsToCreate.forEach(function (index) {\n  \t\t\tvar fragment;\n\n  \t\t\tfragmentOptions.context = _this.keypath.join(index);\n  \t\t\tfragmentOptions.index = index;\n\n  \t\t\tfragment = new virtualdom_Fragment(fragmentOptions);\n  \t\t\t_this.fragmentsToRender.push(_this.fragments[index] = fragment);\n  \t\t});\n\n  \t\tthis.fragmentsToCreate.length = 0;\n  \t} else if (reevaluateSection(this, value)) {\n  \t\tthis.bubble();\n\n  \t\tif (this.rendered) {\n  \t\t\tglobal_runloop.addView(this);\n  \t\t}\n  \t}\n\n  \tthis.value = value;\n  \tthis.updating = false;\n  }\n\n  function changeCurrentSubtype(section, value, obj) {\n  \tif (value === SECTION_EACH) {\n  \t\t// make sure ref type is up to date for key or value indices\n  \t\tif (section.indexRefs && section.indexRefs[0]) {\n  \t\t\tvar ref = section.indexRefs[0];\n\n  \t\t\t// when switching flavors, make sure the section gets updated\n  \t\t\tif (obj && ref.t === \"i\" || !obj && ref.t === \"k\") {\n  \t\t\t\t// if switching from object to list, unbind all of the old fragments\n  \t\t\t\tif (!obj) {\n  \t\t\t\t\tsection.length = 0;\n  \t\t\t\t\tsection.fragmentsToUnrender = section.fragments.slice(0);\n  \t\t\t\t\tsection.fragmentsToUnrender.forEach(function (f) {\n  \t\t\t\t\t\treturn f.unbind();\n  \t\t\t\t\t});\n  \t\t\t\t}\n  \t\t\t}\n\n  \t\t\tref.t = obj ? \"k\" : \"i\";\n  \t\t}\n  \t}\n\n  \tsection.currentSubtype = value;\n  }\n\n  function reevaluateSection(section, value) {\n  \tvar fragmentOptions = {\n  \t\ttemplate: section.template.f || [],\n  \t\troot: section.root,\n  \t\tpElement: section.parentFragment.pElement,\n  \t\towner: section\n  \t};\n\n  \tsection.hasContext = true;\n\n  \t// If we already know the section type, great\n  \t// TODO can this be optimised? i.e. pick an reevaluateSection function during init\n  \t// and avoid doing this each time?\n  \tif (section.subtype) {\n  \t\tswitch (section.subtype) {\n  \t\t\tcase SECTION_IF:\n  \t\t\t\tsection.hasContext = false;\n  \t\t\t\treturn reevaluateConditionalSection(section, value, false, fragmentOptions);\n\n  \t\t\tcase SECTION_UNLESS:\n  \t\t\t\tsection.hasContext = false;\n  \t\t\t\treturn reevaluateConditionalSection(section, value, true, fragmentOptions);\n\n  \t\t\tcase SECTION_WITH:\n  \t\t\t\treturn reevaluateContextSection(section, fragmentOptions);\n\n  \t\t\tcase SECTION_IF_WITH:\n  \t\t\t\treturn reevaluateConditionalContextSection(section, value, fragmentOptions);\n\n  \t\t\tcase SECTION_EACH:\n  \t\t\t\tif (isObject(value)) {\n  \t\t\t\t\tchangeCurrentSubtype(section, section.subtype, true);\n  \t\t\t\t\treturn reevaluateListObjectSection(section, value, fragmentOptions);\n  \t\t\t\t}\n\n  \t\t\t\t// Fallthrough - if it's a conditional or an array we need to continue\n  \t\t}\n  \t}\n\n  \t// Otherwise we need to work out what sort of section we're dealing with\n  \tsection.ordered = !!isArrayLike(value);\n\n  \t// Ordered list section\n  \tif (section.ordered) {\n  \t\tchangeCurrentSubtype(section, SECTION_EACH, false);\n  \t\treturn reevaluateListSection(section, value, fragmentOptions);\n  \t}\n\n  \t// Unordered list, or context\n  \tif (isObject(value) || typeof value === \"function\") {\n  \t\t// Index reference indicates section should be treated as a list\n  \t\tif (section.template.i) {\n  \t\t\tchangeCurrentSubtype(section, SECTION_EACH, true);\n  \t\t\treturn reevaluateListObjectSection(section, value, fragmentOptions);\n  \t\t}\n\n  \t\t// Otherwise, object provides context for contents\n  \t\tchangeCurrentSubtype(section, SECTION_WITH, false);\n  \t\treturn reevaluateContextSection(section, fragmentOptions);\n  \t}\n\n  \t// Conditional section\n  \tchangeCurrentSubtype(section, SECTION_IF, false);\n  \tsection.hasContext = false;\n  \treturn reevaluateConditionalSection(section, value, false, fragmentOptions);\n  }\n\n  function reevaluateListSection(section, value, fragmentOptions) {\n  \tvar i, length, fragment;\n\n  \tlength = value.length;\n\n  \tif (length === section.length) {\n  \t\t// Nothing to do\n  \t\treturn false;\n  \t}\n\n  \t// if the array is shorter than it was previously, remove items\n  \tif (length < section.length) {\n  \t\tsection.fragmentsToUnrender = section.fragments.splice(length, section.length - length);\n  \t\tsection.fragmentsToUnrender.forEach(methodCallers__unbind);\n  \t}\n\n  \t// otherwise...\n  \telse {\n  \t\tif (length > section.length) {\n  \t\t\t// add any new ones\n  \t\t\tfor (i = section.length; i < length; i += 1) {\n  \t\t\t\t// append list item to context stack\n  \t\t\t\tfragmentOptions.context = section.keypath.join(i);\n  \t\t\t\tfragmentOptions.index = i;\n\n  \t\t\t\tfragment = new virtualdom_Fragment(fragmentOptions);\n  \t\t\t\tsection.fragmentsToRender.push(section.fragments[i] = fragment);\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \tsection.length = length;\n  \treturn true;\n  }\n\n  function reevaluateListObjectSection(section, value, fragmentOptions) {\n  \tvar id, i, hasKey, fragment, changed, deps;\n\n  \thasKey = section.hasKey || (section.hasKey = {});\n\n  \t// remove any fragments that should no longer exist\n  \ti = section.fragments.length;\n  \twhile (i--) {\n  \t\tfragment = section.fragments[i];\n\n  \t\tif (!(fragment.key in value)) {\n  \t\t\tchanged = true;\n\n  \t\t\tfragment.unbind();\n  \t\t\tsection.fragmentsToUnrender.push(fragment);\n  \t\t\tsection.fragments.splice(i, 1);\n\n  \t\t\thasKey[fragment.key] = false;\n  \t\t}\n  \t}\n\n  \t// notify any dependents about changed indices\n  \ti = section.fragments.length;\n  \twhile (i--) {\n  \t\tfragment = section.fragments[i];\n\n  \t\tif (fragment.index !== i) {\n  \t\t\tfragment.index = i;\n  \t\t\tif (deps = fragment.registeredIndexRefs) {\n  \t\t\t\tdeps.forEach(setValue__blindRebind);\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \t// add any that haven't been created yet\n  \ti = section.fragments.length;\n  \tfor (id in value) {\n  \t\tif (!hasKey[id]) {\n  \t\t\tchanged = true;\n\n  \t\t\tfragmentOptions.context = section.keypath.join(id);\n  \t\t\tfragmentOptions.key = id;\n  \t\t\tfragmentOptions.index = i++;\n\n  \t\t\tfragment = new virtualdom_Fragment(fragmentOptions);\n\n  \t\t\tsection.fragmentsToRender.push(fragment);\n  \t\t\tsection.fragments.push(fragment);\n  \t\t\thasKey[id] = true;\n  \t\t}\n  \t}\n\n  \tsection.length = section.fragments.length;\n  \treturn changed;\n  }\n\n  function reevaluateConditionalContextSection(section, value, fragmentOptions) {\n  \tif (value) {\n  \t\treturn reevaluateContextSection(section, fragmentOptions);\n  \t} else {\n  \t\treturn removeSectionFragments(section);\n  \t}\n  }\n\n  function reevaluateContextSection(section, fragmentOptions) {\n  \tvar fragment;\n\n  \t// ...then if it isn't rendered, render it, adding section.keypath to the context stack\n  \t// (if it is already rendered, then any children dependent on the context stack\n  \t// will update themselves without any prompting)\n  \tif (!section.length) {\n  \t\t// append this section to the context stack\n  \t\tfragmentOptions.context = section.keypath;\n  \t\tfragmentOptions.index = 0;\n\n  \t\tfragment = new virtualdom_Fragment(fragmentOptions);\n\n  \t\tsection.fragmentsToRender.push(section.fragments[0] = fragment);\n  \t\tsection.length = 1;\n\n  \t\treturn true;\n  \t}\n  }\n\n  function reevaluateConditionalSection(section, value, inverted, fragmentOptions) {\n  \tvar doRender, emptyArray, emptyObject, fragment, name;\n\n  \temptyArray = isArrayLike(value) && value.length === 0;\n  \temptyObject = false;\n  \tif (!isArrayLike(value) && isObject(value)) {\n  \t\temptyObject = true;\n  \t\tfor (name in value) {\n  \t\t\temptyObject = false;\n  \t\t\tbreak;\n  \t\t}\n  \t}\n\n  \tif (inverted) {\n  \t\tdoRender = emptyArray || emptyObject || !value;\n  \t} else {\n  \t\tdoRender = value && !emptyArray && !emptyObject;\n  \t}\n\n  \tif (doRender) {\n  \t\tif (!section.length) {\n  \t\t\t// no change to context stack\n  \t\t\tfragmentOptions.index = 0;\n\n  \t\t\tfragment = new virtualdom_Fragment(fragmentOptions);\n  \t\t\tsection.fragmentsToRender.push(section.fragments[0] = fragment);\n  \t\t\tsection.length = 1;\n\n  \t\t\treturn true;\n  \t\t}\n\n  \t\tif (section.length > 1) {\n  \t\t\tsection.fragmentsToUnrender = section.fragments.splice(1);\n  \t\t\tsection.fragmentsToUnrender.forEach(methodCallers__unbind);\n\n  \t\t\treturn true;\n  \t\t}\n  \t} else {\n  \t\treturn removeSectionFragments(section);\n  \t}\n  }\n\n  function removeSectionFragments(section) {\n  \tif (section.length) {\n  \t\tsection.fragmentsToUnrender = section.fragments.splice(0, section.fragments.length).filter(isRendered);\n  \t\tsection.fragmentsToUnrender.forEach(methodCallers__unbind);\n  \t\tsection.length = section.fragmentsToRender.length = 0;\n  \t\treturn true;\n  \t}\n  }\n\n  function isRendered(fragment) {\n  \treturn fragment.rendered;\n  }\n\n  function setValue__blindRebind(dep) {\n  \t// the keypath doesn't actually matter here as it won't have changed\n  \tdep.rebind(\"\", \"\");\n  }\n\n  var prototype_toString = Section$toString;\n\n  function Section$toString(escape) {\n  \tvar str, i, len;\n\n  \tstr = \"\";\n\n  \ti = 0;\n  \tlen = this.length;\n\n  \tfor (i = 0; i < len; i += 1) {\n  \t\tstr += this.fragments[i].toString(escape);\n  \t}\n\n  \treturn str;\n  }\n\n  var prototype_unbind = Section$unbind;\n  function Section$unbind() {\n  \tvar _this = this;\n\n  \tthis.fragments.forEach(methodCallers__unbind);\n  \tthis.fragmentsToRender.forEach(function (f) {\n  \t\treturn removeFromArray(_this.fragments, f);\n  \t});\n  \tthis.fragmentsToRender = [];\n  \tshared_unbind.call(this);\n\n  \tthis.length = 0;\n  \tthis.unbound = true;\n  }\n\n  var prototype_unrender = Section$unrender;\n\n  function Section$unrender(shouldDestroy) {\n  \tthis.fragments.forEach(shouldDestroy ? unrenderAndDestroy : prototype_unrender__unrender);\n  \tthis.renderedFragments = [];\n  \tthis.rendered = false;\n  }\n\n  function unrenderAndDestroy(fragment) {\n  \tfragment.unrender(true);\n  }\n\n  function prototype_unrender__unrender(fragment) {\n  \tfragment.unrender(false);\n  }\n\n  var prototype_update = Section$update;\n\n  function Section$update() {\n  \tvar fragment, renderIndex, renderedFragments, anchor, target, i, len;\n\n  \t// `this.renderedFragments` is in the order of the previous render.\n  \t// If fragments have shuffled about, this allows us to quickly\n  \t// reinsert them in the correct place\n  \trenderedFragments = this.renderedFragments;\n\n  \t// Remove fragments that have been marked for destruction\n  \twhile (fragment = this.fragmentsToUnrender.pop()) {\n  \t\tfragment.unrender(true);\n  \t\trenderedFragments.splice(renderedFragments.indexOf(fragment), 1);\n  \t}\n\n  \t// Render new fragments (but don't insert them yet)\n  \twhile (fragment = this.fragmentsToRender.shift()) {\n  \t\tfragment.render();\n  \t}\n\n  \tif (this.rendered) {\n  \t\ttarget = this.parentFragment.getNode();\n  \t}\n\n  \tlen = this.fragments.length;\n  \tfor (i = 0; i < len; i += 1) {\n  \t\tfragment = this.fragments[i];\n  \t\trenderIndex = renderedFragments.indexOf(fragment, i); // search from current index - it's guaranteed to be the same or higher\n\n  \t\tif (renderIndex === i) {\n  \t\t\t// already in the right place. insert accumulated nodes (if any) and carry on\n  \t\t\tif (this.docFrag.childNodes.length) {\n  \t\t\t\tanchor = fragment.firstNode();\n  \t\t\t\ttarget.insertBefore(this.docFrag, anchor);\n  \t\t\t}\n\n  \t\t\tcontinue;\n  \t\t}\n\n  \t\tthis.docFrag.appendChild(fragment.detach());\n\n  \t\t// update renderedFragments\n  \t\tif (renderIndex !== -1) {\n  \t\t\trenderedFragments.splice(renderIndex, 1);\n  \t\t}\n  \t\trenderedFragments.splice(i, 0, fragment);\n  \t}\n\n  \tif (this.rendered && this.docFrag.childNodes.length) {\n  \t\tanchor = this.parentFragment.findNextNode(this);\n  \t\ttarget.insertBefore(this.docFrag, anchor);\n  \t}\n\n  \t// Save the rendering order for next time\n  \tthis.renderedFragments = this.fragments.slice();\n  }\n\n  var Section = function (options) {\n  \tthis.type = SECTION;\n  \tthis.subtype = this.currentSubtype = options.template.n;\n  \tthis.inverted = this.subtype === SECTION_UNLESS;\n\n  \tthis.pElement = options.pElement;\n\n  \tthis.fragments = [];\n  \tthis.fragmentsToCreate = [];\n  \tthis.fragmentsToRender = [];\n  \tthis.fragmentsToUnrender = [];\n\n  \tif (options.template.i) {\n  \t\tthis.indexRefs = options.template.i.split(\",\").map(function (k, i) {\n  \t\t\treturn { n: k, t: i === 0 ? \"k\" : \"i\" };\n  \t\t});\n  \t}\n\n  \tthis.renderedFragments = [];\n\n  \tthis.length = 0; // number of times this section is rendered\n\n  \tMustache.init(this, options);\n  };\n\n  Section.prototype = {\n  \tbubble: Section_prototype_bubble,\n  \tdetach: Section_prototype_detach,\n  \tfind: find,\n  \tfindAll: findAll,\n  \tfindAllComponents: findAllComponents,\n  \tfindComponent: findComponent,\n  \tfindNextNode: findNextNode,\n  \tfirstNode: firstNode,\n  \tgetIndexRef: function (name) {\n  \t\tif (this.indexRefs) {\n  \t\t\tvar i = this.indexRefs.length;\n  \t\t\twhile (i--) {\n  \t\t\t\tvar ref = this.indexRefs[i];\n  \t\t\t\tif (ref.n === name) {\n  \t\t\t\t\treturn ref;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t},\n  \tgetValue: Mustache.getValue,\n  \tshuffle: shuffle,\n  \trebind: prototype_rebind,\n  \trender: Section_prototype_render,\n  \tresolve: Mustache.resolve,\n  \tsetValue: setValue,\n  \ttoString: prototype_toString,\n  \tunbind: prototype_unbind,\n  \tunrender: prototype_unrender,\n  \tupdate: prototype_update\n  };\n\n  var _Section = Section;\n\n  var Triple_prototype_detach = Triple$detach;\n\n  function Triple$detach() {\n  \tvar len, i;\n\n  \tif (this.docFrag) {\n  \t\tlen = this.nodes.length;\n  \t\tfor (i = 0; i < len; i += 1) {\n  \t\t\tthis.docFrag.appendChild(this.nodes[i]);\n  \t\t}\n\n  \t\treturn this.docFrag;\n  \t}\n  }\n\n  var Triple_prototype_find = Triple$find;\n  function Triple$find(selector) {\n  \tvar i, len, node, queryResult;\n\n  \tlen = this.nodes.length;\n  \tfor (i = 0; i < len; i += 1) {\n  \t\tnode = this.nodes[i];\n\n  \t\tif (node.nodeType !== 1) {\n  \t\t\tcontinue;\n  \t\t}\n\n  \t\tif (matches(node, selector)) {\n  \t\t\treturn node;\n  \t\t}\n\n  \t\tif (queryResult = node.querySelector(selector)) {\n  \t\t\treturn queryResult;\n  \t\t}\n  \t}\n\n  \treturn null;\n  }\n\n  var Triple_prototype_findAll = Triple$findAll;\n  function Triple$findAll(selector, queryResult) {\n  \tvar i, len, node, queryAllResult, numNodes, j;\n\n  \tlen = this.nodes.length;\n  \tfor (i = 0; i < len; i += 1) {\n  \t\tnode = this.nodes[i];\n\n  \t\tif (node.nodeType !== 1) {\n  \t\t\tcontinue;\n  \t\t}\n\n  \t\tif (matches(node, selector)) {\n  \t\t\tqueryResult.push(node);\n  \t\t}\n\n  \t\tif (queryAllResult = node.querySelectorAll(selector)) {\n  \t\t\tnumNodes = queryAllResult.length;\n  \t\t\tfor (j = 0; j < numNodes; j += 1) {\n  \t\t\t\tqueryResult.push(queryAllResult[j]);\n  \t\t\t}\n  \t\t}\n  \t}\n  }\n\n  var Triple_prototype_firstNode = Triple$firstNode;\n\n  function Triple$firstNode() {\n  \tif (this.rendered && this.nodes[0]) {\n  \t\treturn this.nodes[0];\n  \t}\n\n  \treturn this.parentFragment.findNextNode(this);\n  }\n\n  var elementCache = {},\n      ieBug,\n      ieBlacklist;\n\n  try {\n  \tcreateElement(\"table\").innerHTML = \"foo\";\n  } catch (err) {\n  \tieBug = true;\n\n  \tieBlacklist = {\n  \t\tTABLE: [\"<table class=\\\"x\\\">\", \"</table>\"],\n  \t\tTHEAD: [\"<table><thead class=\\\"x\\\">\", \"</thead></table>\"],\n  \t\tTBODY: [\"<table><tbody class=\\\"x\\\">\", \"</tbody></table>\"],\n  \t\tTR: [\"<table><tr class=\\\"x\\\">\", \"</tr></table>\"],\n  \t\tSELECT: [\"<select class=\\\"x\\\">\", \"</select>\"]\n  \t};\n  }\n\n  var insertHtml = function (html, node, docFrag) {\n  \tvar container,\n  \t    nodes = [],\n  \t    wrapper,\n  \t    selectedOption,\n  \t    child,\n  \t    i;\n\n  \t// render 0 and false\n  \tif (html != null && html !== \"\") {\n  \t\tif (ieBug && (wrapper = ieBlacklist[node.tagName])) {\n  \t\t\tcontainer = element(\"DIV\");\n  \t\t\tcontainer.innerHTML = wrapper[0] + html + wrapper[1];\n  \t\t\tcontainer = container.querySelector(\".x\");\n\n  \t\t\tif (container.tagName === \"SELECT\") {\n  \t\t\t\tselectedOption = container.options[container.selectedIndex];\n  \t\t\t}\n  \t\t} else if (node.namespaceURI === namespaces.svg) {\n  \t\t\tcontainer = element(\"DIV\");\n  \t\t\tcontainer.innerHTML = \"<svg class=\\\"x\\\">\" + html + \"</svg>\";\n  \t\t\tcontainer = container.querySelector(\".x\");\n  \t\t} else {\n  \t\t\tcontainer = element(node.tagName);\n  \t\t\tcontainer.innerHTML = html;\n\n  \t\t\tif (container.tagName === \"SELECT\") {\n  \t\t\t\tselectedOption = container.options[container.selectedIndex];\n  \t\t\t}\n  \t\t}\n\n  \t\twhile (child = container.firstChild) {\n  \t\t\tnodes.push(child);\n  \t\t\tdocFrag.appendChild(child);\n  \t\t}\n\n  \t\t// This is really annoying. Extracting <option> nodes from the\n  \t\t// temporary container <select> causes the remaining ones to\n  \t\t// become selected. So now we have to deselect them. IE8, you\n  \t\t// amaze me. You really do\n  \t\t// ...and now Chrome too\n  \t\tif (node.tagName === \"SELECT\") {\n  \t\t\ti = nodes.length;\n  \t\t\twhile (i--) {\n  \t\t\t\tif (nodes[i] !== selectedOption) {\n  \t\t\t\t\tnodes[i].selected = false;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \treturn nodes;\n  };\n\n  function element(tagName) {\n  \treturn elementCache[tagName] || (elementCache[tagName] = createElement(tagName));\n  }\n\n  var helpers_updateSelect = updateSelect;\n\n  function updateSelect(parentElement) {\n  \tvar selectedOptions, option, value;\n\n  \tif (!parentElement || parentElement.name !== \"select\" || !parentElement.binding) {\n  \t\treturn;\n  \t}\n\n  \tselectedOptions = toArray(parentElement.node.options).filter(isSelected);\n\n  \t// If one of them had a `selected` attribute, we need to sync\n  \t// the model to the view\n  \tif (parentElement.getAttribute(\"multiple\")) {\n  \t\tvalue = selectedOptions.map(function (o) {\n  \t\t\treturn o.value;\n  \t\t});\n  \t} else if (option = selectedOptions[0]) {\n  \t\tvalue = option.value;\n  \t}\n\n  \tif (value !== undefined) {\n  \t\tparentElement.binding.setValue(value);\n  \t}\n\n  \tparentElement.bubble();\n  }\n\n  function isSelected(option) {\n  \treturn option.selected;\n  }\n\n  var Triple_prototype_render = Triple$render;\n  function Triple$render() {\n  \tif (this.rendered) {\n  \t\tthrow new Error(\"Attempted to render an item that was already rendered\");\n  \t}\n\n  \tthis.docFrag = document.createDocumentFragment();\n  \tthis.nodes = insertHtml(this.value, this.parentFragment.getNode(), this.docFrag);\n\n  \t// Special case - we're inserting the contents of a <select>\n  \thelpers_updateSelect(this.pElement);\n\n  \tthis.rendered = true;\n  \treturn this.docFrag;\n  }\n\n  var prototype_setValue = Triple$setValue;\n  function Triple$setValue(value) {\n  \tvar wrapper;\n\n  \t// TODO is there a better way to approach this?\n  \tif (wrapper = this.root.viewmodel.wrapped[this.keypath.str]) {\n  \t\tvalue = wrapper.get();\n  \t}\n\n  \tif (value !== this.value) {\n  \t\tthis.value = value;\n  \t\tthis.parentFragment.bubble();\n\n  \t\tif (this.rendered) {\n  \t\t\tglobal_runloop.addView(this);\n  \t\t}\n  \t}\n  }\n\n  var Triple_prototype_toString = Triple$toString;\n  function Triple$toString() {\n  \treturn this.value != undefined ? decodeCharacterReferences(\"\" + this.value) : \"\";\n  }\n\n  var Triple_prototype_unrender = Triple$unrender;\n  function Triple$unrender(shouldDestroy) {\n  \tif (this.rendered && shouldDestroy) {\n  \t\tthis.nodes.forEach(detachNode);\n  \t\tthis.rendered = false;\n  \t}\n\n  \t// TODO update live queries\n  }\n\n  var Triple_prototype_update = Triple$update;\n  function Triple$update() {\n  \tvar node, parentNode;\n\n  \tif (!this.rendered) {\n  \t\treturn;\n  \t}\n\n  \t// Remove existing nodes\n  \twhile (this.nodes && this.nodes.length) {\n  \t\tnode = this.nodes.pop();\n  \t\tnode.parentNode.removeChild(node);\n  \t}\n\n  \t// Insert new nodes\n  \tparentNode = this.parentFragment.getNode();\n\n  \tthis.nodes = insertHtml(this.value, parentNode, this.docFrag);\n  \tparentNode.insertBefore(this.docFrag, this.parentFragment.findNextNode(this));\n\n  \t// Special case - we're inserting the contents of a <select>\n  \thelpers_updateSelect(this.pElement);\n  }\n\n  var Triple = function (options) {\n  \tthis.type = TRIPLE;\n  \tMustache.init(this, options);\n  };\n\n  Triple.prototype = {\n  \tdetach: Triple_prototype_detach,\n  \tfind: Triple_prototype_find,\n  \tfindAll: Triple_prototype_findAll,\n  \tfirstNode: Triple_prototype_firstNode,\n  \tgetValue: Mustache.getValue,\n  \trebind: Mustache.rebind,\n  \trender: Triple_prototype_render,\n  \tresolve: Mustache.resolve,\n  \tsetValue: prototype_setValue,\n  \ttoString: Triple_prototype_toString,\n  \tunbind: shared_unbind,\n  \tunrender: Triple_prototype_unrender,\n  \tupdate: Triple_prototype_update\n  };\n\n  var _Triple = Triple;\n\n  var Element_prototype_bubble = function () {\n  \tthis.parentFragment.bubble();\n  };\n\n  var Element_prototype_detach = Element$detach;\n\n  function Element$detach() {\n  \tvar node = this.node,\n  \t    parentNode;\n\n  \tif (node) {\n  \t\t// need to check for parent node - DOM may have been altered\n  \t\t// by something other than Ractive! e.g. jQuery UI...\n  \t\tif (parentNode = node.parentNode) {\n  \t\t\tparentNode.removeChild(node);\n  \t\t}\n\n  \t\treturn node;\n  \t}\n  }\n\n  var Element_prototype_find = function (selector) {\n  \tif (!this.node) {\n  \t\t// this element hasn't been rendered yet\n  \t\treturn null;\n  \t}\n\n  \tif (matches(this.node, selector)) {\n  \t\treturn this.node;\n  \t}\n\n  \tif (this.fragment && this.fragment.find) {\n  \t\treturn this.fragment.find(selector);\n  \t}\n  };\n\n  var Element_prototype_findAll = function (selector, query) {\n  \t// Add this node to the query, if applicable, and register the\n  \t// query on this element\n  \tif (query._test(this, true) && query.live) {\n  \t\t(this.liveQueries || (this.liveQueries = [])).push(query);\n  \t}\n\n  \tif (this.fragment) {\n  \t\tthis.fragment.findAll(selector, query);\n  \t}\n  };\n\n  var Element_prototype_findAllComponents = function (selector, query) {\n  \tif (this.fragment) {\n  \t\tthis.fragment.findAllComponents(selector, query);\n  \t}\n  };\n\n  var Element_prototype_findComponent = function (selector) {\n  \tif (this.fragment) {\n  \t\treturn this.fragment.findComponent(selector);\n  \t}\n  };\n\n  var Element_prototype_findNextNode = Element$findNextNode;\n\n  function Element$findNextNode() {\n  \treturn null;\n  }\n\n  var Element_prototype_firstNode = Element$firstNode;\n\n  function Element$firstNode() {\n  \treturn this.node;\n  }\n\n  var getAttribute = Element$getAttribute;\n\n  function Element$getAttribute(name) {\n  \tif (!this.attributes || !this.attributes[name]) {\n  \t\treturn;\n  \t}\n\n  \treturn this.attributes[name].value;\n  }\n\n  var truthy = /^true|on|yes|1$/i;\n  var processBindingAttributes__isNumeric = /^[0-9]+$/;\n\n  var processBindingAttributes = function (element, template) {\n  \tvar val, attrs, attributes;\n\n  \tattributes = template.a || {};\n  \tattrs = {};\n\n  \t// attributes that are present but don't have a value (=)\n  \t// will be set to the number 0, which we condider to be true\n  \t// the string '0', however is false\n\n  \tval = attributes.twoway;\n  \tif (val !== undefined) {\n  \t\tattrs.twoway = val === 0 || truthy.test(val);\n  \t}\n\n  \tval = attributes.lazy;\n  \tif (val !== undefined) {\n  \t\t// check for timeout value\n  \t\tif (val !== 0 && processBindingAttributes__isNumeric.test(val)) {\n  \t\t\tattrs.lazy = parseInt(val);\n  \t\t} else {\n  \t\t\tattrs.lazy = val === 0 || truthy.test(val);\n  \t\t}\n  \t}\n\n  \treturn attrs;\n  };\n\n  var Attribute_prototype_bubble = Attribute$bubble;\n  function Attribute$bubble() {\n  \tvar value = this.useProperty || !this.rendered ? this.fragment.getValue() : this.fragment.toString();\n\n  \t// TODO this can register the attribute multiple times (see render test\n  \t// 'Attribute with nested mustaches')\n  \tif (!isEqual(value, this.value)) {\n\n  \t\t// Need to clear old id from ractive.nodes\n  \t\tif (this.name === \"id\" && this.value) {\n  \t\t\tdelete this.root.nodes[this.value];\n  \t\t}\n\n  \t\tthis.value = value;\n\n  \t\tif (this.name === \"value\" && this.node) {\n  \t\t\t// We need to store the value on the DOM like this so we\n  \t\t\t// can retrieve it later without it being coerced to a string\n  \t\t\tthis.node._ractive.value = value;\n  \t\t}\n\n  \t\tif (this.rendered) {\n  \t\t\tglobal_runloop.addView(this);\n  \t\t}\n  \t}\n  }\n\n  var svgCamelCaseElements, svgCamelCaseAttributes, createMap, map;\n  svgCamelCaseElements = \"altGlyph altGlyphDef altGlyphItem animateColor animateMotion animateTransform clipPath feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence foreignObject glyphRef linearGradient radialGradient textPath vkern\".split(\" \");\n  svgCamelCaseAttributes = \"attributeName attributeType baseFrequency baseProfile calcMode clipPathUnits contentScriptType contentStyleType diffuseConstant edgeMode externalResourcesRequired filterRes filterUnits glyphRef gradientTransform gradientUnits kernelMatrix kernelUnitLength keyPoints keySplines keyTimes lengthAdjust limitingConeAngle markerHeight markerUnits markerWidth maskContentUnits maskUnits numOctaves pathLength patternContentUnits patternTransform patternUnits pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits refX refY repeatCount repeatDur requiredExtensions requiredFeatures specularConstant specularExponent spreadMethod startOffset stdDeviation stitchTiles surfaceScale systemLanguage tableValues targetX targetY textLength viewBox viewTarget xChannelSelector yChannelSelector zoomAndPan\".split(\" \");\n\n  createMap = function (items) {\n  \tvar map = {},\n  \t    i = items.length;\n  \twhile (i--) {\n  \t\tmap[items[i].toLowerCase()] = items[i];\n  \t}\n  \treturn map;\n  };\n\n  map = createMap(svgCamelCaseElements.concat(svgCamelCaseAttributes));\n\n  var enforceCase = function (elementName) {\n  \tvar lowerCaseElementName = elementName.toLowerCase();\n  \treturn map[lowerCaseElementName] || lowerCaseElementName;\n  };\n\n  var determineNameAndNamespace = function (attribute, name) {\n  \tvar colonIndex, namespacePrefix;\n\n  \t// are we dealing with a namespaced attribute, e.g. xlink:href?\n  \tcolonIndex = name.indexOf(\":\");\n  \tif (colonIndex !== -1) {\n\n  \t\t// looks like we are, yes...\n  \t\tnamespacePrefix = name.substr(0, colonIndex);\n\n  \t\t// ...unless it's a namespace *declaration*, which we ignore (on the assumption\n  \t\t// that only valid namespaces will be used)\n  \t\tif (namespacePrefix !== \"xmlns\") {\n  \t\t\tname = name.substring(colonIndex + 1);\n\n  \t\t\tattribute.name = enforceCase(name);\n  \t\t\tattribute.namespace = namespaces[namespacePrefix.toLowerCase()];\n  \t\t\tattribute.namespacePrefix = namespacePrefix;\n\n  \t\t\tif (!attribute.namespace) {\n  \t\t\t\tthrow \"Unknown namespace (\\\"\" + namespacePrefix + \"\\\")\";\n  \t\t\t}\n\n  \t\t\treturn;\n  \t\t}\n  \t}\n\n  \t// SVG attribute names are case sensitive\n  \tattribute.name = attribute.element.namespace !== namespaces.html ? enforceCase(name) : name;\n  };\n\n  var helpers_getInterpolator = getInterpolator;\n  function getInterpolator(attribute) {\n  \tvar items = attribute.fragment.items;\n\n  \tif (items.length !== 1) {\n  \t\treturn;\n  \t}\n\n  \tif (items[0].type === INTERPOLATOR) {\n  \t\treturn items[0];\n  \t}\n  }\n\n  var prototype_init = Attribute$init;\n  function Attribute$init(options) {\n  \tthis.type = ATTRIBUTE;\n  \tthis.element = options.element;\n  \tthis.root = options.root;\n\n  \tdetermineNameAndNamespace(this, options.name);\n  \tthis.isBoolean = booleanAttributes.test(this.name);\n\n  \t// if it's an empty attribute, or just a straight key-value pair, with no\n  \t// mustache shenanigans, set the attribute accordingly and go home\n  \tif (!options.value || typeof options.value === \"string\") {\n  \t\tthis.value = this.isBoolean ? true : options.value || \"\";\n  \t\treturn;\n  \t}\n\n  \t// otherwise we need to do some work\n\n  \t// share parentFragment with parent element\n  \tthis.parentFragment = this.element.parentFragment;\n\n  \tthis.fragment = new virtualdom_Fragment({\n  \t\ttemplate: options.value,\n  \t\troot: this.root,\n  \t\towner: this\n  \t});\n\n  \t// TODO can we use this.fragment.toString() in some cases? It's quicker\n  \tthis.value = this.fragment.getValue();\n\n  \t// Store a reference to this attribute's interpolator, if its fragment\n  \t// takes the form `{{foo}}`. This is necessary for two-way binding and\n  \t// for correctly rendering HTML later\n  \tthis.interpolator = helpers_getInterpolator(this);\n  \tthis.isBindable = !!this.interpolator && !this.interpolator.isStatic;\n\n  \t// mark as ready\n  \tthis.ready = true;\n  }\n\n  var Attribute_prototype_rebind = Attribute$rebind;\n\n  function Attribute$rebind(oldKeypath, newKeypath) {\n  \tif (this.fragment) {\n  \t\tthis.fragment.rebind(oldKeypath, newKeypath);\n  \t}\n  }\n\n  var Attribute_prototype_render = Attribute$render;\n  var propertyNames = {\n  \t\"accept-charset\": \"acceptCharset\",\n  \taccesskey: \"accessKey\",\n  \tbgcolor: \"bgColor\",\n  \t\"class\": \"className\",\n  \tcodebase: \"codeBase\",\n  \tcolspan: \"colSpan\",\n  \tcontenteditable: \"contentEditable\",\n  \tdatetime: \"dateTime\",\n  \tdirname: \"dirName\",\n  \t\"for\": \"htmlFor\",\n  \t\"http-equiv\": \"httpEquiv\",\n  \tismap: \"isMap\",\n  \tmaxlength: \"maxLength\",\n  \tnovalidate: \"noValidate\",\n  \tpubdate: \"pubDate\",\n  \treadonly: \"readOnly\",\n  \trowspan: \"rowSpan\",\n  \ttabindex: \"tabIndex\",\n  \tusemap: \"useMap\"\n  };\n  function Attribute$render(node) {\n  \tvar propertyName;\n\n  \tthis.node = node;\n\n  \t// should we use direct property access, or setAttribute?\n  \tif (!node.namespaceURI || node.namespaceURI === namespaces.html) {\n  \t\tpropertyName = propertyNames[this.name] || this.name;\n\n  \t\tif (node[propertyName] !== undefined) {\n  \t\t\tthis.propertyName = propertyName;\n  \t\t}\n\n  \t\t// is attribute a boolean attribute or 'value'? If so we're better off doing e.g.\n  \t\t// node.selected = true rather than node.setAttribute( 'selected', '' )\n  \t\tif (this.isBoolean || this.isTwoway) {\n  \t\t\tthis.useProperty = true;\n  \t\t}\n\n  \t\tif (propertyName === \"value\") {\n  \t\t\tnode._ractive.value = this.value;\n  \t\t}\n  \t}\n\n  \tthis.rendered = true;\n  \tthis.update();\n  }\n\n  var Attribute_prototype_toString = Attribute$toString;\n\n  function Attribute$toString() {\n  \tvar _ref = this;\n\n  \tvar name = _ref.name;\n  \tvar namespacePrefix = _ref.namespacePrefix;\n  \tvar value = _ref.value;\n  \tvar interpolator = _ref.interpolator;\n  \tvar fragment = _ref.fragment;\n\n  \t// Special case - select and textarea values (should not be stringified)\n  \tif (name === \"value\" && (this.element.name === \"select\" || this.element.name === \"textarea\")) {\n  \t\treturn;\n  \t}\n\n  \t// Special case - content editable\n  \tif (name === \"value\" && this.element.getAttribute(\"contenteditable\") !== undefined) {\n  \t\treturn;\n  \t}\n\n  \t// Special case - radio names\n  \tif (name === \"name\" && this.element.name === \"input\" && interpolator) {\n  \t\treturn \"name={{\" + (interpolator.keypath.str || interpolator.ref) + \"}}\";\n  \t}\n\n  \t// Boolean attributes\n  \tif (this.isBoolean) {\n  \t\treturn value ? name : \"\";\n  \t}\n\n  \tif (fragment) {\n  \t\t// special case - this catches undefined/null values (#1211)\n  \t\tif (fragment.items.length === 1 && fragment.items[0].value == null) {\n  \t\t\treturn \"\";\n  \t\t}\n\n  \t\tvalue = fragment.toString();\n  \t}\n\n  \tif (namespacePrefix) {\n  \t\tname = namespacePrefix + \":\" + name;\n  \t}\n\n  \treturn value ? name + \"=\\\"\" + Attribute_prototype_toString__escape(value) + \"\\\"\" : name;\n  }\n\n  function Attribute_prototype_toString__escape(value) {\n  \treturn value.replace(/&/g, \"&amp;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#39;\");\n  }\n\n  var Attribute_prototype_unbind = Attribute$unbind;\n\n  function Attribute$unbind() {\n  \t// ignore non-dynamic attributes\n  \tif (this.fragment) {\n  \t\tthis.fragment.unbind();\n  \t}\n\n  \tif (this.name === \"id\") {\n  \t\tdelete this.root.nodes[this.value];\n  \t}\n  }\n\n  var updateSelectValue = Attribute$updateSelect;\n\n  function Attribute$updateSelect() {\n  \tvar value = this.value,\n  \t    options,\n  \t    option,\n  \t    optionValue,\n  \t    i;\n\n  \tif (!this.locked) {\n  \t\tthis.node._ractive.value = value;\n\n  \t\toptions = this.node.options;\n  \t\ti = options.length;\n\n  \t\twhile (i--) {\n  \t\t\toption = options[i];\n  \t\t\toptionValue = option._ractive ? option._ractive.value : option.value; // options inserted via a triple don't have _ractive\n\n  \t\t\tif (optionValue == value) {\n  \t\t\t\t// double equals as we may be comparing numbers with strings\n  \t\t\t\toption.selected = true;\n  \t\t\t\tbreak;\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \t// if we're still here, it means the new value didn't match any of the options...\n  \t// TODO figure out what to do in this situation\n  }\n\n  var updateMultipleSelectValue = Attribute$updateMultipleSelect;\n  function Attribute$updateMultipleSelect() {\n  \tvar value = this.value,\n  \t    options,\n  \t    i,\n  \t    option,\n  \t    optionValue;\n\n  \tif (!isArray(value)) {\n  \t\tvalue = [value];\n  \t}\n\n  \toptions = this.node.options;\n  \ti = options.length;\n\n  \twhile (i--) {\n  \t\toption = options[i];\n  \t\toptionValue = option._ractive ? option._ractive.value : option.value; // options inserted via a triple don't have _ractive\n  \t\toption.selected = arrayContains(value, optionValue);\n  \t}\n  }\n\n  var updateRadioName = Attribute$updateRadioName;\n\n  function Attribute$updateRadioName() {\n  \tvar _ref = this;\n\n  \tvar node = _ref.node;\n  \tvar value = _ref.value;\n\n  \tnode.checked = value == node._ractive.value;\n  }\n\n  var updateRadioValue = Attribute$updateRadioValue;\n  function Attribute$updateRadioValue() {\n  \tvar wasChecked,\n  \t    node = this.node,\n  \t    binding,\n  \t    bindings,\n  \t    i;\n\n  \twasChecked = node.checked;\n\n  \tnode.value = this.element.getAttribute(\"value\");\n  \tnode.checked = this.element.getAttribute(\"value\") === this.element.getAttribute(\"name\");\n\n  \t// This is a special case - if the input was checked, and the value\n  \t// changed so that it's no longer checked, the twoway binding is\n  \t// most likely out of date. To fix it we have to jump through some\n  \t// hoops... this is a little kludgy but it works\n  \tif (wasChecked && !node.checked && this.element.binding) {\n  \t\tbindings = this.element.binding.siblings;\n\n  \t\tif (i = bindings.length) {\n  \t\t\twhile (i--) {\n  \t\t\t\tbinding = bindings[i];\n\n  \t\t\t\tif (!binding.element.node) {\n  \t\t\t\t\t// this is the initial render, siblings are still rendering!\n  \t\t\t\t\t// we'll come back later...\n  \t\t\t\t\treturn;\n  \t\t\t\t}\n\n  \t\t\t\tif (binding.element.node.checked) {\n  \t\t\t\t\tglobal_runloop.addRactive(binding.root);\n  \t\t\t\t\treturn binding.handleChange();\n  \t\t\t\t}\n  \t\t\t}\n\n  \t\t\tthis.root.viewmodel.set(binding.keypath, undefined);\n  \t\t}\n  \t}\n  }\n\n  var updateCheckboxName = Attribute$updateCheckboxName;\n  function Attribute$updateCheckboxName() {\n  \tvar _ref = this;\n\n  \tvar element = _ref.element;\n  \tvar node = _ref.node;\n  \tvar value = _ref.value;var binding = element.binding;var valueAttribute;var i;\n\n  \tvalueAttribute = element.getAttribute(\"value\");\n\n  \tif (!isArray(value)) {\n  \t\tbinding.isChecked = node.checked = value == valueAttribute;\n  \t} else {\n  \t\ti = value.length;\n  \t\twhile (i--) {\n  \t\t\tif (valueAttribute == value[i]) {\n  \t\t\t\tbinding.isChecked = node.checked = true;\n  \t\t\t\treturn;\n  \t\t\t}\n  \t\t}\n  \t\tbinding.isChecked = node.checked = false;\n  \t}\n  }\n\n  var updateClassName = Attribute$updateClassName;\n  function Attribute$updateClassName() {\n  \tthis.node.className = safeToStringValue(this.value);\n  }\n\n  var updateIdAttribute = Attribute$updateIdAttribute;\n\n  function Attribute$updateIdAttribute() {\n  \tvar _ref = this;\n\n  \tvar node = _ref.node;\n  \tvar value = _ref.value;\n\n  \tthis.root.nodes[value] = node;\n  \tnode.id = value;\n  }\n\n  var updateIEStyleAttribute = Attribute$updateIEStyleAttribute;\n\n  function Attribute$updateIEStyleAttribute() {\n  \tvar node, value;\n\n  \tnode = this.node;\n  \tvalue = this.value;\n\n  \tif (value === undefined) {\n  \t\tvalue = \"\";\n  \t}\n\n  \tnode.style.setAttribute(\"cssText\", value);\n  }\n\n  var updateContentEditableValue = Attribute$updateContentEditableValue;\n\n  function Attribute$updateContentEditableValue() {\n  \tvar value = this.value;\n\n  \tif (value === undefined) {\n  \t\tvalue = \"\";\n  \t}\n\n  \tif (!this.locked) {\n  \t\tthis.node.innerHTML = value;\n  \t}\n  }\n\n  var updateValue = Attribute$updateValue;\n\n  function Attribute$updateValue() {\n  \tvar _ref = this;\n\n  \tvar node = _ref.node;\n  \tvar value = _ref.value;\n\n  \t// store actual value, so it doesn't get coerced to a string\n  \tnode._ractive.value = value;\n\n  \t// with two-way binding, only update if the change wasn't initiated by the user\n  \t// otherwise the cursor will often be sent to the wrong place\n  \tif (!this.locked) {\n  \t\tnode.value = value == undefined ? \"\" : value;\n  \t}\n  }\n\n  var updateBoolean = Attribute$updateBooleanAttribute;\n\n  function Attribute$updateBooleanAttribute() {\n  \t// with two-way binding, only update if the change wasn't initiated by the user\n  \t// otherwise the cursor will often be sent to the wrong place\n  \tif (!this.locked) {\n  \t\tthis.node[this.propertyName] = this.value;\n  \t}\n  }\n\n  var updateEverythingElse = Attribute$updateEverythingElse;\n\n  function Attribute$updateEverythingElse() {\n  \tvar _ref = this;\n\n  \tvar node = _ref.node;\n  \tvar namespace = _ref.namespace;\n  \tvar name = _ref.name;\n  \tvar value = _ref.value;\n  \tvar fragment = _ref.fragment;\n\n  \tif (namespace) {\n  \t\tnode.setAttributeNS(namespace, name, (fragment || value).toString());\n  \t} else if (!this.isBoolean) {\n  \t\tif (value == null) {\n  \t\t\tnode.removeAttribute(name);\n  \t\t} else {\n  \t\t\tnode.setAttribute(name, (fragment || value).toString());\n  \t\t}\n  \t}\n\n  \t// Boolean attributes - truthy becomes '', falsy means 'remove attribute'\n  \telse {\n  \t\tif (value) {\n  \t\t\tnode.setAttribute(name, \"\");\n  \t\t} else {\n  \t\t\tnode.removeAttribute(name);\n  \t\t}\n  \t}\n  }\n\n  // There are a few special cases when it comes to updating attributes. For this reason,\n  // the prototype .update() method points to this method, which waits until the\n  // attribute has finished initialising, then replaces the prototype method with a more\n  // suitable one. That way, we save ourselves doing a bunch of tests on each call\n  var Attribute_prototype_update = Attribute$update;\n  function Attribute$update() {\n  \tvar _ref = this;\n\n  \tvar name = _ref.name;\n  \tvar element = _ref.element;\n  \tvar node = _ref.node;var type;var updateMethod;\n\n  \tif (name === \"id\") {\n  \t\tupdateMethod = updateIdAttribute;\n  \t} else if (name === \"value\") {\n  \t\t// special case - selects\n  \t\tif (element.name === \"select\" && name === \"value\") {\n  \t\t\tupdateMethod = element.getAttribute(\"multiple\") ? updateMultipleSelectValue : updateSelectValue;\n  \t\t} else if (element.name === \"textarea\") {\n  \t\t\tupdateMethod = updateValue;\n  \t\t}\n\n  \t\t// special case - contenteditable\n  \t\telse if (element.getAttribute(\"contenteditable\") != null) {\n  \t\t\tupdateMethod = updateContentEditableValue;\n  \t\t}\n\n  \t\t// special case - <input>\n  \t\telse if (element.name === \"input\") {\n  \t\t\ttype = element.getAttribute(\"type\");\n\n  \t\t\t// type='file' value='{{fileList}}'>\n  \t\t\tif (type === \"file\") {\n  \t\t\t\tupdateMethod = noop; // read-only\n  \t\t\t}\n\n  \t\t\t// type='radio' name='{{twoway}}'\n  \t\t\telse if (type === \"radio\" && element.binding && element.binding.name === \"name\") {\n  \t\t\t\tupdateMethod = updateRadioValue;\n  \t\t\t} else {\n  \t\t\t\tupdateMethod = updateValue;\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \t// special case - <input type='radio' name='{{twoway}}' value='foo'>\n  \telse if (this.isTwoway && name === \"name\") {\n  \t\tif (node.type === \"radio\") {\n  \t\t\tupdateMethod = updateRadioName;\n  \t\t} else if (node.type === \"checkbox\") {\n  \t\t\tupdateMethod = updateCheckboxName;\n  \t\t}\n  \t}\n\n  \t// special case - style attributes in Internet Exploder\n  \telse if (name === \"style\" && node.style.setAttribute) {\n  \t\tupdateMethod = updateIEStyleAttribute;\n  \t}\n\n  \t// special case - class names. IE fucks things up, again\n  \telse if (name === \"class\" && (!node.namespaceURI || node.namespaceURI === namespaces.html)) {\n  \t\tupdateMethod = updateClassName;\n  \t} else if (this.useProperty) {\n  \t\tupdateMethod = updateBoolean;\n  \t}\n\n  \tif (!updateMethod) {\n  \t\tupdateMethod = updateEverythingElse;\n  \t}\n\n  \tthis.update = updateMethod;\n  \tthis.update();\n  }\n\n  var Attribute = function (options) {\n  \tthis.init(options);\n  };\n\n  Attribute.prototype = {\n  \tbubble: Attribute_prototype_bubble,\n  \tinit: prototype_init,\n  \trebind: Attribute_prototype_rebind,\n  \trender: Attribute_prototype_render,\n  \ttoString: Attribute_prototype_toString,\n  \tunbind: Attribute_prototype_unbind,\n  \tupdate: Attribute_prototype_update\n  };\n\n  var _Attribute = Attribute;\n\n  var createAttributes = function (element, attributes) {\n  \tvar name,\n  \t    attribute,\n  \t    result = [];\n\n  \tfor (name in attributes) {\n  \t\t// skip binding attributes\n  \t\tif (name === \"twoway\" || name === \"lazy\") {\n  \t\t\tcontinue;\n  \t\t}\n\n  \t\tif (attributes.hasOwnProperty(name)) {\n  \t\t\tattribute = new _Attribute({\n  \t\t\t\telement: element,\n  \t\t\t\tname: name,\n  \t\t\t\tvalue: attributes[name],\n  \t\t\t\troot: element.root\n  \t\t\t});\n\n  \t\t\tresult[name] = attribute;\n\n  \t\t\tif (name !== \"value\") {\n  \t\t\t\tresult.push(attribute);\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \t// value attribute goes last. This is because it\n  \t// may get clamped on render otherwise, e.g. in\n  \t// `<input type='range' value='999' min='0' max='1000'>`\n  \t// since default max is 100\n  \tif (attribute = result.value) {\n  \t\tresult.push(attribute);\n  \t}\n\n  \treturn result;\n  };\n\n  var _ConditionalAttribute__div;\n\n  if (typeof document !== \"undefined\") {\n  \t_ConditionalAttribute__div = createElement(\"div\");\n  }\n\n  var ConditionalAttribute = function (element, template) {\n  \tthis.element = element;\n  \tthis.root = element.root;\n  \tthis.parentFragment = element.parentFragment;\n\n  \tthis.attributes = [];\n\n  \tthis.fragment = new virtualdom_Fragment({\n  \t\troot: element.root,\n  \t\towner: this,\n  \t\ttemplate: [template]\n  \t});\n  };\n\n  ConditionalAttribute.prototype = {\n  \tbubble: function () {\n  \t\tif (this.node) {\n  \t\t\tthis.update();\n  \t\t}\n\n  \t\tthis.element.bubble();\n  \t},\n\n  \trebind: function (oldKeypath, newKeypath) {\n  \t\tthis.fragment.rebind(oldKeypath, newKeypath);\n  \t},\n\n  \trender: function (node) {\n  \t\tthis.node = node;\n  \t\tthis.isSvg = node.namespaceURI === namespaces.svg;\n\n  \t\tthis.update();\n  \t},\n\n  \tunbind: function () {\n  \t\tthis.fragment.unbind();\n  \t},\n\n  \tupdate: function () {\n  \t\tvar _this = this;\n\n  \t\tvar str, attrs;\n\n  \t\tstr = this.fragment.toString();\n  \t\tattrs = parseAttributes(str, this.isSvg);\n\n  \t\t// any attributes that previously existed but no longer do\n  \t\t// must be removed\n  \t\tthis.attributes.filter(function (a) {\n  \t\t\treturn notIn(attrs, a);\n  \t\t}).forEach(function (a) {\n  \t\t\t_this.node.removeAttribute(a.name);\n  \t\t});\n\n  \t\tattrs.forEach(function (a) {\n  \t\t\t_this.node.setAttribute(a.name, a.value);\n  \t\t});\n\n  \t\tthis.attributes = attrs;\n  \t},\n\n  \ttoString: function () {\n  \t\treturn this.fragment.toString();\n  \t}\n  };\n\n  var _ConditionalAttribute = ConditionalAttribute;\n\n  function parseAttributes(str, isSvg) {\n  \tvar tag = isSvg ? \"svg\" : \"div\";\n  \t_ConditionalAttribute__div.innerHTML = \"<\" + tag + \" \" + str + \"></\" + tag + \">\";\n\n  \treturn toArray(_ConditionalAttribute__div.childNodes[0].attributes);\n  }\n\n  function notIn(haystack, needle) {\n  \tvar i = haystack.length;\n\n  \twhile (i--) {\n  \t\tif (haystack[i].name === needle.name) {\n  \t\t\treturn false;\n  \t\t}\n  \t}\n\n  \treturn true;\n  }\n\n  var createConditionalAttributes = function (element, attributes) {\n  \tif (!attributes) {\n  \t\treturn [];\n  \t}\n\n  \treturn attributes.map(function (a) {\n  \t\treturn new _ConditionalAttribute(element, a);\n  \t});\n  };\n\n  var Binding = function (element) {\n  \tvar interpolator, keypath, value, parentForm;\n\n  \tthis.element = element;\n  \tthis.root = element.root;\n  \tthis.attribute = element.attributes[this.name || \"value\"];\n\n  \tinterpolator = this.attribute.interpolator;\n  \tinterpolator.twowayBinding = this;\n\n  \tif (keypath = interpolator.keypath) {\n  \t\tif (keypath.str.slice(-1) === \"}\") {\n  \t\t\twarnOnceIfDebug(\"Two-way binding does not work with expressions (`%s` on <%s>)\", interpolator.resolver.uniqueString, element.name, { ractive: this.root });\n  \t\t\treturn false;\n  \t\t}\n\n  \t\tif (keypath.isSpecial) {\n  \t\t\twarnOnceIfDebug(\"Two-way binding does not work with %s\", interpolator.resolver.ref, { ractive: this.root });\n  \t\t\treturn false;\n  \t\t}\n  \t} else {\n  \t\t// A mustache may be *ambiguous*. Let's say we were given\n  \t\t// `value=\"{{bar}}\"`. If the context was `foo`, and `foo.bar`\n  \t\t// *wasn't* `undefined`, the keypath would be `foo.bar`.\n  \t\t// Then, any user input would result in `foo.bar` being updated.\n  \t\t//\n  \t\t// If, however, `foo.bar` *was* undefined, and so was `bar`, we would be\n  \t\t// left with an unresolved partial keypath - so we are forced to make an\n  \t\t// assumption. That assumption is that the input in question should\n  \t\t// be forced to resolve to `bar`, and any user input would affect `bar`\n  \t\t// and not `foo.bar`.\n  \t\t//\n  \t\t// Did that make any sense? No? Oh. Sorry. Well the moral of the story is\n  \t\t// be explicit when using two-way data-binding about what keypath you're\n  \t\t// updating. Using it in lists is probably a recipe for confusion...\n  \t\tvar ref = interpolator.template.r ? \"'\" + interpolator.template.r + \"' reference\" : \"expression\";\n  \t\twarnIfDebug(\"The %s being used for two-way binding is ambiguous, and may cause unexpected results. Consider initialising your data to eliminate the ambiguity\", ref, { ractive: this.root });\n  \t\tinterpolator.resolver.forceResolution();\n  \t\tkeypath = interpolator.keypath;\n  \t}\n\n  \tthis.attribute.isTwoway = true;\n  \tthis.keypath = keypath;\n\n  \t// initialise value, if it's undefined\n  \tvalue = this.root.viewmodel.get(keypath);\n\n  \tif (value === undefined && this.getInitialValue) {\n  \t\tvalue = this.getInitialValue();\n\n  \t\tif (value !== undefined) {\n  \t\t\tthis.root.viewmodel.set(keypath, value);\n  \t\t}\n  \t}\n\n  \tif (parentForm = findParentForm(element)) {\n  \t\tthis.resetValue = value;\n  \t\tparentForm.formBindings.push(this);\n  \t}\n  };\n\n  Binding.prototype = {\n  \thandleChange: function () {\n  \t\tvar _this = this;\n\n  \t\tglobal_runloop.start(this.root);\n  \t\tthis.attribute.locked = true;\n  \t\tthis.root.viewmodel.set(this.keypath, this.getValue());\n  \t\tglobal_runloop.scheduleTask(function () {\n  \t\t\treturn _this.attribute.locked = false;\n  \t\t});\n  \t\tglobal_runloop.end();\n  \t},\n\n  \trebound: function () {\n  \t\tvar bindings, oldKeypath, newKeypath;\n\n  \t\toldKeypath = this.keypath;\n  \t\tnewKeypath = this.attribute.interpolator.keypath;\n\n  \t\t// The attribute this binding is linked to has already done the work\n  \t\tif (oldKeypath === newKeypath) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tremoveFromArray(this.root._twowayBindings[oldKeypath.str], this);\n\n  \t\tthis.keypath = newKeypath;\n\n  \t\tbindings = this.root._twowayBindings[newKeypath.str] || (this.root._twowayBindings[newKeypath.str] = []);\n  \t\tbindings.push(this);\n  \t},\n\n  \tunbind: function () {}\n  };\n\n  Binding.extend = function (properties) {\n  \tvar Parent = this,\n  \t    SpecialisedBinding;\n\n  \tSpecialisedBinding = function (element) {\n  \t\tBinding.call(this, element);\n\n  \t\tif (this.init) {\n  \t\t\tthis.init();\n  \t\t}\n  \t};\n\n  \tSpecialisedBinding.prototype = create(Parent.prototype);\n  \tutils_object__extend(SpecialisedBinding.prototype, properties);\n\n  \tSpecialisedBinding.extend = Binding.extend;\n\n  \treturn SpecialisedBinding;\n  };\n\n  var Binding_Binding = Binding;\n\n  function findParentForm(element) {\n  \twhile (element = element.parent) {\n  \t\tif (element.name === \"form\") {\n  \t\t\treturn element;\n  \t\t}\n  \t}\n  }\n\n  // this is called when the element is unbound.\n  // Specialised bindings can override it\n\n  // This is the handler for DOM events that would lead to a change in the model\n  // (i.e. change, sometimes, input, and occasionally click and keyup)\n  var handleDomEvent = handleChange;\n\n  function handleChange() {\n  \tthis._ractive.binding.handleChange();\n  }\n\n  var GenericBinding;\n\n  GenericBinding = Binding_Binding.extend({\n  \tgetInitialValue: function () {\n  \t\treturn \"\";\n  \t},\n\n  \tgetValue: function () {\n  \t\treturn this.element.node.value;\n  \t},\n\n  \trender: function () {\n  \t\tvar node = this.element.node,\n  \t\t    lazy,\n  \t\t    timeout = false;\n  \t\tthis.rendered = true;\n\n  \t\t// any lazy setting for this element overrides the root\n  \t\t// if the value is a number, it's a timeout\n  \t\tlazy = this.root.lazy;\n  \t\tif (this.element.lazy === true) {\n  \t\t\tlazy = true;\n  \t\t} else if (this.element.lazy === false) {\n  \t\t\tlazy = false;\n  \t\t} else if (is__isNumeric(this.element.lazy)) {\n  \t\t\tlazy = false;\n  \t\t\ttimeout = +this.element.lazy;\n  \t\t} else if (is__isNumeric(lazy || \"\")) {\n  \t\t\ttimeout = +lazy;\n  \t\t\tlazy = false;\n\n  \t\t\t// make sure the timeout is available to the handler\n  \t\t\tthis.element.lazy = timeout;\n  \t\t}\n\n  \t\tthis.handler = timeout ? handleDelay : handleDomEvent;\n\n  \t\tnode.addEventListener(\"change\", handleDomEvent, false);\n\n  \t\tif (!lazy) {\n  \t\t\tnode.addEventListener(\"input\", this.handler, false);\n\n  \t\t\tif (node.attachEvent) {\n  \t\t\t\tnode.addEventListener(\"keyup\", this.handler, false);\n  \t\t\t}\n  \t\t}\n\n  \t\tnode.addEventListener(\"blur\", handleBlur, false);\n  \t},\n\n  \tunrender: function () {\n  \t\tvar node = this.element.node;\n  \t\tthis.rendered = false;\n\n  \t\tnode.removeEventListener(\"change\", handleDomEvent, false);\n  \t\tnode.removeEventListener(\"input\", this.handler, false);\n  \t\tnode.removeEventListener(\"keyup\", this.handler, false);\n  \t\tnode.removeEventListener(\"blur\", handleBlur, false);\n  \t}\n  });\n\n  var Binding_GenericBinding = GenericBinding;\n\n  function handleBlur() {\n  \tvar value;\n\n  \thandleDomEvent.call(this);\n\n  \tvalue = this._ractive.root.viewmodel.get(this._ractive.binding.keypath);\n  \tthis.value = value == undefined ? \"\" : value;\n  }\n\n  function handleDelay() {\n  \tvar binding = this._ractive.binding,\n  \t    el = this;\n\n  \tif (!!binding._timeout) clearTimeout(binding._timeout);\n\n  \tbinding._timeout = setTimeout(function () {\n  \t\tif (binding.rendered) handleDomEvent.call(el);\n  \t\tbinding._timeout = undefined;\n  \t}, binding.element.lazy);\n  }\n\n  var ContentEditableBinding = Binding_GenericBinding.extend({\n  \tgetInitialValue: function () {\n  \t\treturn this.element.fragment ? this.element.fragment.toString() : \"\";\n  \t},\n\n  \tgetValue: function () {\n  \t\treturn this.element.node.innerHTML;\n  \t}\n  });\n\n  var Binding_ContentEditableBinding = ContentEditableBinding;\n\n  var shared_getSiblings = getSiblings;\n  var sets = {};\n  function getSiblings(id, group, keypath) {\n  \tvar hash = id + group + keypath;\n  \treturn sets[hash] || (sets[hash] = []);\n  }\n\n  var RadioBinding = Binding_Binding.extend({\n  \tname: \"checked\",\n\n  \tinit: function () {\n  \t\tthis.siblings = shared_getSiblings(this.root._guid, \"radio\", this.element.getAttribute(\"name\"));\n  \t\tthis.siblings.push(this);\n  \t},\n\n  \trender: function () {\n  \t\tvar node = this.element.node;\n\n  \t\tnode.addEventListener(\"change\", handleDomEvent, false);\n\n  \t\tif (node.attachEvent) {\n  \t\t\tnode.addEventListener(\"click\", handleDomEvent, false);\n  \t\t}\n  \t},\n\n  \tunrender: function () {\n  \t\tvar node = this.element.node;\n\n  \t\tnode.removeEventListener(\"change\", handleDomEvent, false);\n  \t\tnode.removeEventListener(\"click\", handleDomEvent, false);\n  \t},\n\n  \thandleChange: function () {\n  \t\tglobal_runloop.start(this.root);\n\n  \t\tthis.siblings.forEach(function (binding) {\n  \t\t\tbinding.root.viewmodel.set(binding.keypath, binding.getValue());\n  \t\t});\n\n  \t\tglobal_runloop.end();\n  \t},\n\n  \tgetValue: function () {\n  \t\treturn this.element.node.checked;\n  \t},\n\n  \tunbind: function () {\n  \t\tremoveFromArray(this.siblings, this);\n  \t}\n  });\n\n  var Binding_RadioBinding = RadioBinding;\n\n  var RadioNameBinding = Binding_Binding.extend({\n  \tname: \"name\",\n\n  \tinit: function () {\n  \t\tthis.siblings = shared_getSiblings(this.root._guid, \"radioname\", this.keypath.str);\n  \t\tthis.siblings.push(this);\n\n  \t\tthis.radioName = true; // so that ractive.updateModel() knows what to do with this\n  \t},\n\n  \tgetInitialValue: function () {\n  \t\tif (this.element.getAttribute(\"checked\")) {\n  \t\t\treturn this.element.getAttribute(\"value\");\n  \t\t}\n  \t},\n\n  \trender: function () {\n  \t\tvar node = this.element.node;\n\n  \t\tnode.name = \"{{\" + this.keypath.str + \"}}\";\n  \t\tnode.checked = this.root.viewmodel.get(this.keypath) == this.element.getAttribute(\"value\");\n\n  \t\tnode.addEventListener(\"change\", handleDomEvent, false);\n\n  \t\tif (node.attachEvent) {\n  \t\t\tnode.addEventListener(\"click\", handleDomEvent, false);\n  \t\t}\n  \t},\n\n  \tunrender: function () {\n  \t\tvar node = this.element.node;\n\n  \t\tnode.removeEventListener(\"change\", handleDomEvent, false);\n  \t\tnode.removeEventListener(\"click\", handleDomEvent, false);\n  \t},\n\n  \tgetValue: function () {\n  \t\tvar node = this.element.node;\n  \t\treturn node._ractive ? node._ractive.value : node.value;\n  \t},\n\n  \thandleChange: function () {\n  \t\t// If this <input> is the one that's checked, then the value of its\n  \t\t// `name` keypath gets set to its value\n  \t\tif (this.element.node.checked) {\n  \t\t\tBinding_Binding.prototype.handleChange.call(this);\n  \t\t}\n  \t},\n\n  \trebound: function (oldKeypath, newKeypath) {\n  \t\tvar node;\n\n  \t\tBinding_Binding.prototype.rebound.call(this, oldKeypath, newKeypath);\n\n  \t\tif (node = this.element.node) {\n  \t\t\tnode.name = \"{{\" + this.keypath.str + \"}}\";\n  \t\t}\n  \t},\n\n  \tunbind: function () {\n  \t\tremoveFromArray(this.siblings, this);\n  \t}\n  });\n\n  var Binding_RadioNameBinding = RadioNameBinding;\n\n  var CheckboxNameBinding = Binding_Binding.extend({\n  \tname: \"name\",\n\n  \tgetInitialValue: function () {\n  \t\t// This only gets called once per group (of inputs that\n  \t\t// share a name), because it only gets called if there\n  \t\t// isn't an initial value. By the same token, we can make\n  \t\t// a note of that fact that there was no initial value,\n  \t\t// and populate it using any `checked` attributes that\n  \t\t// exist (which users should avoid, but which we should\n  \t\t// support anyway to avoid breaking expectations)\n  \t\tthis.noInitialValue = true;\n  \t\treturn [];\n  \t},\n\n  \tinit: function () {\n  \t\tvar existingValue, bindingValue;\n\n  \t\tthis.checkboxName = true; // so that ractive.updateModel() knows what to do with this\n\n  \t\t// Each input has a reference to an array containing it and its\n  \t\t// siblings, as two-way binding depends on being able to ascertain\n  \t\t// the status of all inputs within the group\n  \t\tthis.siblings = shared_getSiblings(this.root._guid, \"checkboxes\", this.keypath.str);\n  \t\tthis.siblings.push(this);\n\n  \t\tif (this.noInitialValue) {\n  \t\t\tthis.siblings.noInitialValue = true;\n  \t\t}\n\n  \t\t// If no initial value was set, and this input is checked, we\n  \t\t// update the model\n  \t\tif (this.siblings.noInitialValue && this.element.getAttribute(\"checked\")) {\n  \t\t\texistingValue = this.root.viewmodel.get(this.keypath);\n  \t\t\tbindingValue = this.element.getAttribute(\"value\");\n\n  \t\t\texistingValue.push(bindingValue);\n  \t\t}\n  \t},\n\n  \tunbind: function () {\n  \t\tremoveFromArray(this.siblings, this);\n  \t},\n\n  \trender: function () {\n  \t\tvar node = this.element.node,\n  \t\t    existingValue,\n  \t\t    bindingValue;\n\n  \t\texistingValue = this.root.viewmodel.get(this.keypath);\n  \t\tbindingValue = this.element.getAttribute(\"value\");\n\n  \t\tif (isArray(existingValue)) {\n  \t\t\tthis.isChecked = arrayContains(existingValue, bindingValue);\n  \t\t} else {\n  \t\t\tthis.isChecked = existingValue == bindingValue;\n  \t\t}\n\n  \t\tnode.name = \"{{\" + this.keypath.str + \"}}\";\n  \t\tnode.checked = this.isChecked;\n\n  \t\tnode.addEventListener(\"change\", handleDomEvent, false);\n\n  \t\t// in case of IE emergency, bind to click event as well\n  \t\tif (node.attachEvent) {\n  \t\t\tnode.addEventListener(\"click\", handleDomEvent, false);\n  \t\t}\n  \t},\n\n  \tunrender: function () {\n  \t\tvar node = this.element.node;\n\n  \t\tnode.removeEventListener(\"change\", handleDomEvent, false);\n  \t\tnode.removeEventListener(\"click\", handleDomEvent, false);\n  \t},\n\n  \tchanged: function () {\n  \t\tvar wasChecked = !!this.isChecked;\n  \t\tthis.isChecked = this.element.node.checked;\n  \t\treturn this.isChecked === wasChecked;\n  \t},\n\n  \thandleChange: function () {\n  \t\tthis.isChecked = this.element.node.checked;\n  \t\tBinding_Binding.prototype.handleChange.call(this);\n  \t},\n\n  \tgetValue: function () {\n  \t\treturn this.siblings.filter(isChecked).map(Binding_CheckboxNameBinding__getValue);\n  \t}\n  });\n\n  function isChecked(binding) {\n  \treturn binding.isChecked;\n  }\n\n  function Binding_CheckboxNameBinding__getValue(binding) {\n  \treturn binding.element.getAttribute(\"value\");\n  }\n\n  var Binding_CheckboxNameBinding = CheckboxNameBinding;\n\n  var CheckboxBinding = Binding_Binding.extend({\n  \tname: \"checked\",\n\n  \trender: function () {\n  \t\tvar node = this.element.node;\n\n  \t\tnode.addEventListener(\"change\", handleDomEvent, false);\n\n  \t\tif (node.attachEvent) {\n  \t\t\tnode.addEventListener(\"click\", handleDomEvent, false);\n  \t\t}\n  \t},\n\n  \tunrender: function () {\n  \t\tvar node = this.element.node;\n\n  \t\tnode.removeEventListener(\"change\", handleDomEvent, false);\n  \t\tnode.removeEventListener(\"click\", handleDomEvent, false);\n  \t},\n\n  \tgetValue: function () {\n  \t\treturn this.element.node.checked;\n  \t}\n  });\n\n  var Binding_CheckboxBinding = CheckboxBinding;\n\n  var SelectBinding = Binding_Binding.extend({\n  \tgetInitialValue: function () {\n  \t\tvar options = this.element.options,\n  \t\t    len,\n  \t\t    i,\n  \t\t    value,\n  \t\t    optionWasSelected;\n\n  \t\tif (this.element.getAttribute(\"value\") !== undefined) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\ti = len = options.length;\n\n  \t\tif (!len) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\t// take the final selected option...\n  \t\twhile (i--) {\n  \t\t\tif (options[i].getAttribute(\"selected\")) {\n  \t\t\t\tvalue = options[i].getAttribute(\"value\");\n  \t\t\t\toptionWasSelected = true;\n  \t\t\t\tbreak;\n  \t\t\t}\n  \t\t}\n\n  \t\t// or the first non-disabled option, if none are selected\n  \t\tif (!optionWasSelected) {\n  \t\t\twhile (++i < len) {\n  \t\t\t\tif (!options[i].getAttribute(\"disabled\")) {\n  \t\t\t\t\tvalue = options[i].getAttribute(\"value\");\n  \t\t\t\t\tbreak;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n\n  \t\t// This is an optimisation (aka hack) that allows us to forgo some\n  \t\t// other more expensive work\n  \t\tif (value !== undefined) {\n  \t\t\tthis.element.attributes.value.value = value;\n  \t\t}\n\n  \t\treturn value;\n  \t},\n\n  \trender: function () {\n  \t\tthis.element.node.addEventListener(\"change\", handleDomEvent, false);\n  \t},\n\n  \tunrender: function () {\n  \t\tthis.element.node.removeEventListener(\"change\", handleDomEvent, false);\n  \t},\n\n  \t// TODO this method is an anomaly... is it necessary?\n  \tsetValue: function (value) {\n  \t\tthis.root.viewmodel.set(this.keypath, value);\n  \t},\n\n  \tgetValue: function () {\n  \t\tvar options, i, len, option, optionValue;\n\n  \t\toptions = this.element.node.options;\n  \t\tlen = options.length;\n\n  \t\tfor (i = 0; i < len; i += 1) {\n  \t\t\toption = options[i];\n\n  \t\t\tif (options[i].selected) {\n  \t\t\t\toptionValue = option._ractive ? option._ractive.value : option.value;\n  \t\t\t\treturn optionValue;\n  \t\t\t}\n  \t\t}\n  \t},\n\n  \tforceUpdate: function () {\n  \t\tvar _this = this;\n\n  \t\tvar value = this.getValue();\n\n  \t\tif (value !== undefined) {\n  \t\t\tthis.attribute.locked = true;\n  \t\t\tglobal_runloop.scheduleTask(function () {\n  \t\t\t\treturn _this.attribute.locked = false;\n  \t\t\t});\n  \t\t\tthis.root.viewmodel.set(this.keypath, value);\n  \t\t}\n  \t}\n  });\n\n  var Binding_SelectBinding = SelectBinding;\n\n  var MultipleSelectBinding = Binding_SelectBinding.extend({\n  \tgetInitialValue: function () {\n  \t\treturn this.element.options.filter(function (option) {\n  \t\t\treturn option.getAttribute(\"selected\");\n  \t\t}).map(function (option) {\n  \t\t\treturn option.getAttribute(\"value\");\n  \t\t});\n  \t},\n\n  \trender: function () {\n  \t\tvar valueFromModel;\n\n  \t\tthis.element.node.addEventListener(\"change\", handleDomEvent, false);\n\n  \t\tvalueFromModel = this.root.viewmodel.get(this.keypath);\n\n  \t\tif (valueFromModel === undefined) {\n  \t\t\t// get value from DOM, if possible\n  \t\t\tthis.handleChange();\n  \t\t}\n  \t},\n\n  \tunrender: function () {\n  \t\tthis.element.node.removeEventListener(\"change\", handleDomEvent, false);\n  \t},\n\n  \tsetValue: function () {\n  \t\tthrow new Error(\"TODO not implemented yet\");\n  \t},\n\n  \tgetValue: function () {\n  \t\tvar selectedValues, options, i, len, option, optionValue;\n\n  \t\tselectedValues = [];\n  \t\toptions = this.element.node.options;\n  \t\tlen = options.length;\n\n  \t\tfor (i = 0; i < len; i += 1) {\n  \t\t\toption = options[i];\n\n  \t\t\tif (option.selected) {\n  \t\t\t\toptionValue = option._ractive ? option._ractive.value : option.value;\n  \t\t\t\tselectedValues.push(optionValue);\n  \t\t\t}\n  \t\t}\n\n  \t\treturn selectedValues;\n  \t},\n\n  \thandleChange: function () {\n  \t\tvar attribute, previousValue, value;\n\n  \t\tattribute = this.attribute;\n  \t\tpreviousValue = attribute.value;\n\n  \t\tvalue = this.getValue();\n\n  \t\tif (previousValue === undefined || !arrayContentsMatch(value, previousValue)) {\n  \t\t\tBinding_SelectBinding.prototype.handleChange.call(this);\n  \t\t}\n\n  \t\treturn this;\n  \t},\n\n  \tforceUpdate: function () {\n  \t\tvar _this = this;\n\n  \t\tvar value = this.getValue();\n\n  \t\tif (value !== undefined) {\n  \t\t\tthis.attribute.locked = true;\n  \t\t\tglobal_runloop.scheduleTask(function () {\n  \t\t\t\treturn _this.attribute.locked = false;\n  \t\t\t});\n  \t\t\tthis.root.viewmodel.set(this.keypath, value);\n  \t\t}\n  \t},\n\n  \tupdateModel: function () {\n  \t\tif (this.attribute.value === undefined || !this.attribute.value.length) {\n  \t\t\tthis.root.viewmodel.set(this.keypath, this.initialValue);\n  \t\t}\n  \t}\n  });\n\n  var Binding_MultipleSelectBinding = MultipleSelectBinding;\n\n  var FileListBinding = Binding_Binding.extend({\n  \trender: function () {\n  \t\tthis.element.node.addEventListener(\"change\", handleDomEvent, false);\n  \t},\n\n  \tunrender: function () {\n  \t\tthis.element.node.removeEventListener(\"change\", handleDomEvent, false);\n  \t},\n\n  \tgetValue: function () {\n  \t\treturn this.element.node.files;\n  \t}\n  });\n\n  var Binding_FileListBinding = FileListBinding;\n\n  var NumericBinding = Binding_GenericBinding.extend({\n  \tgetInitialValue: function () {\n  \t\treturn undefined;\n  \t},\n\n  \tgetValue: function () {\n  \t\tvar value = parseFloat(this.element.node.value);\n  \t\treturn isNaN(value) ? undefined : value;\n  \t}\n  });\n\n  var init_createTwowayBinding = createTwowayBinding;\n\n  function createTwowayBinding(element) {\n  \tvar attributes = element.attributes,\n  \t    type,\n  \t    Binding,\n  \t    bindName,\n  \t    bindChecked,\n  \t    binding;\n\n  \t// if this is a late binding, and there's already one, it\n  \t// needs to be torn down\n  \tif (element.binding) {\n  \t\telement.binding.teardown();\n  \t\telement.binding = null;\n  \t}\n\n  \t// contenteditable\n  \tif (\n  \t// if the contenteditable attribute is true or is bindable and may thus become true\n  \t(element.getAttribute(\"contenteditable\") || !!attributes.contenteditable && isBindable(attributes.contenteditable)) && isBindable(attributes.value)) {\n  \t\tBinding = Binding_ContentEditableBinding;\n  \t}\n\n  \t// <input>\n  \telse if (element.name === \"input\") {\n  \t\ttype = element.getAttribute(\"type\");\n\n  \t\tif (type === \"radio\" || type === \"checkbox\") {\n  \t\t\tbindName = isBindable(attributes.name);\n  \t\t\tbindChecked = isBindable(attributes.checked);\n\n  \t\t\t// we can either bind the name attribute, or the checked attribute - not both\n  \t\t\tif (bindName && bindChecked) {\n  \t\t\t\twarnIfDebug(\"A radio input can have two-way binding on its name attribute, or its checked attribute - not both\", { ractive: element.root });\n  \t\t\t}\n\n  \t\t\tif (bindName) {\n  \t\t\t\tBinding = type === \"radio\" ? Binding_RadioNameBinding : Binding_CheckboxNameBinding;\n  \t\t\t} else if (bindChecked) {\n  \t\t\t\tBinding = type === \"radio\" ? Binding_RadioBinding : Binding_CheckboxBinding;\n  \t\t\t}\n  \t\t} else if (type === \"file\" && isBindable(attributes.value)) {\n  \t\t\tBinding = Binding_FileListBinding;\n  \t\t} else if (isBindable(attributes.value)) {\n  \t\t\tBinding = type === \"number\" || type === \"range\" ? NumericBinding : Binding_GenericBinding;\n  \t\t}\n  \t}\n\n  \t// <select>\n  \telse if (element.name === \"select\" && isBindable(attributes.value)) {\n  \t\tBinding = element.getAttribute(\"multiple\") ? Binding_MultipleSelectBinding : Binding_SelectBinding;\n  \t}\n\n  \t// <textarea>\n  \telse if (element.name === \"textarea\" && isBindable(attributes.value)) {\n  \t\tBinding = Binding_GenericBinding;\n  \t}\n\n  \tif (Binding && (binding = new Binding(element)) && binding.keypath) {\n  \t\treturn binding;\n  \t}\n  }\n\n  function isBindable(attribute) {\n  \treturn attribute && attribute.isBindable;\n  }\n\n  // and this element also has a value attribute to bind\n\n  var EventHandler_prototype_bubble = EventHandler$bubble;\n\n  function EventHandler$bubble() {\n  \tvar hasAction = this.getAction();\n\n  \tif (hasAction && !this.hasListener) {\n  \t\tthis.listen();\n  \t} else if (!hasAction && this.hasListener) {\n  \t\tthis.unrender();\n  \t}\n  }\n\n  // This function may be overwritten, if the event directive\n  // includes parameters\n  var EventHandler_prototype_fire = EventHandler$fire;\n  function EventHandler$fire(event) {\n  \tshared_fireEvent(this.root, this.getAction(), { event: event });\n  }\n\n  var getAction = EventHandler$getAction;\n\n  function EventHandler$getAction() {\n  \treturn this.action.toString().trim();\n  }\n\n  var EventHandler_prototype_init = EventHandler$init;\n\n  var eventPattern = /^event(?:\\.(.+))?/;\n  function EventHandler$init(element, name, template) {\n  \tvar _this = this;\n\n  \tvar action, refs, ractive;\n\n  \tthis.element = element;\n  \tthis.root = element.root;\n  \tthis.parentFragment = element.parentFragment;\n  \tthis.name = name;\n\n  \tif (name.indexOf(\"*\") !== -1) {\n  \t\tfatal(\"Only component proxy-events may contain \\\"*\\\" wildcards, <%s on-%s=\\\"...\\\"/> is not valid\", element.name, name);\n  \t\tthis.invalid = true;\n  \t}\n\n  \tif (template.m) {\n  \t\trefs = template.a.r;\n\n  \t\t// This is a method call\n  \t\tthis.method = template.m;\n  \t\tthis.keypaths = [];\n  \t\tthis.fn = shared_getFunctionFromString(template.a.s, refs.length);\n\n  \t\tthis.parentFragment = element.parentFragment;\n  \t\tractive = this.root;\n\n  \t\t// Create resolvers for each reference\n  \t\tthis.refResolvers = [];\n  \t\trefs.forEach(function (ref, i) {\n  \t\t\tvar match = undefined;\n\n  \t\t\t// special case - the `event` object\n  \t\t\tif (match = eventPattern.exec(ref)) {\n  \t\t\t\t_this.keypaths[i] = {\n  \t\t\t\t\teventObject: true,\n  \t\t\t\t\trefinements: match[1] ? match[1].split(\".\") : []\n  \t\t\t\t};\n  \t\t\t} else {\n  \t\t\t\t_this.refResolvers.push(Resolvers_createReferenceResolver(_this, ref, function (keypath) {\n  \t\t\t\t\treturn _this.resolve(i, keypath);\n  \t\t\t\t}));\n  \t\t\t}\n  \t\t});\n\n  \t\tthis.fire = fireMethodCall;\n  \t} else {\n  \t\t// Get action ('foo' in 'on-click='foo')\n  \t\taction = template.n || template;\n  \t\tif (typeof action !== \"string\") {\n  \t\t\taction = new virtualdom_Fragment({\n  \t\t\t\ttemplate: action,\n  \t\t\t\troot: this.root,\n  \t\t\t\towner: this\n  \t\t\t});\n  \t\t}\n\n  \t\tthis.action = action;\n\n  \t\t// Get parameters\n  \t\tif (template.d) {\n  \t\t\tthis.dynamicParams = new virtualdom_Fragment({\n  \t\t\t\ttemplate: template.d,\n  \t\t\t\troot: this.root,\n  \t\t\t\towner: this.element\n  \t\t\t});\n\n  \t\t\tthis.fire = fireEventWithDynamicParams;\n  \t\t} else if (template.a) {\n  \t\t\tthis.params = template.a;\n  \t\t\tthis.fire = fireEventWithParams;\n  \t\t}\n  \t}\n  }\n\n  function fireMethodCall(event) {\n  \tvar ractive, values, args;\n\n  \tractive = this.root;\n\n  \tif (typeof ractive[this.method] !== \"function\") {\n  \t\tthrow new Error(\"Attempted to call a non-existent method (\\\"\" + this.method + \"\\\")\");\n  \t}\n\n  \tvalues = this.keypaths.map(function (keypath) {\n  \t\tvar value, len, i;\n\n  \t\tif (keypath === undefined) {\n  \t\t\t// not yet resolved\n  \t\t\treturn undefined;\n  \t\t}\n\n  \t\t// TODO the refinements stuff would be better handled at parse time\n  \t\tif (keypath.eventObject) {\n  \t\t\tvalue = event;\n\n  \t\t\tif (len = keypath.refinements.length) {\n  \t\t\t\tfor (i = 0; i < len; i += 1) {\n  \t\t\t\t\tvalue = value[keypath.refinements[i]];\n  \t\t\t\t}\n  \t\t\t}\n  \t\t} else {\n  \t\t\tvalue = ractive.viewmodel.get(keypath);\n  \t\t}\n\n  \t\treturn value;\n  \t});\n\n  \tshared_eventStack.enqueue(ractive, event);\n\n  \targs = this.fn.apply(null, values);\n  \tractive[this.method].apply(ractive, args);\n\n  \tshared_eventStack.dequeue(ractive);\n  }\n\n  function fireEventWithParams(event) {\n  \tshared_fireEvent(this.root, this.getAction(), { event: event, args: this.params });\n  }\n\n  function fireEventWithDynamicParams(event) {\n  \tvar args = this.dynamicParams.getArgsList();\n\n  \t// need to strip [] from ends if a string!\n  \tif (typeof args === \"string\") {\n  \t\targs = args.substr(1, args.length - 2);\n  \t}\n\n  \tshared_fireEvent(this.root, this.getAction(), { event: event, args: args });\n  }\n\n  var shared_genericHandler = genericHandler;\n  function genericHandler(event) {\n  \tvar storage,\n  \t    handler,\n  \t    indices,\n  \t    index = {};\n\n  \tstorage = this._ractive;\n  \thandler = storage.events[event.type];\n\n  \tif (indices = Resolvers_findIndexRefs(handler.element.parentFragment)) {\n  \t\tindex = Resolvers_findIndexRefs.resolve(indices);\n  \t}\n\n  \thandler.fire({\n  \t\tnode: this,\n  \t\toriginal: event,\n  \t\tindex: index,\n  \t\tkeypath: storage.keypath.str,\n  \t\tcontext: storage.root.viewmodel.get(storage.keypath)\n  \t});\n  }\n\n  var listen = EventHandler$listen;\n\n  var customHandlers = {},\n      touchEvents = {\n  \ttouchstart: true,\n  \ttouchmove: true,\n  \ttouchend: true,\n  \ttouchcancel: true,\n  \t//not w3c, but supported in some browsers\n  \ttouchleave: true\n  };\n  function EventHandler$listen() {\n  \tvar definition,\n  \t    name = this.name;\n\n  \tif (this.invalid) {\n  \t\treturn;\n  \t}\n\n  \tif (definition = findInViewHierarchy(\"events\", this.root, name)) {\n  \t\tthis.custom = definition(this.node, getCustomHandler(name));\n  \t} else {\n  \t\t// Looks like we're dealing with a standard DOM event... but let's check\n  \t\tif (!(\"on\" + name in this.node) && !(window && \"on\" + name in window) && !isJsdom) {\n\n  \t\t\t// okay to use touch events if this browser doesn't support them\n  \t\t\tif (!touchEvents[name]) {\n  \t\t\t\twarnOnceIfDebug(missingPlugin(name, \"event\"), { node: this.node });\n  \t\t\t}\n\n  \t\t\treturn;\n  \t\t}\n\n  \t\tthis.node.addEventListener(name, shared_genericHandler, false);\n  \t}\n\n  \tthis.hasListener = true;\n  }\n\n  function getCustomHandler(name) {\n  \tif (!customHandlers[name]) {\n  \t\tcustomHandlers[name] = function (event) {\n  \t\t\tvar storage = event.node._ractive;\n\n  \t\t\tevent.index = storage.index;\n  \t\t\tevent.keypath = storage.keypath.str;\n  \t\t\tevent.context = storage.root.viewmodel.get(storage.keypath);\n\n  \t\t\tstorage.events[name].fire(event);\n  \t\t};\n  \t}\n\n  \treturn customHandlers[name];\n  }\n\n  var EventHandler_prototype_rebind = EventHandler$rebind;\n\n  function EventHandler$rebind(oldKeypath, newKeypath) {\n  \tvar fragment;\n  \tif (this.method) {\n  \t\tfragment = this.element.parentFragment;\n  \t\tthis.refResolvers.forEach(rebind);\n\n  \t\treturn;\n  \t}\n\n  \tif (typeof this.action !== \"string\") {\n  \t\trebind(this.action);\n  \t}\n\n  \tif (this.dynamicParams) {\n  \t\trebind(this.dynamicParams);\n  \t}\n\n  \tfunction rebind(thing) {\n  \t\tthing && thing.rebind(oldKeypath, newKeypath);\n  \t}\n  }\n\n  var EventHandler_prototype_render = EventHandler$render;\n\n  function EventHandler$render() {\n  \tthis.node = this.element.node;\n  \t// store this on the node itself, so it can be retrieved by a\n  \t// universal handler\n  \tthis.node._ractive.events[this.name] = this;\n\n  \tif (this.method || this.getAction()) {\n  \t\tthis.listen();\n  \t}\n  }\n\n  var prototype_resolve = EventHandler$resolve;\n\n  function EventHandler$resolve(index, keypath) {\n  \tthis.keypaths[index] = keypath;\n  }\n\n  var EventHandler_prototype_unbind = EventHandler$unbind;\n  function EventHandler$unbind() {\n  \tif (this.method) {\n  \t\tthis.refResolvers.forEach(methodCallers__unbind);\n  \t\treturn;\n  \t}\n\n  \t// Tear down dynamic name\n  \tif (typeof this.action !== \"string\") {\n  \t\tthis.action.unbind();\n  \t}\n\n  \t// Tear down dynamic parameters\n  \tif (this.dynamicParams) {\n  \t\tthis.dynamicParams.unbind();\n  \t}\n  }\n\n  var EventHandler_prototype_unrender = EventHandler$unrender;\n  function EventHandler$unrender() {\n\n  \tif (this.custom) {\n  \t\tthis.custom.teardown();\n  \t} else {\n  \t\tthis.node.removeEventListener(this.name, shared_genericHandler, false);\n  \t}\n\n  \tthis.hasListener = false;\n  }\n\n  var EventHandler = function (element, name, template) {\n  \tthis.init(element, name, template);\n  };\n\n  EventHandler.prototype = {\n  \tbubble: EventHandler_prototype_bubble,\n  \tfire: EventHandler_prototype_fire,\n  \tgetAction: getAction,\n  \tinit: EventHandler_prototype_init,\n  \tlisten: listen,\n  \trebind: EventHandler_prototype_rebind,\n  \trender: EventHandler_prototype_render,\n  \tresolve: prototype_resolve,\n  \tunbind: EventHandler_prototype_unbind,\n  \tunrender: EventHandler_prototype_unrender\n  };\n\n  var _EventHandler = EventHandler;\n\n  var createEventHandlers = function (element, template) {\n  \tvar i,\n  \t    name,\n  \t    names,\n  \t    handler,\n  \t    result = [];\n\n  \tfor (name in template) {\n  \t\tif (template.hasOwnProperty(name)) {\n  \t\t\tnames = name.split(\"-\");\n  \t\t\ti = names.length;\n\n  \t\t\twhile (i--) {\n  \t\t\t\thandler = new _EventHandler(element, names[i], template[name]);\n  \t\t\t\tresult.push(handler);\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \treturn result;\n  };\n\n  var Decorator = function (element, template) {\n  \tvar self = this,\n  \t    ractive,\n  \t    name,\n  \t    fragment;\n\n  \tthis.element = element;\n  \tthis.root = ractive = element.root;\n\n  \tname = template.n || template;\n\n  \tif (typeof name !== \"string\") {\n  \t\tfragment = new virtualdom_Fragment({\n  \t\t\ttemplate: name,\n  \t\t\troot: ractive,\n  \t\t\towner: element\n  \t\t});\n\n  \t\tname = fragment.toString();\n  \t\tfragment.unbind();\n\n  \t\tif (name === \"\") {\n  \t\t\t// empty string okay, just no decorator\n  \t\t\treturn;\n  \t\t}\n  \t}\n\n  \tif (template.a) {\n  \t\tthis.params = template.a;\n  \t} else if (template.d) {\n  \t\tthis.fragment = new virtualdom_Fragment({\n  \t\t\ttemplate: template.d,\n  \t\t\troot: ractive,\n  \t\t\towner: element\n  \t\t});\n\n  \t\tthis.params = this.fragment.getArgsList();\n\n  \t\tthis.fragment.bubble = function () {\n  \t\t\tthis.dirtyArgs = this.dirtyValue = true;\n  \t\t\tself.params = this.getArgsList();\n\n  \t\t\tif (self.ready) {\n  \t\t\t\tself.update();\n  \t\t\t}\n  \t\t};\n  \t}\n\n  \tthis.fn = findInViewHierarchy(\"decorators\", ractive, name);\n\n  \tif (!this.fn) {\n  \t\tfatal(missingPlugin(name, \"decorator\"));\n  \t}\n  };\n\n  Decorator.prototype = {\n  \tinit: function () {\n  \t\tvar node, result, args;\n\n  \t\tnode = this.element.node;\n\n  \t\tif (this.params) {\n  \t\t\targs = [node].concat(this.params);\n  \t\t\tresult = this.fn.apply(this.root, args);\n  \t\t} else {\n  \t\t\tresult = this.fn.call(this.root, node);\n  \t\t}\n\n  \t\tif (!result || !result.teardown) {\n  \t\t\tthrow new Error(\"Decorator definition must return an object with a teardown method\");\n  \t\t}\n\n  \t\t// TODO does this make sense?\n  \t\tthis.actual = result;\n  \t\tthis.ready = true;\n  \t},\n\n  \tupdate: function () {\n  \t\tif (this.actual.update) {\n  \t\t\tthis.actual.update.apply(this.root, this.params);\n  \t\t} else {\n  \t\t\tthis.actual.teardown(true);\n  \t\t\tthis.init();\n  \t\t}\n  \t},\n\n  \trebind: function (oldKeypath, newKeypath) {\n  \t\tif (this.fragment) {\n  \t\t\tthis.fragment.rebind(oldKeypath, newKeypath);\n  \t\t}\n  \t},\n\n  \tteardown: function (updating) {\n  \t\tthis.torndown = true;\n  \t\tif (this.ready) {\n  \t\t\tthis.actual.teardown();\n  \t\t}\n\n  \t\tif (!updating && this.fragment) {\n  \t\t\tthis.fragment.unbind();\n  \t\t}\n  \t}\n  };\n\n  var _Decorator = Decorator;\n\n  function select__bubble() {\n  \tvar _this = this;\n\n  \tif (!this.dirty) {\n  \t\tthis.dirty = true;\n\n  \t\tglobal_runloop.scheduleTask(function () {\n  \t\t\tsync(_this);\n  \t\t\t_this.dirty = false;\n  \t\t});\n  \t}\n\n  \tthis.parentFragment.bubble(); // default behaviour\n  }\n\n  function sync(selectElement) {\n  \tvar selectNode, selectValue, isMultiple, options, optionWasSelected;\n\n  \tselectNode = selectElement.node;\n\n  \tif (!selectNode) {\n  \t\treturn;\n  \t}\n\n  \toptions = toArray(selectNode.options);\n\n  \tselectValue = selectElement.getAttribute(\"value\");\n  \tisMultiple = selectElement.getAttribute(\"multiple\");\n\n  \t// If the <select> has a specified value, that should override\n  \t// these options\n  \tif (selectValue !== undefined) {\n  \t\toptions.forEach(function (o) {\n  \t\t\tvar optionValue, shouldSelect;\n\n  \t\t\toptionValue = o._ractive ? o._ractive.value : o.value;\n  \t\t\tshouldSelect = isMultiple ? valueContains(selectValue, optionValue) : selectValue == optionValue;\n\n  \t\t\tif (shouldSelect) {\n  \t\t\t\toptionWasSelected = true;\n  \t\t\t}\n\n  \t\t\to.selected = shouldSelect;\n  \t\t});\n\n  \t\tif (!optionWasSelected) {\n  \t\t\tif (options[0]) {\n  \t\t\t\toptions[0].selected = true;\n  \t\t\t}\n\n  \t\t\tif (selectElement.binding) {\n  \t\t\t\tselectElement.binding.forceUpdate();\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \t// Otherwise the value should be initialised according to which\n  \t// <option> element is selected, if twoway binding is in effect\n  \telse if (selectElement.binding) {\n  \t\tselectElement.binding.forceUpdate();\n  \t}\n  }\n\n  function valueContains(selectValue, optionValue) {\n  \tvar i = selectValue.length;\n  \twhile (i--) {\n  \t\tif (selectValue[i] == optionValue) {\n  \t\t\treturn true;\n  \t\t}\n  \t}\n  }\n\n  function special_option__init(option, template) {\n  \toption.select = findParentSelect(option.parent);\n\n  \t// we might be inside a <datalist> element\n  \tif (!option.select) {\n  \t\treturn;\n  \t}\n\n  \toption.select.options.push(option);\n\n  \t// If the value attribute is missing, use the element's content\n  \tif (!template.a) {\n  \t\ttemplate.a = {};\n  \t}\n\n  \t// ...as long as it isn't disabled\n  \tif (template.a.value === undefined && !template.a.hasOwnProperty(\"disabled\")) {\n  \t\ttemplate.a.value = template.f;\n  \t}\n\n  \t// If there is a `selected` attribute, but the <select>\n  \t// already has a value, delete it\n  \tif (\"selected\" in template.a && option.select.getAttribute(\"value\") !== undefined) {\n  \t\tdelete template.a.selected;\n  \t}\n  }\n\n  function special_option__unbind(option) {\n  \tif (option.select) {\n  \t\tremoveFromArray(option.select.options, option);\n  \t}\n  }\n\n  function findParentSelect(element) {\n  \tif (!element) {\n  \t\treturn;\n  \t}\n\n  \tdo {\n  \t\tif (element.name === \"select\") {\n  \t\t\treturn element;\n  \t\t}\n  \t} while (element = element.parent);\n  }\n\n  var Element_prototype_init = Element$init;\n  function Element$init(options) {\n  \tvar parentFragment, template, ractive, binding, bindings, twoway, bindingAttrs;\n\n  \tthis.type = ELEMENT;\n\n  \t// stuff we'll need later\n  \tparentFragment = this.parentFragment = options.parentFragment;\n  \ttemplate = this.template = options.template;\n\n  \tthis.parent = options.pElement || parentFragment.pElement;\n\n  \tthis.root = ractive = parentFragment.root;\n  \tthis.index = options.index;\n  \tthis.key = options.key;\n\n  \tthis.name = enforceCase(template.e);\n\n  \t// Special case - <option> elements\n  \tif (this.name === \"option\") {\n  \t\tspecial_option__init(this, template);\n  \t}\n\n  \t// Special case - <select> elements\n  \tif (this.name === \"select\") {\n  \t\tthis.options = [];\n  \t\tthis.bubble = select__bubble; // TODO this is a kludge\n  \t}\n\n  \t// Special case - <form> elements\n  \tif (this.name === \"form\") {\n  \t\tthis.formBindings = [];\n  \t}\n\n  \t// handle binding attributes first (twoway, lazy)\n  \tbindingAttrs = processBindingAttributes(this, template);\n\n  \t// create attributes\n  \tthis.attributes = createAttributes(this, template.a);\n  \tthis.conditionalAttributes = createConditionalAttributes(this, template.m);\n\n  \t// append children, if there are any\n  \tif (template.f) {\n  \t\tthis.fragment = new virtualdom_Fragment({\n  \t\t\ttemplate: template.f,\n  \t\t\troot: ractive,\n  \t\t\towner: this,\n  \t\t\tpElement: this,\n  \t\t\tcssIds: null\n  \t\t});\n  \t}\n\n  \t// the element setting should override the ractive setting\n  \ttwoway = ractive.twoway;\n  \tif (bindingAttrs.twoway === false) twoway = false;else if (bindingAttrs.twoway === true) twoway = true;\n\n  \tthis.twoway = twoway;\n  \tthis.lazy = bindingAttrs.lazy;\n\n  \t// create twoway binding\n  \tif (twoway && (binding = init_createTwowayBinding(this, template.a))) {\n  \t\tthis.binding = binding;\n\n  \t\t// register this with the root, so that we can do ractive.updateModel()\n  \t\tbindings = this.root._twowayBindings[binding.keypath.str] || (this.root._twowayBindings[binding.keypath.str] = []);\n  \t\tbindings.push(binding);\n  \t}\n\n  \t// create event proxies\n  \tif (template.v) {\n  \t\tthis.eventHandlers = createEventHandlers(this, template.v);\n  \t}\n\n  \t// create decorator\n  \tif (template.o) {\n  \t\tthis.decorator = new _Decorator(this, template.o);\n  \t}\n\n  \t// create transitions\n  \tthis.intro = template.t0 || template.t1;\n  \tthis.outro = template.t0 || template.t2;\n  }\n\n  var Element_prototype_rebind = Element$rebind;\n  function Element$rebind(oldKeypath, newKeypath) {\n  \tvar i, storage, liveQueries, ractive;\n\n  \tif (this.attributes) {\n  \t\tthis.attributes.forEach(rebind);\n  \t}\n\n  \tif (this.conditionalAttributes) {\n  \t\tthis.conditionalAttributes.forEach(rebind);\n  \t}\n\n  \tif (this.eventHandlers) {\n  \t\tthis.eventHandlers.forEach(rebind);\n  \t}\n\n  \tif (this.decorator) {\n  \t\trebind(this.decorator);\n  \t}\n\n  \t// rebind children\n  \tif (this.fragment) {\n  \t\trebind(this.fragment);\n  \t}\n\n  \t// Update live queries, if necessary\n  \tif (liveQueries = this.liveQueries) {\n  \t\tractive = this.root;\n\n  \t\ti = liveQueries.length;\n  \t\twhile (i--) {\n  \t\t\tliveQueries[i]._makeDirty();\n  \t\t}\n  \t}\n\n  \tif (this.node && (storage = this.node._ractive)) {\n\n  \t\t// adjust keypath if needed\n  \t\tassignNewKeypath(storage, \"keypath\", oldKeypath, newKeypath);\n  \t}\n\n  \tfunction rebind(thing) {\n  \t\tthing.rebind(oldKeypath, newKeypath);\n  \t}\n  }\n\n  function special_img__render(img) {\n  \tvar loadHandler;\n\n  \t// if this is an <img>, and we're in a crap browser, we may need to prevent it\n  \t// from overriding width and height when it loads the src\n  \tif (img.attributes.width || img.attributes.height) {\n  \t\timg.node.addEventListener(\"load\", loadHandler = function () {\n  \t\t\tvar width = img.getAttribute(\"width\"),\n  \t\t\t    height = img.getAttribute(\"height\");\n\n  \t\t\tif (width !== undefined) {\n  \t\t\t\timg.node.setAttribute(\"width\", width);\n  \t\t\t}\n\n  \t\t\tif (height !== undefined) {\n  \t\t\t\timg.node.setAttribute(\"height\", height);\n  \t\t\t}\n\n  \t\t\timg.node.removeEventListener(\"load\", loadHandler, false);\n  \t\t}, false);\n  \t}\n  }\n\n  function form__render(element) {\n  \telement.node.addEventListener(\"reset\", handleReset, false);\n  }\n\n  function form__unrender(element) {\n  \telement.node.removeEventListener(\"reset\", handleReset, false);\n  }\n\n  function handleReset() {\n  \tvar element = this._ractive.proxy;\n\n  \tglobal_runloop.start();\n  \telement.formBindings.forEach(updateModel);\n  \tglobal_runloop.end();\n  }\n\n  function updateModel(binding) {\n  \tbinding.root.viewmodel.set(binding.keypath, binding.resetValue);\n  }\n\n  var Transition_prototype_init = Transition$init;\n  function Transition$init(element, template, isIntro) {\n  \tvar ractive, name, fragment;\n\n  \tthis.element = element;\n  \tthis.root = ractive = element.root;\n  \tthis.isIntro = isIntro;\n\n  \tname = template.n || template;\n\n  \tif (typeof name !== \"string\") {\n  \t\tfragment = new virtualdom_Fragment({\n  \t\t\ttemplate: name,\n  \t\t\troot: ractive,\n  \t\t\towner: element\n  \t\t});\n\n  \t\tname = fragment.toString();\n  \t\tfragment.unbind();\n\n  \t\tif (name === \"\") {\n  \t\t\t// empty string okay, just no transition\n  \t\t\treturn;\n  \t\t}\n  \t}\n\n  \tthis.name = name;\n\n  \tif (template.a) {\n  \t\tthis.params = template.a;\n  \t} else if (template.d) {\n  \t\t// TODO is there a way to interpret dynamic arguments without all the\n  \t\t// 'dependency thrashing'?\n  \t\tfragment = new virtualdom_Fragment({\n  \t\t\ttemplate: template.d,\n  \t\t\troot: ractive,\n  \t\t\towner: element\n  \t\t});\n\n  \t\tthis.params = fragment.getArgsList();\n  \t\tfragment.unbind();\n  \t}\n\n  \tthis._fn = findInViewHierarchy(\"transitions\", ractive, name);\n\n  \tif (!this._fn) {\n  \t\twarnOnceIfDebug(missingPlugin(name, \"transition\"), { ractive: this.root });\n  \t}\n  }\n\n  var camelCase = function (hyphenatedStr) {\n  \treturn hyphenatedStr.replace(/-([a-zA-Z])/g, function (match, $1) {\n  \t\treturn $1.toUpperCase();\n  \t});\n  };\n\n  var helpers_prefix__prefix, prefixCache, helpers_prefix__testStyle;\n\n  if (!isClient) {\n  \thelpers_prefix__prefix = null;\n  } else {\n  \tprefixCache = {};\n  \thelpers_prefix__testStyle = createElement(\"div\").style;\n\n  \thelpers_prefix__prefix = function (prop) {\n  \t\tvar i, vendor, capped;\n\n  \t\tprop = camelCase(prop);\n\n  \t\tif (!prefixCache[prop]) {\n  \t\t\tif (helpers_prefix__testStyle[prop] !== undefined) {\n  \t\t\t\tprefixCache[prop] = prop;\n  \t\t\t} else {\n  \t\t\t\t// test vendors...\n  \t\t\t\tcapped = prop.charAt(0).toUpperCase() + prop.substring(1);\n\n  \t\t\t\ti = vendors.length;\n  \t\t\t\twhile (i--) {\n  \t\t\t\t\tvendor = vendors[i];\n  \t\t\t\t\tif (helpers_prefix__testStyle[vendor + capped] !== undefined) {\n  \t\t\t\t\t\tprefixCache[prop] = vendor + capped;\n  \t\t\t\t\t\tbreak;\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n\n  \t\treturn prefixCache[prop];\n  \t};\n  }\n\n  var helpers_prefix = helpers_prefix__prefix;\n\n  var getStyle, prototype_getStyle__getComputedStyle;\n\n  if (!isClient) {\n  \tgetStyle = null;\n  } else {\n  \tprototype_getStyle__getComputedStyle = window.getComputedStyle || legacy.getComputedStyle;\n\n  \tgetStyle = function (props) {\n  \t\tvar computedStyle, styles, i, prop, value;\n\n  \t\tcomputedStyle = prototype_getStyle__getComputedStyle(this.node);\n\n  \t\tif (typeof props === \"string\") {\n  \t\t\tvalue = computedStyle[helpers_prefix(props)];\n  \t\t\tif (value === \"0px\") {\n  \t\t\t\tvalue = 0;\n  \t\t\t}\n  \t\t\treturn value;\n  \t\t}\n\n  \t\tif (!isArray(props)) {\n  \t\t\tthrow new Error(\"Transition$getStyle must be passed a string, or an array of strings representing CSS properties\");\n  \t\t}\n\n  \t\tstyles = {};\n\n  \t\ti = props.length;\n  \t\twhile (i--) {\n  \t\t\tprop = props[i];\n  \t\t\tvalue = computedStyle[helpers_prefix(prop)];\n  \t\t\tif (value === \"0px\") {\n  \t\t\t\tvalue = 0;\n  \t\t\t}\n  \t\t\tstyles[prop] = value;\n  \t\t}\n\n  \t\treturn styles;\n  \t};\n  }\n\n  var prototype_getStyle = getStyle;\n\n  var setStyle = function (style, value) {\n  \tvar prop;\n\n  \tif (typeof style === \"string\") {\n  \t\tthis.node.style[helpers_prefix(style)] = value;\n  \t} else {\n  \t\tfor (prop in style) {\n  \t\t\tif (style.hasOwnProperty(prop)) {\n  \t\t\t\tthis.node.style[helpers_prefix(prop)] = style[prop];\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \treturn this;\n  };\n\n  var Ticker = function (options) {\n  \tvar easing;\n\n  \tthis.duration = options.duration;\n  \tthis.step = options.step;\n  \tthis.complete = options.complete;\n\n  \t// easing\n  \tif (typeof options.easing === \"string\") {\n  \t\teasing = options.root.easing[options.easing];\n\n  \t\tif (!easing) {\n  \t\t\twarnOnceIfDebug(missingPlugin(options.easing, \"easing\"));\n  \t\t\teasing = linear;\n  \t\t}\n  \t} else if (typeof options.easing === \"function\") {\n  \t\teasing = options.easing;\n  \t} else {\n  \t\teasing = linear;\n  \t}\n\n  \tthis.easing = easing;\n\n  \tthis.start = utils_getTime();\n  \tthis.end = this.start + this.duration;\n\n  \tthis.running = true;\n  \tshared_animations.add(this);\n  };\n\n  Ticker.prototype = {\n  \ttick: function (now) {\n  \t\tvar elapsed, eased;\n\n  \t\tif (!this.running) {\n  \t\t\treturn false;\n  \t\t}\n\n  \t\tif (now > this.end) {\n  \t\t\tif (this.step) {\n  \t\t\t\tthis.step(1);\n  \t\t\t}\n\n  \t\t\tif (this.complete) {\n  \t\t\t\tthis.complete(1);\n  \t\t\t}\n\n  \t\t\treturn false;\n  \t\t}\n\n  \t\telapsed = now - this.start;\n  \t\teased = this.easing(elapsed / this.duration);\n\n  \t\tif (this.step) {\n  \t\t\tthis.step(eased);\n  \t\t}\n\n  \t\treturn true;\n  \t},\n\n  \tstop: function () {\n  \t\tif (this.abort) {\n  \t\t\tthis.abort();\n  \t\t}\n\n  \t\tthis.running = false;\n  \t}\n  };\n\n  var shared_Ticker = Ticker;\n  function linear(t) {\n  \treturn t;\n  }\n\n  var unprefixPattern = new RegExp(\"^-(?:\" + vendors.join(\"|\") + \")-\");\n\n  var unprefix = function (prop) {\n  \treturn prop.replace(unprefixPattern, \"\");\n  };\n\n  var vendorPattern = new RegExp(\"^(?:\" + vendors.join(\"|\") + \")([A-Z])\");\n\n  var hyphenate = function (str) {\n  \tvar hyphenated;\n\n  \tif (!str) {\n  \t\treturn \"\"; // edge case\n  \t}\n\n  \tif (vendorPattern.test(str)) {\n  \t\tstr = \"-\" + str;\n  \t}\n\n  \thyphenated = str.replace(/[A-Z]/g, function (match) {\n  \t\treturn \"-\" + match.toLowerCase();\n  \t});\n\n  \treturn hyphenated;\n  };\n\n  var createTransitions,\n      animateStyle_createTransitions__testStyle,\n      TRANSITION,\n      TRANSITIONEND,\n      CSS_TRANSITIONS_ENABLED,\n      TRANSITION_DURATION,\n      TRANSITION_PROPERTY,\n      TRANSITION_TIMING_FUNCTION,\n      canUseCssTransitions = {},\n      cannotUseCssTransitions = {};\n\n  if (!isClient) {\n  \tcreateTransitions = null;\n  } else {\n  \tanimateStyle_createTransitions__testStyle = createElement(\"div\").style;\n\n  \t// determine some facts about our environment\n  \t(function () {\n  \t\tif (animateStyle_createTransitions__testStyle.transition !== undefined) {\n  \t\t\tTRANSITION = \"transition\";\n  \t\t\tTRANSITIONEND = \"transitionend\";\n  \t\t\tCSS_TRANSITIONS_ENABLED = true;\n  \t\t} else if (animateStyle_createTransitions__testStyle.webkitTransition !== undefined) {\n  \t\t\tTRANSITION = \"webkitTransition\";\n  \t\t\tTRANSITIONEND = \"webkitTransitionEnd\";\n  \t\t\tCSS_TRANSITIONS_ENABLED = true;\n  \t\t} else {\n  \t\t\tCSS_TRANSITIONS_ENABLED = false;\n  \t\t}\n  \t})();\n\n  \tif (TRANSITION) {\n  \t\tTRANSITION_DURATION = TRANSITION + \"Duration\";\n  \t\tTRANSITION_PROPERTY = TRANSITION + \"Property\";\n  \t\tTRANSITION_TIMING_FUNCTION = TRANSITION + \"TimingFunction\";\n  \t}\n\n  \tcreateTransitions = function (t, to, options, changedProperties, resolve) {\n\n  \t\t// Wait a beat (otherwise the target styles will be applied immediately)\n  \t\t// TODO use a fastdom-style mechanism?\n  \t\tsetTimeout(function () {\n\n  \t\t\tvar hashPrefix, jsTransitionsComplete, cssTransitionsComplete, checkComplete, transitionEndHandler;\n\n  \t\t\tcheckComplete = function () {\n  \t\t\t\tif (jsTransitionsComplete && cssTransitionsComplete) {\n  \t\t\t\t\t// will changes to events and fire have an unexpected consequence here?\n  \t\t\t\t\tt.root.fire(t.name + \":end\", t.node, t.isIntro);\n  \t\t\t\t\tresolve();\n  \t\t\t\t}\n  \t\t\t};\n\n  \t\t\t// this is used to keep track of which elements can use CSS to animate\n  \t\t\t// which properties\n  \t\t\thashPrefix = (t.node.namespaceURI || \"\") + t.node.tagName;\n\n  \t\t\tt.node.style[TRANSITION_PROPERTY] = changedProperties.map(helpers_prefix).map(hyphenate).join(\",\");\n  \t\t\tt.node.style[TRANSITION_TIMING_FUNCTION] = hyphenate(options.easing || \"linear\");\n  \t\t\tt.node.style[TRANSITION_DURATION] = options.duration / 1000 + \"s\";\n\n  \t\t\ttransitionEndHandler = function (event) {\n  \t\t\t\tvar index;\n\n  \t\t\t\tindex = changedProperties.indexOf(camelCase(unprefix(event.propertyName)));\n  \t\t\t\tif (index !== -1) {\n  \t\t\t\t\tchangedProperties.splice(index, 1);\n  \t\t\t\t}\n\n  \t\t\t\tif (changedProperties.length) {\n  \t\t\t\t\t// still transitioning...\n  \t\t\t\t\treturn;\n  \t\t\t\t}\n\n  \t\t\t\tt.node.removeEventListener(TRANSITIONEND, transitionEndHandler, false);\n\n  \t\t\t\tcssTransitionsComplete = true;\n  \t\t\t\tcheckComplete();\n  \t\t\t};\n\n  \t\t\tt.node.addEventListener(TRANSITIONEND, transitionEndHandler, false);\n\n  \t\t\tsetTimeout(function () {\n  \t\t\t\tvar i = changedProperties.length,\n  \t\t\t\t    hash,\n  \t\t\t\t    originalValue,\n  \t\t\t\t    index,\n  \t\t\t\t    propertiesToTransitionInJs = [],\n  \t\t\t\t    prop,\n  \t\t\t\t    suffix;\n\n  \t\t\t\twhile (i--) {\n  \t\t\t\t\tprop = changedProperties[i];\n  \t\t\t\t\thash = hashPrefix + prop;\n\n  \t\t\t\t\tif (CSS_TRANSITIONS_ENABLED && !cannotUseCssTransitions[hash]) {\n  \t\t\t\t\t\tt.node.style[helpers_prefix(prop)] = to[prop];\n\n  \t\t\t\t\t\t// If we're not sure if CSS transitions are supported for\n  \t\t\t\t\t\t// this tag/property combo, find out now\n  \t\t\t\t\t\tif (!canUseCssTransitions[hash]) {\n  \t\t\t\t\t\t\toriginalValue = t.getStyle(prop);\n\n  \t\t\t\t\t\t\t// if this property is transitionable in this browser,\n  \t\t\t\t\t\t\t// the current style will be different from the target style\n  \t\t\t\t\t\t\tcanUseCssTransitions[hash] = t.getStyle(prop) != to[prop];\n  \t\t\t\t\t\t\tcannotUseCssTransitions[hash] = !canUseCssTransitions[hash];\n\n  \t\t\t\t\t\t\t// Reset, if we're going to use timers after all\n  \t\t\t\t\t\t\tif (cannotUseCssTransitions[hash]) {\n  \t\t\t\t\t\t\t\tt.node.style[helpers_prefix(prop)] = originalValue;\n  \t\t\t\t\t\t\t}\n  \t\t\t\t\t\t}\n  \t\t\t\t\t}\n\n  \t\t\t\t\tif (!CSS_TRANSITIONS_ENABLED || cannotUseCssTransitions[hash]) {\n  \t\t\t\t\t\t// we need to fall back to timer-based stuff\n  \t\t\t\t\t\tif (originalValue === undefined) {\n  \t\t\t\t\t\t\toriginalValue = t.getStyle(prop);\n  \t\t\t\t\t\t}\n\n  \t\t\t\t\t\t// need to remove this from changedProperties, otherwise transitionEndHandler\n  \t\t\t\t\t\t// will get confused\n  \t\t\t\t\t\tindex = changedProperties.indexOf(prop);\n  \t\t\t\t\t\tif (index === -1) {\n  \t\t\t\t\t\t\twarnIfDebug(\"Something very strange happened with transitions. Please raise an issue at https://github.com/ractivejs/ractive/issues - thanks!\", { node: t.node });\n  \t\t\t\t\t\t} else {\n  \t\t\t\t\t\t\tchangedProperties.splice(index, 1);\n  \t\t\t\t\t\t}\n\n  \t\t\t\t\t\t// TODO Determine whether this property is animatable at all\n\n  \t\t\t\t\t\tsuffix = /[^\\d]*$/.exec(to[prop])[0];\n\n  \t\t\t\t\t\t// ...then kick off a timer-based transition\n  \t\t\t\t\t\tpropertiesToTransitionInJs.push({\n  \t\t\t\t\t\t\tname: helpers_prefix(prop),\n  \t\t\t\t\t\t\tinterpolator: shared_interpolate(parseFloat(originalValue), parseFloat(to[prop])),\n  \t\t\t\t\t\t\tsuffix: suffix\n  \t\t\t\t\t\t});\n  \t\t\t\t\t}\n  \t\t\t\t}\n\n  \t\t\t\t// javascript transitions\n  \t\t\t\tif (propertiesToTransitionInJs.length) {\n  \t\t\t\t\tnew shared_Ticker({\n  \t\t\t\t\t\troot: t.root,\n  \t\t\t\t\t\tduration: options.duration,\n  \t\t\t\t\t\teasing: camelCase(options.easing || \"\"),\n  \t\t\t\t\t\tstep: function (pos) {\n  \t\t\t\t\t\t\tvar prop, i;\n\n  \t\t\t\t\t\t\ti = propertiesToTransitionInJs.length;\n  \t\t\t\t\t\t\twhile (i--) {\n  \t\t\t\t\t\t\t\tprop = propertiesToTransitionInJs[i];\n  \t\t\t\t\t\t\t\tt.node.style[prop.name] = prop.interpolator(pos) + prop.suffix;\n  \t\t\t\t\t\t\t}\n  \t\t\t\t\t\t},\n  \t\t\t\t\t\tcomplete: function () {\n  \t\t\t\t\t\t\tjsTransitionsComplete = true;\n  \t\t\t\t\t\t\tcheckComplete();\n  \t\t\t\t\t\t}\n  \t\t\t\t\t});\n  \t\t\t\t} else {\n  \t\t\t\t\tjsTransitionsComplete = true;\n  \t\t\t\t}\n\n  \t\t\t\tif (!changedProperties.length) {\n  \t\t\t\t\t// We need to cancel the transitionEndHandler, and deal with\n  \t\t\t\t\t// the fact that it will never fire\n  \t\t\t\t\tt.node.removeEventListener(TRANSITIONEND, transitionEndHandler, false);\n  \t\t\t\t\tcssTransitionsComplete = true;\n  \t\t\t\t\tcheckComplete();\n  \t\t\t\t}\n  \t\t\t}, 0);\n  \t\t}, options.delay || 0);\n  \t};\n  }\n\n  var animateStyle_createTransitions = createTransitions;\n\n  var hidden, vendor, animateStyle_visibility__prefix, animateStyle_visibility__i, visibility;\n\n  if (typeof document !== \"undefined\") {\n  \thidden = \"hidden\";\n\n  \tvisibility = {};\n\n  \tif (hidden in document) {\n  \t\tanimateStyle_visibility__prefix = \"\";\n  \t} else {\n  \t\tanimateStyle_visibility__i = vendors.length;\n  \t\twhile (animateStyle_visibility__i--) {\n  \t\t\tvendor = vendors[animateStyle_visibility__i];\n  \t\t\thidden = vendor + \"Hidden\";\n\n  \t\t\tif (hidden in document) {\n  \t\t\t\tanimateStyle_visibility__prefix = vendor;\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \tif (animateStyle_visibility__prefix !== undefined) {\n  \t\tdocument.addEventListener(animateStyle_visibility__prefix + \"visibilitychange\", onChange);\n\n  \t\t// initialise\n  \t\tonChange();\n  \t} else {\n  \t\t// gah, we're in an old browser\n  \t\tif (\"onfocusout\" in document) {\n  \t\t\tdocument.addEventListener(\"focusout\", onHide);\n  \t\t\tdocument.addEventListener(\"focusin\", onShow);\n  \t\t} else {\n  \t\t\twindow.addEventListener(\"pagehide\", onHide);\n  \t\t\twindow.addEventListener(\"blur\", onHide);\n\n  \t\t\twindow.addEventListener(\"pageshow\", onShow);\n  \t\t\twindow.addEventListener(\"focus\", onShow);\n  \t\t}\n\n  \t\tvisibility.hidden = false; // until proven otherwise. Not ideal but hey\n  \t}\n  }\n\n  function onChange() {\n  \tvisibility.hidden = document[hidden];\n  }\n\n  function onHide() {\n  \tvisibility.hidden = true;\n  }\n\n  function onShow() {\n  \tvisibility.hidden = false;\n  }\n\n  var animateStyle_visibility = visibility;\n\n  var animateStyle, _animateStyle__getComputedStyle, resolved;\n\n  if (!isClient) {\n  \tanimateStyle = null;\n  } else {\n  \t_animateStyle__getComputedStyle = window.getComputedStyle || legacy.getComputedStyle;\n\n  \tanimateStyle = function (style, value, options) {\n  \t\tvar _this = this;\n\n  \t\tvar to;\n\n  \t\tif (arguments.length === 4) {\n  \t\t\tthrow new Error(\"t.animateStyle() returns a promise - use .then() instead of passing a callback\");\n  \t\t}\n\n  \t\t// Special case - page isn't visible. Don't animate anything, because\n  \t\t// that way you'll never get CSS transitionend events\n  \t\tif (animateStyle_visibility.hidden) {\n  \t\t\tthis.setStyle(style, value);\n  \t\t\treturn resolved || (resolved = utils_Promise.resolve());\n  \t\t}\n\n  \t\tif (typeof style === \"string\") {\n  \t\t\tto = {};\n  \t\t\tto[style] = value;\n  \t\t} else {\n  \t\t\tto = style;\n\n  \t\t\t// shuffle arguments\n  \t\t\toptions = value;\n  \t\t}\n\n  \t\t// As of 0.3.9, transition authors should supply an `option` object with\n  \t\t// `duration` and `easing` properties (and optional `delay`), plus a\n  \t\t// callback function that gets called after the animation completes\n\n  \t\t// TODO remove this check in a future version\n  \t\tif (!options) {\n  \t\t\twarnOnceIfDebug(\"The \\\"%s\\\" transition does not supply an options object to `t.animateStyle()`. This will break in a future version of Ractive. For more info see https://github.com/RactiveJS/Ractive/issues/340\", this.name);\n  \t\t\toptions = this;\n  \t\t}\n\n  \t\tvar promise = new utils_Promise(function (resolve) {\n  \t\t\tvar propertyNames, changedProperties, computedStyle, current, from, i, prop;\n\n  \t\t\t// Edge case - if duration is zero, set style synchronously and complete\n  \t\t\tif (!options.duration) {\n  \t\t\t\t_this.setStyle(to);\n  \t\t\t\tresolve();\n  \t\t\t\treturn;\n  \t\t\t}\n\n  \t\t\t// Get a list of the properties we're animating\n  \t\t\tpropertyNames = Object.keys(to);\n  \t\t\tchangedProperties = [];\n\n  \t\t\t// Store the current styles\n  \t\t\tcomputedStyle = _animateStyle__getComputedStyle(_this.node);\n\n  \t\t\tfrom = {};\n  \t\t\ti = propertyNames.length;\n  \t\t\twhile (i--) {\n  \t\t\t\tprop = propertyNames[i];\n  \t\t\t\tcurrent = computedStyle[helpers_prefix(prop)];\n\n  \t\t\t\tif (current === \"0px\") {\n  \t\t\t\t\tcurrent = 0;\n  \t\t\t\t}\n\n  \t\t\t\t// we need to know if we're actually changing anything\n  \t\t\t\tif (current != to[prop]) {\n  \t\t\t\t\t// use != instead of !==, so we can compare strings with numbers\n  \t\t\t\t\tchangedProperties.push(prop);\n\n  \t\t\t\t\t// make the computed style explicit, so we can animate where\n  \t\t\t\t\t// e.g. height='auto'\n  \t\t\t\t\t_this.node.style[helpers_prefix(prop)] = current;\n  \t\t\t\t}\n  \t\t\t}\n\n  \t\t\t// If we're not actually changing anything, the transitionend event\n  \t\t\t// will never fire! So we complete early\n  \t\t\tif (!changedProperties.length) {\n  \t\t\t\tresolve();\n  \t\t\t\treturn;\n  \t\t\t}\n\n  \t\t\tanimateStyle_createTransitions(_this, to, options, changedProperties, resolve);\n  \t\t});\n\n  \t\treturn promise;\n  \t};\n  }\n\n  var _animateStyle = animateStyle;\n\n  var processParams = function (params, defaults) {\n  \tif (typeof params === \"number\") {\n  \t\tparams = { duration: params };\n  \t} else if (typeof params === \"string\") {\n  \t\tif (params === \"slow\") {\n  \t\t\tparams = { duration: 600 };\n  \t\t} else if (params === \"fast\") {\n  \t\t\tparams = { duration: 200 };\n  \t\t} else {\n  \t\t\tparams = { duration: 400 };\n  \t\t}\n  \t} else if (!params) {\n  \t\tparams = {};\n  \t}\n\n  \treturn fillGaps({}, params, defaults);\n  };\n\n  var prototype_start = Transition$start;\n\n  function Transition$start() {\n  \tvar _this = this;\n\n  \tvar node, originalStyle, completed;\n\n  \tnode = this.node = this.element.node;\n  \toriginalStyle = node.getAttribute(\"style\");\n\n  \t// create t.complete() - we don't want this on the prototype,\n  \t// because we don't want `this` silliness when passing it as\n  \t// an argument\n  \tthis.complete = function (noReset) {\n  \t\tif (completed) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tif (!noReset && _this.isIntro) {\n  \t\t\tresetStyle(node, originalStyle);\n  \t\t}\n\n  \t\tnode._ractive.transition = null;\n  \t\t_this._manager.remove(_this);\n\n  \t\tcompleted = true;\n  \t};\n\n  \t// If the transition function doesn't exist, abort\n  \tif (!this._fn) {\n  \t\tthis.complete();\n  \t\treturn;\n  \t}\n\n  \tthis._fn.apply(this.root, [this].concat(this.params));\n  }\n\n  function resetStyle(node, style) {\n  \tif (style) {\n  \t\tnode.setAttribute(\"style\", style);\n  \t} else {\n\n  \t\t// Next line is necessary, to remove empty style attribute!\n  \t\t// See http://stackoverflow.com/a/7167553\n  \t\tnode.getAttribute(\"style\");\n  \t\tnode.removeAttribute(\"style\");\n  \t}\n  }\n\n  var Transition = function (owner, template, isIntro) {\n  \tthis.init(owner, template, isIntro);\n  };\n\n  Transition.prototype = {\n  \tinit: Transition_prototype_init,\n  \tstart: prototype_start,\n  \tgetStyle: prototype_getStyle,\n  \tsetStyle: setStyle,\n  \tanimateStyle: _animateStyle,\n  \tprocessParams: processParams\n  };\n\n  var _Transition = Transition;\n\n  var Element_prototype_render = Element$render;\n\n  var updateCss, updateScript;\n\n  updateCss = function () {\n  \tvar node = this.node,\n  \t    content = this.fragment.toString(false);\n\n  \t// IE8 has no styleSheet unless there's a type text/css\n  \tif (window && window.appearsToBeIELessEqual8) {\n  \t\tnode.type = \"text/css\";\n  \t}\n\n  \tif (node.styleSheet) {\n  \t\tnode.styleSheet.cssText = content;\n  \t} else {\n\n  \t\twhile (node.hasChildNodes()) {\n  \t\t\tnode.removeChild(node.firstChild);\n  \t\t}\n\n  \t\tnode.appendChild(document.createTextNode(content));\n  \t}\n  };\n\n  updateScript = function () {\n  \tif (!this.node.type || this.node.type === \"text/javascript\") {\n  \t\twarnIfDebug(\"Script tag was updated. This does not cause the code to be re-evaluated!\", { ractive: this.root });\n  \t\t// As it happens, we ARE in a position to re-evaluate the code if we wanted\n  \t\t// to - we could eval() it, or insert it into a fresh (temporary) script tag.\n  \t\t// But this would be a terrible idea with unpredictable results, so let's not.\n  \t}\n\n  \tthis.node.text = this.fragment.toString(false);\n  };\n  function Element$render() {\n  \tvar _this = this;\n\n  \tvar root = this.root,\n  \t    namespace,\n  \t    node,\n  \t    transition;\n\n  \tnamespace = getNamespace(this);\n  \tnode = this.node = createElement(this.name, namespace);\n\n  \t// Is this a top-level node of a component? If so, we may need to add\n  \t// a data-ractive-css attribute, for CSS encapsulation\n  \tif (this.parentFragment.cssIds) {\n  \t\tthis.node.setAttribute(\"data-ractive-css\", this.parentFragment.cssIds.map(function (x) {\n  \t\t\treturn \"{\" + x + \"}\";\n  \t\t}).join(\" \"));\n  \t}\n\n  \t// Add _ractive property to the node - we use this object to store stuff\n  \t// related to proxy events, two-way bindings etc\n  \tdefineProperty(this.node, \"_ractive\", {\n  \t\tvalue: {\n  \t\t\tproxy: this,\n  \t\t\tkeypath: getInnerContext(this.parentFragment),\n  \t\t\tevents: create(null),\n  \t\t\troot: root\n  \t\t}\n  \t});\n\n  \t// Render attributes\n  \tthis.attributes.forEach(function (a) {\n  \t\treturn a.render(node);\n  \t});\n  \tthis.conditionalAttributes.forEach(function (a) {\n  \t\treturn a.render(node);\n  \t});\n\n  \t// Render children\n  \tif (this.fragment) {\n  \t\t// Special case - <script> element\n  \t\tif (this.name === \"script\") {\n  \t\t\tthis.bubble = updateScript;\n  \t\t\tthis.node.text = this.fragment.toString(false); // bypass warning initially\n  \t\t\tthis.fragment.unrender = noop; // TODO this is a kludge\n  \t\t}\n\n  \t\t// Special case - <style> element\n  \t\telse if (this.name === \"style\") {\n  \t\t\tthis.bubble = updateCss;\n  \t\t\tthis.bubble();\n  \t\t\tthis.fragment.unrender = noop;\n  \t\t}\n\n  \t\t// Special case - contenteditable\n  \t\telse if (this.binding && this.getAttribute(\"contenteditable\")) {\n  \t\t\tthis.fragment.unrender = noop;\n  \t\t} else {\n  \t\t\tthis.node.appendChild(this.fragment.render());\n  \t\t}\n  \t}\n\n  \t// deal with two-way bindings\n  \tif (this.binding) {\n  \t\tthis.binding.render();\n  \t\tthis.node._ractive.binding = this.binding;\n  \t}\n\n  \t// Add proxy event handlers\n  \tif (this.eventHandlers) {\n  \t\tthis.eventHandlers.forEach(function (h) {\n  \t\t\treturn h.render();\n  \t\t});\n  \t}\n\n  \tif (this.name === \"option\") {\n  \t\tprocessOption(this);\n  \t}\n\n  \t// Special cases\n  \tif (this.name === \"img\") {\n  \t\t// if this is an <img>, and we're in a crap browser, we may\n  \t\t// need to prevent it from overriding width and height when\n  \t\t// it loads the src\n  \t\tspecial_img__render(this);\n  \t} else if (this.name === \"form\") {\n  \t\t// forms need to keep track of their bindings, in case of reset\n  \t\tform__render(this);\n  \t} else if (this.name === \"input\" || this.name === \"textarea\") {\n  \t\t// inputs and textareas should store their initial value as\n  \t\t// `defaultValue` in case of reset\n  \t\tthis.node.defaultValue = this.node.value;\n  \t} else if (this.name === \"option\") {\n  \t\t// similarly for option nodes\n  \t\tthis.node.defaultSelected = this.node.selected;\n  \t}\n\n  \t// apply decorator(s)\n  \tif (this.decorator && this.decorator.fn) {\n  \t\tglobal_runloop.scheduleTask(function () {\n  \t\t\tif (!_this.decorator.torndown) {\n  \t\t\t\t_this.decorator.init();\n  \t\t\t}\n  \t\t}, true);\n  \t}\n\n  \t// trigger intro transition\n  \tif (root.transitionsEnabled && this.intro) {\n  \t\ttransition = new _Transition(this, this.intro, true);\n  \t\tglobal_runloop.registerTransition(transition);\n  \t\tglobal_runloop.scheduleTask(function () {\n  \t\t\treturn transition.start();\n  \t\t}, true);\n\n  \t\tthis.transition = transition;\n  \t}\n\n  \tif (this.node.autofocus) {\n  \t\t// Special case. Some browsers (*cough* Firefix *cough*) have a problem\n  \t\t// with dynamically-generated elements having autofocus, and they won't\n  \t\t// allow you to programmatically focus the element until it's in the DOM\n  \t\tglobal_runloop.scheduleTask(function () {\n  \t\t\treturn _this.node.focus();\n  \t\t}, true);\n  \t}\n\n  \tupdateLiveQueries(this);\n  \treturn this.node;\n  }\n\n  function getNamespace(element) {\n  \tvar namespace, xmlns, parent;\n\n  \t// Use specified namespace...\n  \tif (xmlns = element.getAttribute(\"xmlns\")) {\n  \t\tnamespace = xmlns;\n  \t}\n\n  \t// ...or SVG namespace, if this is an <svg> element\n  \telse if (element.name === \"svg\") {\n  \t\tnamespace = namespaces.svg;\n  \t} else if (parent = element.parent) {\n  \t\t// ...or HTML, if the parent is a <foreignObject>\n  \t\tif (parent.name === \"foreignObject\") {\n  \t\t\tnamespace = namespaces.html;\n  \t\t}\n\n  \t\t// ...or inherit from the parent node\n  \t\telse {\n  \t\t\tnamespace = parent.node.namespaceURI;\n  \t\t}\n  \t} else {\n  \t\tnamespace = element.root.el.namespaceURI;\n  \t}\n\n  \treturn namespace;\n  }\n\n  function processOption(option) {\n  \tvar optionValue, selectValue, i;\n\n  \tif (!option.select) {\n  \t\treturn;\n  \t}\n\n  \tselectValue = option.select.getAttribute(\"value\");\n  \tif (selectValue === undefined) {\n  \t\treturn;\n  \t}\n\n  \toptionValue = option.getAttribute(\"value\");\n\n  \tif (option.select.node.multiple && isArray(selectValue)) {\n  \t\ti = selectValue.length;\n  \t\twhile (i--) {\n  \t\t\tif (optionValue == selectValue[i]) {\n  \t\t\t\toption.node.selected = true;\n  \t\t\t\tbreak;\n  \t\t\t}\n  \t\t}\n  \t} else {\n  \t\toption.node.selected = optionValue == selectValue;\n  \t}\n  }\n\n  function updateLiveQueries(element) {\n  \tvar instance, liveQueries, i, selector, query;\n\n  \t// Does this need to be added to any live queries?\n  \tinstance = element.root;\n\n  \tdo {\n  \t\tliveQueries = instance._liveQueries;\n\n  \t\ti = liveQueries.length;\n  \t\twhile (i--) {\n  \t\t\tselector = liveQueries[i];\n  \t\t\tquery = liveQueries[\"_\" + selector];\n\n  \t\t\tif (query._test(element)) {\n  \t\t\t\t// keep register of applicable selectors, for when we teardown\n  \t\t\t\t(element.liveQueries || (element.liveQueries = [])).push(query);\n  \t\t\t}\n  \t\t}\n  \t} while (instance = instance.parent);\n  }\n\n  var Element_prototype_toString = function () {\n  \tvar str, escape;\n\n  \tif (this.template.y) {\n  \t\t// DOCTYPE declaration\n  \t\treturn \"<!DOCTYPE\" + this.template.dd + \">\";\n  \t}\n\n  \tstr = \"<\" + this.template.e;\n\n  \tstr += this.attributes.map(stringifyAttribute).join(\"\") + this.conditionalAttributes.map(stringifyAttribute).join(\"\");\n\n  \t// Special case - selected options\n  \tif (this.name === \"option\" && optionIsSelected(this)) {\n  \t\tstr += \" selected\";\n  \t}\n\n  \t// Special case - two-way radio name bindings\n  \tif (this.name === \"input\" && inputIsCheckedRadio(this)) {\n  \t\tstr += \" checked\";\n  \t}\n\n  \tstr += \">\";\n\n  \t// Special case - textarea\n  \tif (this.name === \"textarea\" && this.getAttribute(\"value\") !== undefined) {\n  \t\tstr += escapeHtml(this.getAttribute(\"value\"));\n  \t}\n\n  \t// Special case - contenteditable\n  \telse if (this.getAttribute(\"contenteditable\") !== undefined) {\n  \t\tstr += this.getAttribute(\"value\") || \"\";\n  \t}\n\n  \tif (this.fragment) {\n  \t\tescape = this.name !== \"script\" && this.name !== \"style\";\n  \t\tstr += this.fragment.toString(escape);\n  \t}\n\n  \t// add a closing tag if this isn't a void element\n  \tif (!voidElementNames.test(this.template.e)) {\n  \t\tstr += \"</\" + this.template.e + \">\";\n  \t}\n\n  \treturn str;\n  };\n\n  function optionIsSelected(element) {\n  \tvar optionValue, selectValue, i;\n\n  \toptionValue = element.getAttribute(\"value\");\n\n  \tif (optionValue === undefined || !element.select) {\n  \t\treturn false;\n  \t}\n\n  \tselectValue = element.select.getAttribute(\"value\");\n\n  \tif (selectValue == optionValue) {\n  \t\treturn true;\n  \t}\n\n  \tif (element.select.getAttribute(\"multiple\") && isArray(selectValue)) {\n  \t\ti = selectValue.length;\n  \t\twhile (i--) {\n  \t\t\tif (selectValue[i] == optionValue) {\n  \t\t\t\treturn true;\n  \t\t\t}\n  \t\t}\n  \t}\n  }\n\n  function inputIsCheckedRadio(element) {\n  \tvar attributes, typeAttribute, valueAttribute, nameAttribute;\n\n  \tattributes = element.attributes;\n\n  \ttypeAttribute = attributes.type;\n  \tvalueAttribute = attributes.value;\n  \tnameAttribute = attributes.name;\n\n  \tif (!typeAttribute || typeAttribute.value !== \"radio\" || !valueAttribute || !nameAttribute.interpolator) {\n  \t\treturn;\n  \t}\n\n  \tif (valueAttribute.value === nameAttribute.interpolator.value) {\n  \t\treturn true;\n  \t}\n  }\n\n  function stringifyAttribute(attribute) {\n  \tvar str = attribute.toString();\n  \treturn str ? \" \" + str : \"\";\n  }\n\n  var Element_prototype_unbind = Element$unbind;\n  function Element$unbind() {\n  \tif (this.fragment) {\n  \t\tthis.fragment.unbind();\n  \t}\n\n  \tif (this.binding) {\n  \t\tthis.binding.unbind();\n  \t}\n\n  \tif (this.eventHandlers) {\n  \t\tthis.eventHandlers.forEach(methodCallers__unbind);\n  \t}\n\n  \t// Special case - <option>\n  \tif (this.name === \"option\") {\n  \t\tspecial_option__unbind(this);\n  \t}\n\n  \tthis.attributes.forEach(methodCallers__unbind);\n  \tthis.conditionalAttributes.forEach(methodCallers__unbind);\n  }\n\n  var Element_prototype_unrender = Element$unrender;\n\n  function Element$unrender(shouldDestroy) {\n  \tvar binding, bindings, transition;\n\n  \tif (transition = this.transition) {\n  \t\ttransition.complete();\n  \t}\n\n  \t// Detach as soon as we can\n  \tif (this.name === \"option\") {\n  \t\t// <option> elements detach immediately, so that\n  \t\t// their parent <select> element syncs correctly, and\n  \t\t// since option elements can't have transitions anyway\n  \t\tthis.detach();\n  \t} else if (shouldDestroy) {\n  \t\tglobal_runloop.detachWhenReady(this);\n  \t}\n\n  \t// Children first. that way, any transitions on child elements will be\n  \t// handled by the current transitionManager\n  \tif (this.fragment) {\n  \t\tthis.fragment.unrender(false);\n  \t}\n\n  \tif (binding = this.binding) {\n  \t\tthis.binding.unrender();\n\n  \t\tthis.node._ractive.binding = null;\n  \t\tbindings = this.root._twowayBindings[binding.keypath.str];\n  \t\tbindings.splice(bindings.indexOf(binding), 1);\n  \t}\n\n  \t// Remove event handlers\n  \tif (this.eventHandlers) {\n  \t\tthis.eventHandlers.forEach(methodCallers__unrender);\n  \t}\n\n  \tif (this.decorator) {\n  \t\tglobal_runloop.registerDecorator(this.decorator);\n  \t}\n\n  \t// trigger outro transition if necessary\n  \tif (this.root.transitionsEnabled && this.outro) {\n  \t\ttransition = new _Transition(this, this.outro, false);\n  \t\tglobal_runloop.registerTransition(transition);\n  \t\tglobal_runloop.scheduleTask(function () {\n  \t\t\treturn transition.start();\n  \t\t});\n  \t}\n\n  \t// Remove this node from any live queries\n  \tif (this.liveQueries) {\n  \t\tremoveFromLiveQueries(this);\n  \t}\n\n  \tif (this.name === \"form\") {\n  \t\tform__unrender(this);\n  \t}\n  }\n\n  function removeFromLiveQueries(element) {\n  \tvar query, selector, i;\n\n  \ti = element.liveQueries.length;\n  \twhile (i--) {\n  \t\tquery = element.liveQueries[i];\n  \t\tselector = query.selector;\n\n  \t\tquery._remove(element.node);\n  \t}\n  }\n\n  var Element = function (options) {\n  \tthis.init(options);\n  };\n\n  Element.prototype = {\n  \tbubble: Element_prototype_bubble,\n  \tdetach: Element_prototype_detach,\n  \tfind: Element_prototype_find,\n  \tfindAll: Element_prototype_findAll,\n  \tfindAllComponents: Element_prototype_findAllComponents,\n  \tfindComponent: Element_prototype_findComponent,\n  \tfindNextNode: Element_prototype_findNextNode,\n  \tfirstNode: Element_prototype_firstNode,\n  \tgetAttribute: getAttribute,\n  \tinit: Element_prototype_init,\n  \trebind: Element_prototype_rebind,\n  \trender: Element_prototype_render,\n  \ttoString: Element_prototype_toString,\n  \tunbind: Element_prototype_unbind,\n  \tunrender: Element_prototype_unrender\n  };\n\n  var _Element = Element;\n\n  var deIndent__empty = /^\\s*$/,\n      deIndent__leadingWhitespace = /^\\s*/;\n\n  var deIndent = function (str) {\n  \tvar lines, firstLine, lastLine, minIndent;\n\n  \tlines = str.split(\"\\n\");\n\n  \t// remove first and last line, if they only contain whitespace\n  \tfirstLine = lines[0];\n  \tif (firstLine !== undefined && deIndent__empty.test(firstLine)) {\n  \t\tlines.shift();\n  \t}\n\n  \tlastLine = lastItem(lines);\n  \tif (lastLine !== undefined && deIndent__empty.test(lastLine)) {\n  \t\tlines.pop();\n  \t}\n\n  \tminIndent = lines.reduce(reducer, null);\n\n  \tif (minIndent) {\n  \t\tstr = lines.map(function (line) {\n  \t\t\treturn line.replace(minIndent, \"\");\n  \t\t}).join(\"\\n\");\n  \t}\n\n  \treturn str;\n  };\n\n  function reducer(previous, line) {\n  \tvar lineIndent = deIndent__leadingWhitespace.exec(line)[0];\n\n  \tif (previous === null || lineIndent.length < previous.length) {\n  \t\treturn lineIndent;\n  \t}\n\n  \treturn previous;\n  }\n\n  var Partial_getPartialTemplate = getPartialTemplate;\n\n  function getPartialTemplate(ractive, name, parentFragment) {\n  \tvar partial;\n\n  \t// If the partial in instance or view heirarchy instances, great\n  \tif (partial = getPartialFromRegistry(ractive, name, parentFragment || {})) {\n  \t\treturn partial;\n  \t}\n\n  \t// Does it exist on the page as a script tag?\n  \tpartial = template_parser.fromId(name, { noThrow: true });\n\n  \tif (partial) {\n  \t\t// is this necessary?\n  \t\tpartial = deIndent(partial);\n\n  \t\t// parse and register to this ractive instance\n  \t\tvar parsed = template_parser.parse(partial, template_parser.getParseOptions(ractive));\n\n  \t\t// register (and return main partial if there are others in the template)\n  \t\treturn ractive.partials[name] = parsed.t;\n  \t}\n  }\n\n  function getPartialFromRegistry(ractive, name, parentFragment) {\n  \tvar fn = undefined,\n  \t    partial = findParentPartial(name, parentFragment.owner);\n\n  \t// if there was an instance up-hierarchy, cool\n  \tif (partial) return partial;\n\n  \t// find first instance in the ractive or view hierarchy that has this partial\n  \tvar instance = findInstance(\"partials\", ractive, name);\n\n  \tif (!instance) {\n  \t\treturn;\n  \t}\n\n  \tpartial = instance.partials[name];\n\n  \t// partial is a function?\n  \tif (typeof partial === \"function\") {\n  \t\tfn = partial.bind(instance);\n  \t\tfn.isOwner = instance.partials.hasOwnProperty(name);\n  \t\tpartial = fn.call(ractive, template_parser);\n  \t}\n\n  \tif (!partial && partial !== \"\") {\n  \t\twarnIfDebug(noRegistryFunctionReturn, name, \"partial\", \"partial\", { ractive: ractive });\n  \t\treturn;\n  \t}\n\n  \t// If this was added manually to the registry,\n  \t// but hasn't been parsed, parse it now\n  \tif (!template_parser.isParsed(partial)) {\n\n  \t\t// use the parseOptions of the ractive instance on which it was found\n  \t\tvar parsed = template_parser.parse(partial, template_parser.getParseOptions(instance));\n\n  \t\t// Partials cannot contain nested partials!\n  \t\t// TODO add a test for this\n  \t\tif (parsed.p) {\n  \t\t\twarnIfDebug(\"Partials ({{>%s}}) cannot contain nested inline partials\", name, { ractive: ractive });\n  \t\t}\n\n  \t\t// if fn, use instance to store result, otherwise needs to go\n  \t\t// in the correct point in prototype chain on instance or constructor\n  \t\tvar target = fn ? instance : findOwner(instance, name);\n\n  \t\t// may be a template with partials, which need to be registered and main template extracted\n  \t\ttarget.partials[name] = partial = parsed.t;\n  \t}\n\n  \t// store for reset\n  \tif (fn) {\n  \t\tpartial._fn = fn;\n  \t}\n\n  \treturn partial.v ? partial.t : partial;\n  }\n\n  function findOwner(ractive, key) {\n  \treturn ractive.partials.hasOwnProperty(key) ? ractive : findConstructor(ractive.constructor, key);\n  }\n\n  function findConstructor(constructor, key) {\n  \tif (!constructor) {\n  \t\treturn;\n  \t}\n  \treturn constructor.partials.hasOwnProperty(key) ? constructor : findConstructor(constructor._Parent, key);\n  }\n\n  function findParentPartial(name, parent) {\n  \tif (parent) {\n  \t\tif (parent.template && parent.template.p && parent.template.p[name]) {\n  \t\t\treturn parent.template.p[name];\n  \t\t} else if (parent.parentFragment && parent.parentFragment.owner) {\n  \t\t\treturn findParentPartial(name, parent.parentFragment.owner);\n  \t\t}\n  \t}\n  }\n\n  var applyIndent = function (string, indent) {\n  \tvar indented;\n\n  \tif (!indent) {\n  \t\treturn string;\n  \t}\n\n  \tindented = string.split(\"\\n\").map(function (line, notFirstLine) {\n  \t\treturn notFirstLine ? indent + line : line;\n  \t}).join(\"\\n\");\n\n  \treturn indented;\n  };\n\n  var missingPartialMessage = \"Could not find template for partial \\\"%s\\\"\";\n\n  var Partial = function (options) {\n  \tvar parentFragment, template;\n\n  \tparentFragment = this.parentFragment = options.parentFragment;\n\n  \tthis.root = parentFragment.root;\n  \tthis.type = PARTIAL;\n  \tthis.index = options.index;\n  \tthis.name = options.template.r;\n  \tthis.rendered = false;\n\n  \tthis.fragment = this.fragmentToRender = this.fragmentToUnrender = null;\n\n  \tMustache.init(this, options);\n\n  \t// If this didn't resolve, it most likely means we have a named partial\n  \t// (i.e. `{{>foo}}` means 'use the foo partial', not 'use the partial\n  \t// whose name is the value of `foo`')\n  \tif (!this.keypath) {\n  \t\tif (template = Partial_getPartialTemplate(this.root, this.name, parentFragment)) {\n  \t\t\tshared_unbind.call(this); // prevent any further changes\n  \t\t\tthis.isNamed = true;\n  \t\t\tthis.setTemplate(template);\n  \t\t} else {\n  \t\t\twarnOnceIfDebug(missingPartialMessage, this.name);\n  \t\t}\n  \t}\n  };\n\n  Partial.prototype = {\n  \tbubble: function () {\n  \t\tthis.parentFragment.bubble();\n  \t},\n\n  \tdetach: function () {\n  \t\treturn this.fragment.detach();\n  \t},\n\n  \tfind: function (selector) {\n  \t\treturn this.fragment.find(selector);\n  \t},\n\n  \tfindAll: function (selector, query) {\n  \t\treturn this.fragment.findAll(selector, query);\n  \t},\n\n  \tfindComponent: function (selector) {\n  \t\treturn this.fragment.findComponent(selector);\n  \t},\n\n  \tfindAllComponents: function (selector, query) {\n  \t\treturn this.fragment.findAllComponents(selector, query);\n  \t},\n\n  \tfirstNode: function () {\n  \t\treturn this.fragment.firstNode();\n  \t},\n\n  \tfindNextNode: function () {\n  \t\treturn this.parentFragment.findNextNode(this);\n  \t},\n\n  \tgetPartialName: function () {\n  \t\tif (this.isNamed && this.name) return this.name;else if (this.value === undefined) return this.name;else return this.value;\n  \t},\n\n  \tgetValue: function () {\n  \t\treturn this.fragment.getValue();\n  \t},\n\n  \trebind: function (oldKeypath, newKeypath) {\n  \t\t// named partials aren't bound, so don't rebind\n  \t\tif (!this.isNamed) {\n  \t\t\tMustache_rebind.call(this, oldKeypath, newKeypath);\n  \t\t}\n\n  \t\tif (this.fragment) {\n  \t\t\tthis.fragment.rebind(oldKeypath, newKeypath);\n  \t\t}\n  \t},\n\n  \trender: function () {\n  \t\tthis.docFrag = document.createDocumentFragment();\n  \t\tthis.update();\n\n  \t\tthis.rendered = true;\n  \t\treturn this.docFrag;\n  \t},\n\n  \tresolve: Mustache.resolve,\n\n  \tsetValue: function (value) {\n  \t\tvar template;\n\n  \t\tif (value !== undefined && value === this.value) {\n  \t\t\t// nothing has changed, so no work to be done\n  \t\t\treturn;\n  \t\t}\n\n  \t\tif (value !== undefined) {\n  \t\t\ttemplate = Partial_getPartialTemplate(this.root, \"\" + value, this.parentFragment);\n  \t\t}\n\n  \t\t// we may be here if we have a partial like `{{>foo}}` and `foo` is the\n  \t\t// name of both a data property (whose value ISN'T the name of a partial)\n  \t\t// and a partial. In those cases, this becomes a named partial\n  \t\tif (!template && this.name && (template = Partial_getPartialTemplate(this.root, this.name, this.parentFragment))) {\n  \t\t\tshared_unbind.call(this);\n  \t\t\tthis.isNamed = true;\n  \t\t}\n\n  \t\tif (!template) {\n  \t\t\twarnOnceIfDebug(missingPartialMessage, this.name, { ractive: this.root });\n  \t\t}\n\n  \t\tthis.value = value;\n\n  \t\tthis.setTemplate(template || []);\n\n  \t\tthis.bubble();\n\n  \t\tif (this.rendered) {\n  \t\t\tglobal_runloop.addView(this);\n  \t\t}\n  \t},\n\n  \tsetTemplate: function (template) {\n  \t\tif (this.fragment) {\n  \t\t\tthis.fragment.unbind();\n  \t\t\tif (this.rendered) {\n  \t\t\t\tthis.fragmentToUnrender = this.fragment;\n  \t\t\t}\n  \t\t}\n\n  \t\tthis.fragment = new virtualdom_Fragment({\n  \t\t\ttemplate: template,\n  \t\t\troot: this.root,\n  \t\t\towner: this,\n  \t\t\tpElement: this.parentFragment.pElement\n  \t\t});\n\n  \t\tthis.fragmentToRender = this.fragment;\n  \t},\n\n  \ttoString: function (toString) {\n  \t\tvar string, previousItem, lastLine, match;\n\n  \t\tstring = this.fragment.toString(toString);\n\n  \t\tpreviousItem = this.parentFragment.items[this.index - 1];\n\n  \t\tif (!previousItem || previousItem.type !== TEXT) {\n  \t\t\treturn string;\n  \t\t}\n\n  \t\tlastLine = previousItem.text.split(\"\\n\").pop();\n\n  \t\tif (match = /^\\s+$/.exec(lastLine)) {\n  \t\t\treturn applyIndent(string, match[0]);\n  \t\t}\n\n  \t\treturn string;\n  \t},\n\n  \tunbind: function () {\n  \t\tif (!this.isNamed) {\n  \t\t\t// dynamic partial - need to unbind self\n  \t\t\tshared_unbind.call(this);\n  \t\t}\n\n  \t\tif (this.fragment) {\n  \t\t\tthis.fragment.unbind();\n  \t\t}\n  \t},\n\n  \tunrender: function (shouldDestroy) {\n  \t\tif (this.rendered) {\n  \t\t\tif (this.fragment) {\n  \t\t\t\tthis.fragment.unrender(shouldDestroy);\n  \t\t\t}\n  \t\t\tthis.rendered = false;\n  \t\t}\n  \t},\n\n  \tupdate: function () {\n  \t\tvar target, anchor;\n\n  \t\tif (this.fragmentToUnrender) {\n  \t\t\tthis.fragmentToUnrender.unrender(true);\n  \t\t\tthis.fragmentToUnrender = null;\n  \t\t}\n\n  \t\tif (this.fragmentToRender) {\n  \t\t\tthis.docFrag.appendChild(this.fragmentToRender.render());\n  \t\t\tthis.fragmentToRender = null;\n  \t\t}\n\n  \t\tif (this.rendered) {\n  \t\t\ttarget = this.parentFragment.getNode();\n  \t\t\tanchor = this.parentFragment.findNextNode(this);\n  \t\t\ttarget.insertBefore(this.docFrag, anchor);\n  \t\t}\n  \t}\n  };\n\n  var _Partial = Partial;\n\n  // finds the component constructor in the registry or view hierarchy registries\n\n  var Component_getComponent = getComponent;\n  function getComponent(ractive, name) {\n\n  \tvar Component,\n  \t    instance = findInstance(\"components\", ractive, name);\n\n  \tif (instance) {\n  \t\tComponent = instance.components[name];\n\n  \t\t// best test we have for not Ractive.extend\n  \t\tif (!Component._Parent) {\n  \t\t\t// function option, execute and store for reset\n  \t\t\tvar fn = Component.bind(instance);\n  \t\t\tfn.isOwner = instance.components.hasOwnProperty(name);\n  \t\t\tComponent = fn();\n\n  \t\t\tif (!Component) {\n  \t\t\t\twarnIfDebug(noRegistryFunctionReturn, name, \"component\", \"component\", { ractive: ractive });\n\n  \t\t\t\treturn;\n  \t\t\t}\n\n  \t\t\tif (typeof Component === \"string\") {\n  \t\t\t\t// allow string lookup\n  \t\t\t\tComponent = getComponent(ractive, Component);\n  \t\t\t}\n\n  \t\t\tComponent._fn = fn;\n  \t\t\tinstance.components[name] = Component;\n  \t\t}\n  \t}\n\n  \treturn Component;\n  }\n\n  var Component_prototype_detach = Component$detach;\n  var Component_prototype_detach__detachHook = new hooks_Hook(\"detach\");\n  function Component$detach() {\n  \tvar detached = this.instance.fragment.detach();\n  \tComponent_prototype_detach__detachHook.fire(this.instance);\n  \treturn detached;\n  }\n\n  var Component_prototype_find = Component$find;\n\n  function Component$find(selector) {\n  \treturn this.instance.fragment.find(selector);\n  }\n\n  var Component_prototype_findAll = Component$findAll;\n\n  function Component$findAll(selector, query) {\n  \treturn this.instance.fragment.findAll(selector, query);\n  }\n\n  var Component_prototype_findAllComponents = Component$findAllComponents;\n\n  function Component$findAllComponents(selector, query) {\n  \tquery._test(this, true);\n\n  \tif (this.instance.fragment) {\n  \t\tthis.instance.fragment.findAllComponents(selector, query);\n  \t}\n  }\n\n  var Component_prototype_findComponent = Component$findComponent;\n\n  function Component$findComponent(selector) {\n  \tif (!selector || selector === this.name) {\n  \t\treturn this.instance;\n  \t}\n\n  \tif (this.instance.fragment) {\n  \t\treturn this.instance.fragment.findComponent(selector);\n  \t}\n\n  \treturn null;\n  }\n\n  var Component_prototype_findNextNode = Component$findNextNode;\n\n  function Component$findNextNode() {\n  \treturn this.parentFragment.findNextNode(this);\n  }\n\n  var Component_prototype_firstNode = Component$firstNode;\n\n  function Component$firstNode() {\n  \tif (this.rendered) {\n  \t\treturn this.instance.fragment.firstNode();\n  \t}\n\n  \treturn null;\n  }\n\n  var processWrapper = function (wrapper, array, methodName, newIndices) {\n  \tvar root = wrapper.root;\n  \tvar keypath = wrapper.keypath;\n\n  \tif (!!newIndices) {\n  \t\troot.viewmodel.smartUpdate(keypath, array, newIndices);\n  \t} else {\n  \t\t// If this is a sort or reverse, we just do root.set()...\n  \t\t// TODO use merge logic?\n  \t\troot.viewmodel.mark(keypath);\n  \t}\n  };\n\n  var patchedArrayProto = [],\n      mutatorMethods = [\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"],\n      testObj,\n      patchArrayMethods,\n      unpatchArrayMethods;\n\n  mutatorMethods.forEach(function (methodName) {\n  \tvar method = function () {\n  \t\tfor (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n  \t\t\targs[_key] = arguments[_key];\n  \t\t}\n\n  \t\tvar newIndices, result, wrapper, i;\n\n  \t\tnewIndices = shared_getNewIndices(this, methodName, args);\n\n  \t\t// apply the underlying method\n  \t\tresult = Array.prototype[methodName].apply(this, arguments);\n\n  \t\t// trigger changes\n  \t\tglobal_runloop.start();\n\n  \t\tthis._ractive.setting = true;\n  \t\ti = this._ractive.wrappers.length;\n  \t\twhile (i--) {\n  \t\t\twrapper = this._ractive.wrappers[i];\n\n  \t\t\tglobal_runloop.addRactive(wrapper.root);\n  \t\t\tprocessWrapper(wrapper, this, methodName, newIndices);\n  \t\t}\n\n  \t\tglobal_runloop.end();\n\n  \t\tthis._ractive.setting = false;\n  \t\treturn result;\n  \t};\n\n  \tdefineProperty(patchedArrayProto, methodName, {\n  \t\tvalue: method\n  \t});\n  });\n\n  // can we use prototype chain injection?\n  // http://perfectionkills.com/how-ecmascript-5-still-does-not-allow-to-subclass-an-array/#wrappers_prototype_chain_injection\n  testObj = {};\n\n  if (testObj.__proto__) {\n  \t// yes, we can\n  \tpatchArrayMethods = function (array) {\n  \t\tarray.__proto__ = patchedArrayProto;\n  \t};\n\n  \tunpatchArrayMethods = function (array) {\n  \t\tarray.__proto__ = Array.prototype;\n  \t};\n  } else {\n  \t// no, we can't\n  \tpatchArrayMethods = function (array) {\n  \t\tvar i, methodName;\n\n  \t\ti = mutatorMethods.length;\n  \t\twhile (i--) {\n  \t\t\tmethodName = mutatorMethods[i];\n  \t\t\tdefineProperty(array, methodName, {\n  \t\t\t\tvalue: patchedArrayProto[methodName],\n  \t\t\t\tconfigurable: true\n  \t\t\t});\n  \t\t}\n  \t};\n\n  \tunpatchArrayMethods = function (array) {\n  \t\tvar i;\n\n  \t\ti = mutatorMethods.length;\n  \t\twhile (i--) {\n  \t\t\tdelete array[mutatorMethods[i]];\n  \t\t}\n  \t};\n  }\n\n  patchArrayMethods.unpatch = unpatchArrayMethods;\n  var patch = patchArrayMethods;\n\n  var arrayAdaptor,\n\n  // helpers\n  ArrayWrapper, array_index__errorMessage;\n\n  arrayAdaptor = {\n  \tfilter: function (object) {\n  \t\t// wrap the array if a) b) it's an array, and b) either it hasn't been wrapped already,\n  \t\t// or the array didn't trigger the get() itself\n  \t\treturn isArray(object) && (!object._ractive || !object._ractive.setting);\n  \t},\n  \twrap: function (ractive, array, keypath) {\n  \t\treturn new ArrayWrapper(ractive, array, keypath);\n  \t}\n  };\n\n  ArrayWrapper = function (ractive, array, keypath) {\n  \tthis.root = ractive;\n  \tthis.value = array;\n  \tthis.keypath = getKeypath(keypath);\n\n  \t// if this array hasn't already been ractified, ractify it\n  \tif (!array._ractive) {\n\n  \t\t// define a non-enumerable _ractive property to store the wrappers\n  \t\tdefineProperty(array, \"_ractive\", {\n  \t\t\tvalue: {\n  \t\t\t\twrappers: [],\n  \t\t\t\tinstances: [],\n  \t\t\t\tsetting: false\n  \t\t\t},\n  \t\t\tconfigurable: true\n  \t\t});\n\n  \t\tpatch(array);\n  \t}\n\n  \t// store the ractive instance, so we can handle transitions later\n  \tif (!array._ractive.instances[ractive._guid]) {\n  \t\tarray._ractive.instances[ractive._guid] = 0;\n  \t\tarray._ractive.instances.push(ractive);\n  \t}\n\n  \tarray._ractive.instances[ractive._guid] += 1;\n  \tarray._ractive.wrappers.push(this);\n  };\n\n  ArrayWrapper.prototype = {\n  \tget: function () {\n  \t\treturn this.value;\n  \t},\n  \tteardown: function () {\n  \t\tvar array, storage, wrappers, instances, index;\n\n  \t\tarray = this.value;\n  \t\tstorage = array._ractive;\n  \t\twrappers = storage.wrappers;\n  \t\tinstances = storage.instances;\n\n  \t\t// if teardown() was invoked because we're clearing the cache as a result of\n  \t\t// a change that the array itself triggered, we can save ourselves the teardown\n  \t\t// and immediate setup\n  \t\tif (storage.setting) {\n  \t\t\treturn false; // so that we don't remove it from this.root.viewmodel.wrapped\n  \t\t}\n\n  \t\tindex = wrappers.indexOf(this);\n  \t\tif (index === -1) {\n  \t\t\tthrow new Error(array_index__errorMessage);\n  \t\t}\n\n  \t\twrappers.splice(index, 1);\n\n  \t\t// if nothing else depends on this array, we can revert it to its\n  \t\t// natural state\n  \t\tif (!wrappers.length) {\n  \t\t\tdelete array._ractive;\n  \t\t\tpatch.unpatch(this.value);\n  \t\t} else {\n  \t\t\t// remove ractive instance if possible\n  \t\t\tinstances[this.root._guid] -= 1;\n  \t\t\tif (!instances[this.root._guid]) {\n  \t\t\t\tindex = instances.indexOf(this.root);\n\n  \t\t\t\tif (index === -1) {\n  \t\t\t\t\tthrow new Error(array_index__errorMessage);\n  \t\t\t\t}\n\n  \t\t\t\tinstances.splice(index, 1);\n  \t\t\t}\n  \t\t}\n  \t}\n  };\n\n  array_index__errorMessage = \"Something went wrong in a rather interesting way\";\n  var array_index = arrayAdaptor;\n\n  var numeric = /^\\s*[0-9]+\\s*$/;\n\n  var createBranch = function (key) {\n  \treturn numeric.test(key) ? [] : {};\n  };\n\n  var magicAdaptor, MagicWrapper;\n\n  try {\n  \tObject.defineProperty({}, \"test\", { value: 0 });\n\n  \tmagicAdaptor = {\n  \t\tfilter: function (object, keypath, ractive) {\n  \t\t\tvar parentWrapper, parentValue;\n\n  \t\t\tif (!keypath) {\n  \t\t\t\treturn false;\n  \t\t\t}\n\n  \t\t\tkeypath = getKeypath(keypath);\n\n  \t\t\t// If the parent value is a wrapper, other than a magic wrapper,\n  \t\t\t// we shouldn't wrap this property\n  \t\t\tif ((parentWrapper = ractive.viewmodel.wrapped[keypath.parent.str]) && !parentWrapper.magic) {\n  \t\t\t\treturn false;\n  \t\t\t}\n\n  \t\t\tparentValue = ractive.viewmodel.get(keypath.parent);\n\n  \t\t\t// if parentValue is an array that doesn't include this member,\n  \t\t\t// we should return false otherwise lengths will get messed up\n  \t\t\tif (isArray(parentValue) && /^[0-9]+$/.test(keypath.lastKey)) {\n  \t\t\t\treturn false;\n  \t\t\t}\n\n  \t\t\treturn parentValue && (typeof parentValue === \"object\" || typeof parentValue === \"function\");\n  \t\t},\n  \t\twrap: function (ractive, property, keypath) {\n  \t\t\treturn new MagicWrapper(ractive, property, keypath);\n  \t\t}\n  \t};\n\n  \tMagicWrapper = function (ractive, value, keypath) {\n  \t\tvar objKeypath, template, siblings;\n\n  \t\tkeypath = getKeypath(keypath);\n\n  \t\tthis.magic = true;\n\n  \t\tthis.ractive = ractive;\n  \t\tthis.keypath = keypath;\n  \t\tthis.value = value;\n\n  \t\tthis.prop = keypath.lastKey;\n\n  \t\tobjKeypath = keypath.parent;\n  \t\tthis.obj = objKeypath.isRoot ? ractive.viewmodel.data : ractive.viewmodel.get(objKeypath);\n\n  \t\ttemplate = this.originalDescriptor = Object.getOwnPropertyDescriptor(this.obj, this.prop);\n\n  \t\t// Has this property already been wrapped?\n  \t\tif (template && template.set && (siblings = template.set._ractiveWrappers)) {\n\n  \t\t\t// Yes. Register this wrapper to this property, if it hasn't been already\n  \t\t\tif (siblings.indexOf(this) === -1) {\n  \t\t\t\tsiblings.push(this);\n  \t\t\t}\n\n  \t\t\treturn; // already wrapped\n  \t\t}\n\n  \t\t// No, it hasn't been wrapped\n  \t\tcreateAccessors(this, value, template);\n  \t};\n\n  \tMagicWrapper.prototype = {\n  \t\tget: function () {\n  \t\t\treturn this.value;\n  \t\t},\n  \t\treset: function (value) {\n  \t\t\tif (this.updating) {\n  \t\t\t\treturn;\n  \t\t\t}\n\n  \t\t\tthis.updating = true;\n  \t\t\tthis.obj[this.prop] = value; // trigger set() accessor\n  \t\t\tglobal_runloop.addRactive(this.ractive);\n  \t\t\tthis.ractive.viewmodel.mark(this.keypath, { keepExistingWrapper: true });\n  \t\t\tthis.updating = false;\n  \t\t\treturn true;\n  \t\t},\n  \t\tset: function (key, value) {\n  \t\t\tif (this.updating) {\n  \t\t\t\treturn;\n  \t\t\t}\n\n  \t\t\tif (!this.obj[this.prop]) {\n  \t\t\t\tthis.updating = true;\n  \t\t\t\tthis.obj[this.prop] = createBranch(key);\n  \t\t\t\tthis.updating = false;\n  \t\t\t}\n\n  \t\t\tthis.obj[this.prop][key] = value;\n  \t\t},\n  \t\tteardown: function () {\n  \t\t\tvar template, set, value, wrappers, index;\n\n  \t\t\t// If this method was called because the cache was being cleared as a\n  \t\t\t// result of a set()/update() call made by this wrapper, we return false\n  \t\t\t// so that it doesn't get torn down\n  \t\t\tif (this.updating) {\n  \t\t\t\treturn false;\n  \t\t\t}\n\n  \t\t\ttemplate = Object.getOwnPropertyDescriptor(this.obj, this.prop);\n  \t\t\tset = template && template.set;\n\n  \t\t\tif (!set) {\n  \t\t\t\t// most likely, this was an array member that was spliced out\n  \t\t\t\treturn;\n  \t\t\t}\n\n  \t\t\twrappers = set._ractiveWrappers;\n\n  \t\t\tindex = wrappers.indexOf(this);\n  \t\t\tif (index !== -1) {\n  \t\t\t\twrappers.splice(index, 1);\n  \t\t\t}\n\n  \t\t\t// Last one out, turn off the lights\n  \t\t\tif (!wrappers.length) {\n  \t\t\t\tvalue = this.obj[this.prop];\n\n  \t\t\t\tObject.defineProperty(this.obj, this.prop, this.originalDescriptor || {\n  \t\t\t\t\twritable: true,\n  \t\t\t\t\tenumerable: true,\n  \t\t\t\t\tconfigurable: true\n  \t\t\t\t});\n\n  \t\t\t\tthis.obj[this.prop] = value;\n  \t\t\t}\n  \t\t}\n  \t};\n  } catch (err) {\n  \tmagicAdaptor = false; // no magic in this browser\n  }\n\n  var adaptors_magic = magicAdaptor;\n\n  function createAccessors(originalWrapper, value, template) {\n\n  \tvar object, property, oldGet, oldSet, get, set;\n\n  \tobject = originalWrapper.obj;\n  \tproperty = originalWrapper.prop;\n\n  \t// Is this template configurable?\n  \tif (template && !template.configurable) {\n  \t\t// Special case - array length\n  \t\tif (property === \"length\") {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tthrow new Error(\"Cannot use magic mode with property \\\"\" + property + \"\\\" - object is not configurable\");\n  \t}\n\n  \t// Time to wrap this property\n  \tif (template) {\n  \t\toldGet = template.get;\n  \t\toldSet = template.set;\n  \t}\n\n  \tget = oldGet || function () {\n  \t\treturn value;\n  \t};\n\n  \tset = function (v) {\n  \t\tif (oldSet) {\n  \t\t\toldSet(v);\n  \t\t}\n\n  \t\tvalue = oldGet ? oldGet() : v;\n  \t\tset._ractiveWrappers.forEach(updateWrapper);\n  \t};\n\n  \tfunction updateWrapper(wrapper) {\n  \t\tvar keypath, ractive;\n\n  \t\twrapper.value = value;\n\n  \t\tif (wrapper.updating) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tractive = wrapper.ractive;\n  \t\tkeypath = wrapper.keypath;\n\n  \t\twrapper.updating = true;\n  \t\tglobal_runloop.start(ractive);\n\n  \t\tractive.viewmodel.mark(keypath);\n\n  \t\tglobal_runloop.end();\n  \t\twrapper.updating = false;\n  \t}\n\n  \t// Create an array of wrappers, in case other keypaths/ractives depend on this property.\n  \t// Handily, we can store them as a property of the set function. Yay JavaScript.\n  \tset._ractiveWrappers = [originalWrapper];\n  \tObject.defineProperty(object, property, { get: get, set: set, enumerable: true, configurable: true });\n  }\n\n  var magicArrayAdaptor, MagicArrayWrapper;\n\n  if (adaptors_magic) {\n  \tmagicArrayAdaptor = {\n  \t\tfilter: function (object, keypath, ractive) {\n  \t\t\treturn adaptors_magic.filter(object, keypath, ractive) && array_index.filter(object);\n  \t\t},\n\n  \t\twrap: function (ractive, array, keypath) {\n  \t\t\treturn new MagicArrayWrapper(ractive, array, keypath);\n  \t\t}\n  \t};\n\n  \tMagicArrayWrapper = function (ractive, array, keypath) {\n  \t\tthis.value = array;\n\n  \t\tthis.magic = true;\n\n  \t\tthis.magicWrapper = adaptors_magic.wrap(ractive, array, keypath);\n  \t\tthis.arrayWrapper = array_index.wrap(ractive, array, keypath);\n  \t};\n\n  \tMagicArrayWrapper.prototype = {\n  \t\tget: function () {\n  \t\t\treturn this.value;\n  \t\t},\n  \t\tteardown: function () {\n  \t\t\tthis.arrayWrapper.teardown();\n  \t\t\tthis.magicWrapper.teardown();\n  \t\t},\n  \t\treset: function (value) {\n  \t\t\treturn this.magicWrapper.reset(value);\n  \t\t}\n  \t};\n  }\n\n  var magicArray = magicArrayAdaptor;\n\n  var prototype_adapt = Viewmodel$adapt;\n\n  var prefixers = {};\n  function Viewmodel$adapt(keypath, value) {\n  \tvar len, i, adaptor, wrapped;\n\n  \tif (!this.adaptors) return;\n\n  \t// Do we have an adaptor for this value?\n  \tlen = this.adaptors.length;\n  \tfor (i = 0; i < len; i += 1) {\n  \t\tadaptor = this.adaptors[i];\n\n  \t\tif (adaptor.filter(value, keypath, this.ractive)) {\n  \t\t\twrapped = this.wrapped[keypath] = adaptor.wrap(this.ractive, value, keypath, getPrefixer(keypath));\n  \t\t\twrapped.value = value;\n  \t\t\treturn;\n  \t\t}\n  \t}\n  }\n\n  function prefixKeypath(obj, prefix) {\n  \tvar prefixed = {},\n  \t    key;\n\n  \tif (!prefix) {\n  \t\treturn obj;\n  \t}\n\n  \tprefix += \".\";\n\n  \tfor (key in obj) {\n  \t\tif (obj.hasOwnProperty(key)) {\n  \t\t\tprefixed[prefix + key] = obj[key];\n  \t\t}\n  \t}\n\n  \treturn prefixed;\n  }\n\n  function getPrefixer(rootKeypath) {\n  \tvar rootDot;\n\n  \tif (!prefixers[rootKeypath]) {\n  \t\trootDot = rootKeypath ? rootKeypath + \".\" : \"\";\n\n  \t\tprefixers[rootKeypath] = function (relativeKeypath, value) {\n  \t\t\tvar obj;\n\n  \t\t\tif (typeof relativeKeypath === \"string\") {\n  \t\t\t\tobj = {};\n  \t\t\t\tobj[rootDot + relativeKeypath] = value;\n  \t\t\t\treturn obj;\n  \t\t\t}\n\n  \t\t\tif (typeof relativeKeypath === \"object\") {\n  \t\t\t\t// 'relativeKeypath' is in fact a hash, not a keypath\n  \t\t\t\treturn rootDot ? prefixKeypath(relativeKeypath, rootKeypath) : relativeKeypath;\n  \t\t\t}\n  \t\t};\n  \t}\n\n  \treturn prefixers[rootKeypath];\n  }\n\n  // TEMP\n\n  var helpers_getUpstreamChanges = getUpstreamChanges;\n  function getUpstreamChanges(changes) {\n  \tvar upstreamChanges = [rootKeypath],\n  \t    i,\n  \t    keypath;\n\n  \ti = changes.length;\n  \twhile (i--) {\n  \t\tkeypath = changes[i].parent;\n\n  \t\twhile (keypath && !keypath.isRoot) {\n  \t\t\tif (changes.indexOf(keypath) === -1) {\n  \t\t\t\taddToArray(upstreamChanges, keypath);\n  \t\t\t}\n  \t\t\tkeypath = keypath.parent;\n  \t\t}\n  \t}\n\n  \treturn upstreamChanges;\n  }\n\n  var applyChanges_notifyPatternObservers = notifyPatternObservers;\n\n  function notifyPatternObservers(viewmodel, keypath, onlyDirect) {\n  \tvar potentialWildcardMatches;\n\n  \tupdateMatchingPatternObservers(viewmodel, keypath);\n\n  \tif (onlyDirect) {\n  \t\treturn;\n  \t}\n\n  \tpotentialWildcardMatches = keypath.wildcardMatches();\n  \tpotentialWildcardMatches.forEach(function (upstreamPattern) {\n  \t\tcascade(viewmodel, upstreamPattern, keypath);\n  \t});\n  }\n\n  function cascade(viewmodel, upstreamPattern, keypath) {\n  \tvar group, map, actualChildKeypath;\n\n  \t// TODO should be one or the other\n  \tupstreamPattern = upstreamPattern.str || upstreamPattern;\n\n  \tgroup = viewmodel.depsMap.patternObservers;\n  \tmap = group && group[upstreamPattern];\n\n  \tif (!map) {\n  \t\treturn;\n  \t}\n\n  \tmap.forEach(function (childKeypath) {\n  \t\tactualChildKeypath = keypath.join(childKeypath.lastKey); // 'foo.bar.baz'\n\n  \t\tupdateMatchingPatternObservers(viewmodel, actualChildKeypath);\n  \t\tcascade(viewmodel, childKeypath, actualChildKeypath);\n  \t});\n  }\n\n  function updateMatchingPatternObservers(viewmodel, keypath) {\n  \tviewmodel.patternObservers.forEach(function (observer) {\n  \t\tif (observer.regex.test(keypath.str)) {\n  \t\t\tobserver.update(keypath);\n  \t\t}\n  \t});\n  }\n\n  var applyChanges = Viewmodel$applyChanges;\n\n  function Viewmodel$applyChanges() {\n  \tvar _this = this;\n\n  \tvar self = this,\n  \t    changes,\n  \t    upstreamChanges,\n  \t    hash = {},\n  \t    bindings;\n\n  \tchanges = this.changes;\n\n  \tif (!changes.length) {\n  \t\t// TODO we end up here on initial render. Perhaps we shouldn't?\n  \t\treturn;\n  \t}\n\n  \tfunction invalidateComputation(computation) {\n  \t\tvar key = computation.key;\n\n  \t\tif (computation.viewmodel === self) {\n  \t\t\tself.clearCache(key.str);\n  \t\t\tcomputation.invalidate();\n\n  \t\t\tchanges.push(key);\n  \t\t\tcascade(key);\n  \t\t} else {\n  \t\t\tcomputation.viewmodel.mark(key);\n  \t\t}\n  \t}\n\n  \tfunction cascade(keypath) {\n  \t\tvar map, computations;\n\n  \t\tif (self.noCascade.hasOwnProperty(keypath.str)) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tif (computations = self.deps.computed[keypath.str]) {\n  \t\t\tcomputations.forEach(invalidateComputation);\n  \t\t}\n\n  \t\tif (map = self.depsMap.computed[keypath.str]) {\n  \t\t\tmap.forEach(cascade);\n  \t\t}\n  \t}\n\n  \tchanges.slice().forEach(cascade);\n\n  \tupstreamChanges = helpers_getUpstreamChanges(changes);\n  \tupstreamChanges.forEach(function (keypath) {\n  \t\tvar computations;\n\n  \t\t// make sure we haven't already been down this particular keypath in this turn\n  \t\tif (changes.indexOf(keypath) === -1 && (computations = self.deps.computed[keypath.str])) {\n  \t\t\tcomputations.forEach(invalidateComputation);\n  \t\t}\n  \t});\n\n  \tthis.changes = [];\n\n  \t// Pattern observers are a weird special case\n  \tif (this.patternObservers.length) {\n  \t\tupstreamChanges.forEach(function (keypath) {\n  \t\t\treturn applyChanges_notifyPatternObservers(_this, keypath, true);\n  \t\t});\n  \t\tchanges.forEach(function (keypath) {\n  \t\t\treturn applyChanges_notifyPatternObservers(_this, keypath);\n  \t\t});\n  \t}\n\n  \tif (this.deps.observers) {\n  \t\tupstreamChanges.forEach(function (keypath) {\n  \t\t\treturn notifyUpstreamDependants(_this, null, keypath, \"observers\");\n  \t\t});\n  \t\tnotifyAllDependants(this, changes, \"observers\");\n  \t}\n\n  \tif (this.deps[\"default\"]) {\n  \t\tbindings = [];\n  \t\tupstreamChanges.forEach(function (keypath) {\n  \t\t\treturn notifyUpstreamDependants(_this, bindings, keypath, \"default\");\n  \t\t});\n\n  \t\tif (bindings.length) {\n  \t\t\tnotifyBindings(this, bindings, changes);\n  \t\t}\n\n  \t\tnotifyAllDependants(this, changes, \"default\");\n  \t}\n\n  \t// Return a hash of keypaths to updated values\n  \tchanges.forEach(function (keypath) {\n  \t\thash[keypath.str] = _this.get(keypath);\n  \t});\n\n  \tthis.implicitChanges = {};\n  \tthis.noCascade = {};\n\n  \treturn hash;\n  }\n\n  function notifyUpstreamDependants(viewmodel, bindings, keypath, groupName) {\n  \tvar dependants, value;\n\n  \tif (dependants = findDependants(viewmodel, keypath, groupName)) {\n  \t\tvalue = viewmodel.get(keypath);\n\n  \t\tdependants.forEach(function (d) {\n  \t\t\t// don't \"set\" the parent value, refine it\n  \t\t\t// i.e. not data = value, but data[foo] = fooValue\n  \t\t\tif (bindings && d.refineValue) {\n  \t\t\t\tbindings.push(d);\n  \t\t\t} else {\n  \t\t\t\td.setValue(value);\n  \t\t\t}\n  \t\t});\n  \t}\n  }\n\n  function notifyBindings(viewmodel, bindings, changes) {\n\n  \tbindings.forEach(function (binding) {\n  \t\tvar useSet = false,\n  \t\t    i = 0,\n  \t\t    length = changes.length,\n  \t\t    refinements = [];\n\n  \t\twhile (i < length) {\n  \t\t\tvar keypath = changes[i];\n\n  \t\t\tif (keypath === binding.keypath) {\n  \t\t\t\tuseSet = true;\n  \t\t\t\tbreak;\n  \t\t\t}\n\n  \t\t\tif (keypath.slice(0, binding.keypath.length) === binding.keypath) {\n  \t\t\t\trefinements.push(keypath);\n  \t\t\t}\n\n  \t\t\ti++;\n  \t\t}\n\n  \t\tif (useSet) {\n  \t\t\tbinding.setValue(viewmodel.get(binding.keypath));\n  \t\t}\n\n  \t\tif (refinements.length) {\n  \t\t\tbinding.refineValue(refinements);\n  \t\t}\n  \t});\n  }\n\n  function notifyAllDependants(viewmodel, keypaths, groupName) {\n  \tvar queue = [];\n\n  \taddKeypaths(keypaths);\n  \tqueue.forEach(dispatch);\n\n  \tfunction addKeypaths(keypaths) {\n  \t\tkeypaths.forEach(addKeypath);\n  \t\tkeypaths.forEach(cascade);\n  \t}\n\n  \tfunction addKeypath(keypath) {\n  \t\tvar deps = findDependants(viewmodel, keypath, groupName);\n\n  \t\tif (deps) {\n  \t\t\tqueue.push({\n  \t\t\t\tkeypath: keypath,\n  \t\t\t\tdeps: deps\n  \t\t\t});\n  \t\t}\n  \t}\n\n  \tfunction cascade(keypath) {\n  \t\tvar childDeps;\n\n  \t\tif (childDeps = viewmodel.depsMap[groupName][keypath.str]) {\n  \t\t\taddKeypaths(childDeps);\n  \t\t}\n  \t}\n\n  \tfunction dispatch(set) {\n  \t\tvar value = viewmodel.get(set.keypath);\n  \t\tset.deps.forEach(function (d) {\n  \t\t\treturn d.setValue(value);\n  \t\t});\n  \t}\n  }\n\n  function findDependants(viewmodel, keypath, groupName) {\n  \tvar group = viewmodel.deps[groupName];\n  \treturn group ? group[keypath.str] : null;\n  }\n\n  var capture = Viewmodel$capture;\n\n  function Viewmodel$capture() {\n  \tthis.captureGroups.push([]);\n  }\n\n  var clearCache = Viewmodel$clearCache;\n\n  function Viewmodel$clearCache(keypath, keepExistingWrapper) {\n  \tvar cacheMap, wrapper;\n\n  \tif (!keepExistingWrapper) {\n  \t\t// Is there a wrapped property at this keypath?\n  \t\tif (wrapper = this.wrapped[keypath]) {\n  \t\t\t// Did we unwrap it?\n  \t\t\tif (wrapper.teardown() !== false) {\n  \t\t\t\t// Is this right?\n  \t\t\t\t// What's the meaning of returning false from teardown?\n  \t\t\t\t// Could there be a GC ramification if this is a \"real\" ractive.teardown()?\n  \t\t\t\tthis.wrapped[keypath] = null;\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \tthis.cache[keypath] = undefined;\n\n  \tif (cacheMap = this.cacheMap[keypath]) {\n  \t\twhile (cacheMap.length) {\n  \t\t\tthis.clearCache(cacheMap.pop());\n  \t\t}\n  \t}\n  }\n\n  var UnresolvedDependency = function (computation, ref) {\n  \tthis.computation = computation;\n  \tthis.viewmodel = computation.viewmodel;\n  \tthis.ref = ref;\n\n  \t// TODO this seems like a red flag!\n  \tthis.root = this.viewmodel.ractive;\n  \tthis.parentFragment = this.root.component && this.root.component.parentFragment;\n  };\n\n  UnresolvedDependency.prototype = {\n  \tresolve: function (keypath) {\n  \t\tthis.computation.softDeps.push(keypath);\n  \t\tthis.computation.unresolvedDeps[keypath.str] = null;\n  \t\tthis.viewmodel.register(keypath, this.computation, \"computed\");\n  \t}\n  };\n\n  var Computation_UnresolvedDependency = UnresolvedDependency;\n\n  var Computation = function (key, signature) {\n  \tthis.key = key;\n\n  \tthis.getter = signature.getter;\n  \tthis.setter = signature.setter;\n\n  \tthis.hardDeps = signature.deps || [];\n  \tthis.softDeps = [];\n  \tthis.unresolvedDeps = {};\n\n  \tthis.depValues = {};\n\n  \tthis._dirty = this._firstRun = true;\n  };\n\n  Computation.prototype = {\n  \tconstructor: Computation,\n\n  \tinit: function (viewmodel) {\n  \t\tvar _this = this;\n\n  \t\tvar initial;\n\n  \t\tthis.viewmodel = viewmodel;\n  \t\tthis.bypass = true;\n\n  \t\tinitial = viewmodel.get(this.key);\n  \t\tviewmodel.clearCache(this.key.str);\n\n  \t\tthis.bypass = false;\n\n  \t\tif (this.setter && initial !== undefined) {\n  \t\t\tthis.set(initial);\n  \t\t}\n\n  \t\tif (this.hardDeps) {\n  \t\t\tthis.hardDeps.forEach(function (d) {\n  \t\t\t\treturn viewmodel.register(d, _this, \"computed\");\n  \t\t\t});\n  \t\t}\n  \t},\n\n  \tinvalidate: function () {\n  \t\tthis._dirty = true;\n  \t},\n\n  \tget: function () {\n  \t\tvar _this = this;\n\n  \t\tvar newDeps,\n  \t\t    dependenciesChanged,\n  \t\t    dependencyValuesChanged = false;\n\n  \t\tif (this.getting) {\n  \t\t\t// prevent double-computation (e.g. caused by array mutation inside computation)\n  \t\t\tvar msg = \"The \" + this.key.str + \" computation indirectly called itself. This probably indicates a bug in the computation. It is commonly caused by `array.sort(...)` - if that's the case, clone the array first with `array.slice().sort(...)`\";\n  \t\t\twarnOnce(msg);\n  \t\t\treturn this.value;\n  \t\t}\n\n  \t\tthis.getting = true;\n\n  \t\tif (this._dirty) {\n  \t\t\t// determine whether the inputs have changed, in case this depends on\n  \t\t\t// other computed values\n  \t\t\tif (this._firstRun || !this.hardDeps.length && !this.softDeps.length) {\n  \t\t\t\tdependencyValuesChanged = true;\n  \t\t\t} else {\n  \t\t\t\t[this.hardDeps, this.softDeps].forEach(function (deps) {\n  \t\t\t\t\tvar keypath, value, i;\n\n  \t\t\t\t\tif (dependencyValuesChanged) {\n  \t\t\t\t\t\treturn;\n  \t\t\t\t\t}\n\n  \t\t\t\t\ti = deps.length;\n  \t\t\t\t\twhile (i--) {\n  \t\t\t\t\t\tkeypath = deps[i];\n  \t\t\t\t\t\tvalue = _this.viewmodel.get(keypath);\n\n  \t\t\t\t\t\tif (!isEqual(value, _this.depValues[keypath.str])) {\n  \t\t\t\t\t\t\t_this.depValues[keypath.str] = value;\n  \t\t\t\t\t\t\tdependencyValuesChanged = true;\n\n  \t\t\t\t\t\t\treturn;\n  \t\t\t\t\t\t}\n  \t\t\t\t\t}\n  \t\t\t\t});\n  \t\t\t}\n\n  \t\t\tif (dependencyValuesChanged) {\n  \t\t\t\tthis.viewmodel.capture();\n\n  \t\t\t\ttry {\n  \t\t\t\t\tthis.value = this.getter();\n  \t\t\t\t} catch (err) {\n  \t\t\t\t\twarnIfDebug(\"Failed to compute \\\"%s\\\"\", this.key.str);\n  \t\t\t\t\tlogIfDebug(err.stack || err);\n\n  \t\t\t\t\tthis.value = void 0;\n  \t\t\t\t}\n\n  \t\t\t\tnewDeps = this.viewmodel.release();\n  \t\t\t\tdependenciesChanged = this.updateDependencies(newDeps);\n\n  \t\t\t\tif (dependenciesChanged) {\n  \t\t\t\t\t[this.hardDeps, this.softDeps].forEach(function (deps) {\n  \t\t\t\t\t\tdeps.forEach(function (keypath) {\n  \t\t\t\t\t\t\t_this.depValues[keypath.str] = _this.viewmodel.get(keypath);\n  \t\t\t\t\t\t});\n  \t\t\t\t\t});\n  \t\t\t\t}\n  \t\t\t}\n\n  \t\t\tthis._dirty = false;\n  \t\t}\n\n  \t\tthis.getting = this._firstRun = false;\n  \t\treturn this.value;\n  \t},\n\n  \tset: function (value) {\n  \t\tif (this.setting) {\n  \t\t\tthis.value = value;\n  \t\t\treturn;\n  \t\t}\n\n  \t\tif (!this.setter) {\n  \t\t\tthrow new Error(\"Computed properties without setters are read-only. (This may change in a future version of Ractive!)\");\n  \t\t}\n\n  \t\tthis.setter(value);\n  \t},\n\n  \tupdateDependencies: function (newDeps) {\n  \t\tvar i, oldDeps, keypath, dependenciesChanged, unresolved;\n\n  \t\toldDeps = this.softDeps;\n\n  \t\t// remove dependencies that are no longer used\n  \t\ti = oldDeps.length;\n  \t\twhile (i--) {\n  \t\t\tkeypath = oldDeps[i];\n\n  \t\t\tif (newDeps.indexOf(keypath) === -1) {\n  \t\t\t\tdependenciesChanged = true;\n  \t\t\t\tthis.viewmodel.unregister(keypath, this, \"computed\");\n  \t\t\t}\n  \t\t}\n\n  \t\t// create references for any new dependencies\n  \t\ti = newDeps.length;\n  \t\twhile (i--) {\n  \t\t\tkeypath = newDeps[i];\n\n  \t\t\tif (oldDeps.indexOf(keypath) === -1 && (!this.hardDeps || this.hardDeps.indexOf(keypath) === -1)) {\n  \t\t\t\tdependenciesChanged = true;\n\n  \t\t\t\t// if this keypath is currently unresolved, we need to mark\n  \t\t\t\t// it as such. TODO this is a bit muddy...\n  \t\t\t\tif (isUnresolved(this.viewmodel, keypath) && !this.unresolvedDeps[keypath.str]) {\n  \t\t\t\t\tunresolved = new Computation_UnresolvedDependency(this, keypath.str);\n  \t\t\t\t\tnewDeps.splice(i, 1);\n\n  \t\t\t\t\tthis.unresolvedDeps[keypath.str] = unresolved;\n  \t\t\t\t\tglobal_runloop.addUnresolved(unresolved);\n  \t\t\t\t} else {\n  \t\t\t\t\tthis.viewmodel.register(keypath, this, \"computed\");\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n\n  \t\tif (dependenciesChanged) {\n  \t\t\tthis.softDeps = newDeps.slice();\n  \t\t}\n\n  \t\treturn dependenciesChanged;\n  \t}\n  };\n\n  function isUnresolved(viewmodel, keypath) {\n  \tvar key = keypath.firstKey;\n\n  \treturn !(key in viewmodel.data) && !(key in viewmodel.computations) && !(key in viewmodel.mappings);\n  }\n\n  var Computation_Computation = Computation;\n\n  var compute = Viewmodel$compute;\n  function Viewmodel$compute(key, signature) {\n  \tvar computation = new Computation_Computation(key, signature);\n\n  \tif (this.ready) {\n  \t\tcomputation.init(this);\n  \t}\n\n  \treturn this.computations[key.str] = computation;\n  }\n\n  var FAILED_LOOKUP = { FAILED_LOOKUP: true };\n\n  var viewmodel_prototype_get = Viewmodel$get;\n\n  var viewmodel_prototype_get__empty = {};\n  function Viewmodel$get(keypath, options) {\n  \tvar cache = this.cache,\n  \t    value,\n  \t    computation,\n  \t    wrapped,\n  \t    captureGroup,\n  \t    keypathStr = keypath.str,\n  \t    key;\n\n  \toptions = options || viewmodel_prototype_get__empty;\n\n  \t// capture the keypath, if we're inside a computation\n  \tif (options.capture && (captureGroup = lastItem(this.captureGroups))) {\n  \t\tif (! ~captureGroup.indexOf(keypath)) {\n  \t\t\tcaptureGroup.push(keypath);\n  \t\t}\n  \t}\n\n  \tif (hasOwn.call(this.mappings, keypath.firstKey)) {\n  \t\treturn this.mappings[keypath.firstKey].get(keypath, options);\n  \t}\n\n  \tif (keypath.isSpecial) {\n  \t\treturn keypath.value;\n  \t}\n\n  \tif (cache[keypathStr] === undefined) {\n\n  \t\t// Is this a computed property?\n  \t\tif ((computation = this.computations[keypathStr]) && !computation.bypass) {\n  \t\t\tvalue = computation.get();\n  \t\t\tthis.adapt(keypathStr, value);\n  \t\t}\n\n  \t\t// Is this a wrapped property?\n  \t\telse if (wrapped = this.wrapped[keypathStr]) {\n  \t\t\tvalue = wrapped.value;\n  \t\t}\n\n  \t\t// Is it the root?\n  \t\telse if (keypath.isRoot) {\n  \t\t\tthis.adapt(\"\", this.data);\n  \t\t\tvalue = this.data;\n  \t\t}\n\n  \t\t// No? Then we need to retrieve the value one key at a time\n  \t\telse {\n  \t\t\tvalue = retrieve(this, keypath);\n  \t\t}\n\n  \t\tcache[keypathStr] = value;\n  \t} else {\n  \t\tvalue = cache[keypathStr];\n  \t}\n\n  \tif (!options.noUnwrap && (wrapped = this.wrapped[keypathStr])) {\n  \t\tvalue = wrapped.get();\n  \t}\n\n  \tif (keypath.isRoot && options.fullRootGet) {\n  \t\tfor (key in this.mappings) {\n  \t\t\tvalue[key] = this.mappings[key].getValue();\n  \t\t}\n  \t}\n\n  \treturn value === FAILED_LOOKUP ? void 0 : value;\n  }\n\n  function retrieve(viewmodel, keypath) {\n\n  \tvar parentValue, cacheMap, value, wrapped;\n\n  \tparentValue = viewmodel.get(keypath.parent);\n\n  \tif (wrapped = viewmodel.wrapped[keypath.parent.str]) {\n  \t\tparentValue = wrapped.get();\n  \t}\n\n  \tif (parentValue === null || parentValue === undefined) {\n  \t\treturn;\n  \t}\n\n  \t// update cache map\n  \tif (!(cacheMap = viewmodel.cacheMap[keypath.parent.str])) {\n  \t\tviewmodel.cacheMap[keypath.parent.str] = [keypath.str];\n  \t} else {\n  \t\tif (cacheMap.indexOf(keypath.str) === -1) {\n  \t\t\tcacheMap.push(keypath.str);\n  \t\t}\n  \t}\n\n  \t// If this property doesn't exist, we return a sentinel value\n  \t// so that we know to query parent scope (if such there be)\n  \tif (typeof parentValue === \"object\" && !(keypath.lastKey in parentValue)) {\n  \t\treturn viewmodel.cache[keypath.str] = FAILED_LOOKUP;\n  \t}\n\n  \tvalue = parentValue[keypath.lastKey];\n\n  \t// Do we have an adaptor for this value?\n  \tviewmodel.adapt(keypath.str, value, false);\n\n  \t// Update cache\n  \tviewmodel.cache[keypath.str] = value;\n  \treturn value;\n  }\n\n  var viewmodel_prototype_init = Viewmodel$init;\n\n  function Viewmodel$init() {\n  \tvar key;\n\n  \tfor (key in this.computations) {\n  \t\tthis.computations[key].init(this);\n  \t}\n  }\n\n  var prototype_map = Viewmodel$map;\n\n  function Viewmodel$map(key, options) {\n  \tvar mapping = this.mappings[key.str] = new Mapping(key, options);\n  \tmapping.initViewmodel(this);\n  \treturn mapping;\n  }\n\n  var Mapping = function (localKey, options) {\n  \tthis.localKey = localKey;\n  \tthis.keypath = options.keypath;\n  \tthis.origin = options.origin;\n\n  \tthis.deps = [];\n  \tthis.unresolved = [];\n\n  \tthis.resolved = false;\n  };\n\n  Mapping.prototype = {\n  \tforceResolution: function () {\n  \t\t// TODO warn, as per #1692?\n  \t\tthis.keypath = this.localKey;\n  \t\tthis.setup();\n  \t},\n\n  \tget: function (keypath, options) {\n  \t\tif (!this.resolved) {\n  \t\t\treturn undefined;\n  \t\t}\n  \t\treturn this.origin.get(this.map(keypath), options);\n  \t},\n\n  \tgetValue: function () {\n  \t\tif (!this.keypath) {\n  \t\t\treturn undefined;\n  \t\t}\n  \t\treturn this.origin.get(this.keypath);\n  \t},\n\n  \tinitViewmodel: function (viewmodel) {\n  \t\tthis.local = viewmodel;\n  \t\tthis.setup();\n  \t},\n\n  \tmap: function (keypath) {\n  \t\tif (typeof this.keypath === undefined) {\n  \t\t\treturn this.localKey;\n  \t\t}\n  \t\treturn keypath.replace(this.localKey, this.keypath);\n  \t},\n\n  \tregister: function (keypath, dependant, group) {\n  \t\tthis.deps.push({ keypath: keypath, dep: dependant, group: group });\n\n  \t\tif (this.resolved) {\n  \t\t\tthis.origin.register(this.map(keypath), dependant, group);\n  \t\t}\n  \t},\n\n  \tresolve: function (keypath) {\n  \t\tif (this.keypath !== undefined) {\n  \t\t\tthis.unbind(true);\n  \t\t}\n\n  \t\tthis.keypath = keypath;\n  \t\tthis.setup();\n  \t},\n\n  \tset: function (keypath, value) {\n  \t\tif (!this.resolved) {\n  \t\t\tthis.forceResolution();\n  \t\t}\n\n  \t\tthis.origin.set(this.map(keypath), value);\n  \t},\n\n  \tsetup: function () {\n  \t\tvar _this = this;\n\n  \t\tif (this.keypath === undefined) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tthis.resolved = true;\n\n  \t\t// accumulated dependants can now be registered\n  \t\tif (this.deps.length) {\n  \t\t\tthis.deps.forEach(function (d) {\n  \t\t\t\tvar keypath = _this.map(d.keypath);\n  \t\t\t\t_this.origin.register(keypath, d.dep, d.group);\n\n  \t\t\t\t// TODO this is a bit of a red flag... all deps should be the same?\n  \t\t\t\tif (d.dep.setValue) {\n  \t\t\t\t\td.dep.setValue(_this.origin.get(keypath));\n  \t\t\t\t} else if (d.dep.invalidate) {\n  \t\t\t\t\td.dep.invalidate();\n  \t\t\t\t} else {\n  \t\t\t\t\tthrow new Error(\"An unexpected error occurred. Please raise an issue at https://github.com/ractivejs/ractive/issues - thanks!\");\n  \t\t\t\t}\n  \t\t\t});\n\n  \t\t\tthis.origin.mark(this.keypath);\n  \t\t}\n  \t},\n\n  \tsetValue: function (value) {\n  \t\tif (!this.keypath) {\n  \t\t\tthrow new Error(\"Mapping does not have keypath, cannot set value. Please raise an issue at https://github.com/ractivejs/ractive/issues - thanks!\");\n  \t\t}\n\n  \t\tthis.origin.set(this.keypath, value);\n  \t},\n\n  \tunbind: function (keepLocal) {\n  \t\tvar _this = this;\n\n  \t\tif (!keepLocal) {\n  \t\t\tdelete this.local.mappings[this.localKey];\n  \t\t}\n\n  \t\tif (!this.resolved) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tthis.deps.forEach(function (d) {\n  \t\t\t_this.origin.unregister(_this.map(d.keypath), d.dep, d.group);\n  \t\t});\n\n  \t\tif (this.tracker) {\n  \t\t\tthis.origin.unregister(this.keypath, this.tracker);\n  \t\t}\n  \t},\n\n  \tunregister: function (keypath, dependant, group) {\n  \t\tvar deps, i;\n\n  \t\tif (!this.resolved) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tdeps = this.deps;\n  \t\ti = deps.length;\n\n  \t\twhile (i--) {\n  \t\t\tif (deps[i].dep === dependant) {\n  \t\t\t\tdeps.splice(i, 1);\n  \t\t\t\tbreak;\n  \t\t\t}\n  \t\t}\n  \t\tthis.origin.unregister(this.map(keypath), dependant, group);\n  \t}\n  };\n\n  var mark = Viewmodel$mark;\n\n  function Viewmodel$mark(keypath, options) {\n  \tvar computation,\n  \t    keypathStr = keypath.str;\n\n  \t// implicit changes (i.e. `foo.length` on `ractive.push('foo',42)`)\n  \t// should not be picked up by pattern observers\n  \tif (options) {\n  \t\tif (options.implicit) {\n  \t\t\tthis.implicitChanges[keypathStr] = true;\n  \t\t}\n  \t\tif (options.noCascade) {\n  \t\t\tthis.noCascade[keypathStr] = true;\n  \t\t}\n  \t}\n\n  \tif (computation = this.computations[keypathStr]) {\n  \t\tcomputation.invalidate();\n  \t}\n\n  \tif (this.changes.indexOf(keypath) === -1) {\n  \t\tthis.changes.push(keypath);\n  \t}\n\n  \t// pass on keepExistingWrapper, if we can\n  \tvar keepExistingWrapper = options ? options.keepExistingWrapper : false;\n\n  \tthis.clearCache(keypathStr, keepExistingWrapper);\n\n  \tif (this.ready) {\n  \t\tthis.onchange();\n  \t}\n  }\n\n  var mapOldToNewIndex = function (oldArray, newArray) {\n  \tvar usedIndices, firstUnusedIndex, newIndices, changed;\n\n  \tusedIndices = {};\n  \tfirstUnusedIndex = 0;\n\n  \tnewIndices = oldArray.map(function (item, i) {\n  \t\tvar index, start, len;\n\n  \t\tstart = firstUnusedIndex;\n  \t\tlen = newArray.length;\n\n  \t\tdo {\n  \t\t\tindex = newArray.indexOf(item, start);\n\n  \t\t\tif (index === -1) {\n  \t\t\t\tchanged = true;\n  \t\t\t\treturn -1;\n  \t\t\t}\n\n  \t\t\tstart = index + 1;\n  \t\t} while (usedIndices[index] && start < len);\n\n  \t\t// keep track of the first unused index, so we don't search\n  \t\t// the whole of newArray for each item in oldArray unnecessarily\n  \t\tif (index === firstUnusedIndex) {\n  \t\t\tfirstUnusedIndex += 1;\n  \t\t}\n\n  \t\tif (index !== i) {\n  \t\t\tchanged = true;\n  \t\t}\n\n  \t\tusedIndices[index] = true;\n  \t\treturn index;\n  \t});\n\n  \treturn newIndices;\n  };\n\n  var merge = Viewmodel$merge;\n\n  var comparators = {};\n  function Viewmodel$merge(keypath, currentArray, array, options) {\n  \tvar oldArray, newArray, comparator, newIndices;\n\n  \tthis.mark(keypath);\n\n  \tif (options && options.compare) {\n\n  \t\tcomparator = getComparatorFunction(options.compare);\n\n  \t\ttry {\n  \t\t\toldArray = currentArray.map(comparator);\n  \t\t\tnewArray = array.map(comparator);\n  \t\t} catch (err) {\n  \t\t\t// fallback to an identity check - worst case scenario we have\n  \t\t\t// to do more DOM manipulation than we thought...\n  \t\t\twarnIfDebug(\"merge(): \\\"%s\\\" comparison failed. Falling back to identity checking\", keypath);\n\n  \t\t\toldArray = currentArray;\n  \t\t\tnewArray = array;\n  \t\t}\n  \t} else {\n  \t\toldArray = currentArray;\n  \t\tnewArray = array;\n  \t}\n\n  \t// find new indices for members of oldArray\n  \tnewIndices = mapOldToNewIndex(oldArray, newArray);\n\n  \tthis.smartUpdate(keypath, array, newIndices, currentArray.length !== array.length);\n  }\n\n  function stringify(item) {\n  \treturn JSON.stringify(item);\n  }\n\n  function getComparatorFunction(comparator) {\n  \t// If `compare` is `true`, we use JSON.stringify to compare\n  \t// objects that are the same shape, but non-identical - i.e.\n  \t// { foo: 'bar' } !== { foo: 'bar' }\n  \tif (comparator === true) {\n  \t\treturn stringify;\n  \t}\n\n  \tif (typeof comparator === \"string\") {\n  \t\tif (!comparators[comparator]) {\n  \t\t\tcomparators[comparator] = function (item) {\n  \t\t\t\treturn item[comparator];\n  \t\t\t};\n  \t\t}\n\n  \t\treturn comparators[comparator];\n  \t}\n\n  \tif (typeof comparator === \"function\") {\n  \t\treturn comparator;\n  \t}\n\n  \tthrow new Error(\"The `compare` option must be a function, or a string representing an identifying field (or `true` to use JSON.stringify)\");\n  }\n\n  var register = Viewmodel$register;\n\n  function Viewmodel$register(keypath, dependant) {\n  \tvar group = arguments[2] === undefined ? \"default\" : arguments[2];\n\n  \tvar mapping, depsByKeypath, deps;\n\n  \tif (dependant.isStatic) {\n  \t\treturn; // TODO we should never get here if a dependant is static...\n  \t}\n\n  \tif (mapping = this.mappings[keypath.firstKey]) {\n  \t\tmapping.register(keypath, dependant, group);\n  \t} else {\n  \t\tdepsByKeypath = this.deps[group] || (this.deps[group] = {});\n  \t\tdeps = depsByKeypath[keypath.str] || (depsByKeypath[keypath.str] = []);\n\n  \t\tdeps.push(dependant);\n\n  \t\tif (!this.depsMap[group]) {\n  \t\t\tthis.depsMap[group] = {};\n  \t\t}\n\n  \t\tif (!keypath.isRoot) {\n  \t\t\tregister__updateDependantsMap(this, keypath, group);\n  \t\t}\n  \t}\n  }\n\n  function register__updateDependantsMap(viewmodel, keypath, group) {\n  \tvar map, parent, keypathStr;\n\n  \t// update dependants map\n  \twhile (!keypath.isRoot) {\n  \t\tmap = viewmodel.depsMap[group];\n  \t\tparent = map[keypath.parent.str] || (map[keypath.parent.str] = []);\n\n  \t\tkeypathStr = keypath.str;\n\n  \t\t// TODO find an alternative to this nasty approach\n  \t\tif (parent[\"_\" + keypathStr] === undefined) {\n  \t\t\tparent[\"_\" + keypathStr] = 0;\n  \t\t\tparent.push(keypath);\n  \t\t}\n\n  \t\tparent[\"_\" + keypathStr] += 1;\n  \t\tkeypath = keypath.parent;\n  \t}\n  }\n\n  var release = Viewmodel$release;\n\n  function Viewmodel$release() {\n  \treturn this.captureGroups.pop();\n  }\n\n  var reset = Viewmodel$reset;\n\n  function Viewmodel$reset(data) {\n  \tthis.data = data;\n  \tthis.clearCache(\"\");\n  }\n\n  var prototype_set = Viewmodel$set;\n\n  function Viewmodel$set(keypath, value) {\n  \tvar options = arguments[2] === undefined ? {} : arguments[2];\n\n  \tvar mapping, computation, wrapper, keepExistingWrapper;\n\n  \t// unless data is being set for data tracking purposes\n  \tif (!options.noMapping) {\n  \t\t// If this data belongs to a different viewmodel,\n  \t\t// pass the change along\n  \t\tif (mapping = this.mappings[keypath.firstKey]) {\n  \t\t\treturn mapping.set(keypath, value);\n  \t\t}\n  \t}\n\n  \tcomputation = this.computations[keypath.str];\n  \tif (computation) {\n  \t\tif (computation.setting) {\n  \t\t\t// let the other computation set() handle things...\n  \t\t\treturn;\n  \t\t}\n  \t\tcomputation.set(value);\n  \t\tvalue = computation.get();\n  \t}\n\n  \tif (isEqual(this.cache[keypath.str], value)) {\n  \t\treturn;\n  \t}\n\n  \twrapper = this.wrapped[keypath.str];\n\n  \t// If we have a wrapper with a `reset()` method, we try and use it. If the\n  \t// `reset()` method returns false, the wrapper should be torn down, and\n  \t// (most likely) a new one should be created later\n  \tif (wrapper && wrapper.reset) {\n  \t\tkeepExistingWrapper = wrapper.reset(value) !== false;\n\n  \t\tif (keepExistingWrapper) {\n  \t\t\tvalue = wrapper.get();\n  \t\t}\n  \t}\n\n  \tif (!computation && !keepExistingWrapper) {\n  \t\tresolveSet(this, keypath, value);\n  \t}\n\n  \tif (!options.silent) {\n  \t\tthis.mark(keypath);\n  \t} else {\n  \t\t// We're setting a parent of the original target keypath (i.e.\n  \t\t// creating a fresh branch) - we need to clear the cache, but\n  \t\t// not mark it as a change\n  \t\tthis.clearCache(keypath.str);\n  \t}\n  }\n\n  function resolveSet(viewmodel, keypath, value) {\n  \tvar wrapper, parentValue, wrapperSet, valueSet;\n\n  \twrapperSet = function () {\n  \t\tif (wrapper.set) {\n  \t\t\twrapper.set(keypath.lastKey, value);\n  \t\t} else {\n  \t\t\tparentValue = wrapper.get();\n  \t\t\tvalueSet();\n  \t\t}\n  \t};\n\n  \tvalueSet = function () {\n  \t\tif (!parentValue) {\n  \t\t\tparentValue = createBranch(keypath.lastKey);\n  \t\t\tviewmodel.set(keypath.parent, parentValue, { silent: true });\n  \t\t}\n  \t\tparentValue[keypath.lastKey] = value;\n  \t};\n\n  \twrapper = viewmodel.wrapped[keypath.parent.str];\n\n  \tif (wrapper) {\n  \t\twrapperSet();\n  \t} else {\n  \t\tparentValue = viewmodel.get(keypath.parent);\n\n  \t\t// may have been wrapped via the above .get()\n  \t\t// call on viewmodel if this is first access via .set()!\n  \t\tif (wrapper = viewmodel.wrapped[keypath.parent.str]) {\n  \t\t\twrapperSet();\n  \t\t} else {\n  \t\t\tvalueSet();\n  \t\t}\n  \t}\n  }\n\n  var smartUpdate = Viewmodel$smartUpdate;\n\n  var implicitOption = { implicit: true },\n      noCascadeOption = { noCascade: true };\n  function Viewmodel$smartUpdate(keypath, array, newIndices) {\n  \tvar _this = this;\n\n  \tvar dependants, oldLength, i;\n\n  \toldLength = newIndices.length;\n\n  \t// Indices that are being removed should be marked as dirty\n  \tnewIndices.forEach(function (newIndex, oldIndex) {\n  \t\tif (newIndex === -1) {\n  \t\t\t_this.mark(keypath.join(oldIndex), noCascadeOption);\n  \t\t}\n  \t});\n\n  \t// Update the model\n  \t// TODO allow existing array to be updated in place, rather than replaced?\n  \tthis.set(keypath, array, { silent: true });\n\n  \tif (dependants = this.deps[\"default\"][keypath.str]) {\n  \t\tdependants.filter(canShuffle).forEach(function (d) {\n  \t\t\treturn d.shuffle(newIndices, array);\n  \t\t});\n  \t}\n\n  \tif (oldLength !== array.length) {\n  \t\tthis.mark(keypath.join(\"length\"), implicitOption);\n\n  \t\tfor (i = newIndices.touchedFrom; i < array.length; i += 1) {\n  \t\t\tthis.mark(keypath.join(i));\n  \t\t}\n\n  \t\t// don't allow removed indexes beyond end of new array to trigger recomputations\n  \t\t// TODO is this still necessary, now that computations are lazy?\n  \t\tfor (i = array.length; i < oldLength; i += 1) {\n  \t\t\tthis.mark(keypath.join(i), noCascadeOption);\n  \t\t}\n  \t}\n  }\n\n  function canShuffle(dependant) {\n  \treturn typeof dependant.shuffle === \"function\";\n  }\n\n  var prototype_teardown = Viewmodel$teardown;\n\n  function Viewmodel$teardown() {\n  \tvar _this = this;\n\n  \tvar unresolvedImplicitDependency;\n\n  \t// Clear entire cache - this has the desired side-effect\n  \t// of unwrapping adapted values (e.g. arrays)\n  \tObject.keys(this.cache).forEach(function (keypath) {\n  \t\treturn _this.clearCache(keypath);\n  \t});\n\n  \t// Teardown any failed lookups - we don't need them to resolve any more\n  \twhile (unresolvedImplicitDependency = this.unresolvedImplicitDependencies.pop()) {\n  \t\tunresolvedImplicitDependency.teardown();\n  \t}\n  }\n\n  var unregister = Viewmodel$unregister;\n\n  function Viewmodel$unregister(keypath, dependant) {\n  \tvar group = arguments[2] === undefined ? \"default\" : arguments[2];\n\n  \tvar mapping, deps, index;\n\n  \tif (dependant.isStatic) {\n  \t\treturn;\n  \t}\n\n  \tif (mapping = this.mappings[keypath.firstKey]) {\n  \t\treturn mapping.unregister(keypath, dependant, group);\n  \t}\n\n  \tdeps = this.deps[group][keypath.str];\n  \tindex = deps.indexOf(dependant);\n\n  \tif (index === -1) {\n  \t\tthrow new Error(\"Attempted to remove a dependant that was no longer registered! This should not happen. If you are seeing this bug in development please raise an issue at https://github.com/RactiveJS/Ractive/issues - thanks\");\n  \t}\n\n  \tdeps.splice(index, 1);\n\n  \tif (keypath.isRoot) {\n  \t\treturn;\n  \t}\n\n  \tunregister__updateDependantsMap(this, keypath, group);\n  }\n\n  function unregister__updateDependantsMap(viewmodel, keypath, group) {\n  \tvar map, parent;\n\n  \t// update dependants map\n  \twhile (!keypath.isRoot) {\n  \t\tmap = viewmodel.depsMap[group];\n  \t\tparent = map[keypath.parent.str];\n\n  \t\tparent[\"_\" + keypath.str] -= 1;\n\n  \t\tif (!parent[\"_\" + keypath.str]) {\n  \t\t\t// remove from parent deps map\n  \t\t\tremoveFromArray(parent, keypath);\n  \t\t\tparent[\"_\" + keypath.str] = undefined;\n  \t\t}\n\n  \t\tkeypath = keypath.parent;\n  \t}\n  }\n\n  var Viewmodel = function (options) {\n  \tvar adapt = options.adapt;\n  \tvar data = options.data;\n  \tvar ractive = options.ractive;\n  \tvar computed = options.computed;\n  \tvar mappings = options.mappings;\n  \tvar key;\n  \tvar mapping;\n\n  \t// TODO is it possible to remove this reference?\n  \tthis.ractive = ractive;\n\n  \tthis.adaptors = adapt;\n  \tthis.onchange = options.onchange;\n\n  \tthis.cache = {}; // we need to be able to use hasOwnProperty, so can't inherit from null\n  \tthis.cacheMap = create(null);\n\n  \tthis.deps = {\n  \t\tcomputed: create(null),\n  \t\t\"default\": create(null)\n  \t};\n  \tthis.depsMap = {\n  \t\tcomputed: create(null),\n  \t\t\"default\": create(null)\n  \t};\n\n  \tthis.patternObservers = [];\n\n  \tthis.specials = create(null);\n\n  \tthis.wrapped = create(null);\n  \tthis.computations = create(null);\n\n  \tthis.captureGroups = [];\n  \tthis.unresolvedImplicitDependencies = [];\n\n  \tthis.changes = [];\n  \tthis.implicitChanges = {};\n  \tthis.noCascade = {};\n\n  \tthis.data = data;\n\n  \t// set up explicit mappings\n  \tthis.mappings = create(null);\n  \tfor (key in mappings) {\n  \t\tthis.map(getKeypath(key), mappings[key]);\n  \t}\n\n  \tif (data) {\n  \t\t// if data exists locally, but is missing on the parent,\n  \t\t// we transfer ownership to the parent\n  \t\tfor (key in data) {\n  \t\t\tif ((mapping = this.mappings[key]) && mapping.getValue() === undefined) {\n  \t\t\t\tmapping.setValue(data[key]);\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \tfor (key in computed) {\n  \t\tif (mappings && key in mappings) {\n  \t\t\tfatal(\"Cannot map to a computed property ('%s')\", key);\n  \t\t}\n\n  \t\tthis.compute(getKeypath(key), computed[key]);\n  \t}\n\n  \tthis.ready = true;\n  };\n\n  Viewmodel.prototype = {\n  \tadapt: prototype_adapt,\n  \tapplyChanges: applyChanges,\n  \tcapture: capture,\n  \tclearCache: clearCache,\n  \tcompute: compute,\n  \tget: viewmodel_prototype_get,\n  \tinit: viewmodel_prototype_init,\n  \tmap: prototype_map,\n  \tmark: mark,\n  \tmerge: merge,\n  \tregister: register,\n  \trelease: release,\n  \treset: reset,\n  \tset: prototype_set,\n  \tsmartUpdate: smartUpdate,\n  \tteardown: prototype_teardown,\n  \tunregister: unregister\n  };\n\n  var viewmodel_Viewmodel = Viewmodel;\n\n  function HookQueue(event) {\n  \tthis.hook = new hooks_Hook(event);\n  \tthis.inProcess = {};\n  \tthis.queue = {};\n  }\n\n  HookQueue.prototype = {\n\n  \tconstructor: HookQueue,\n\n  \tbegin: function (ractive) {\n  \t\tthis.inProcess[ractive._guid] = true;\n  \t},\n\n  \tend: function (ractive) {\n\n  \t\tvar parent = ractive.parent;\n\n  \t\t// If this is *isn't* a child of a component that's in process,\n  \t\t// it should call methods or fire at this point\n  \t\tif (!parent || !this.inProcess[parent._guid]) {\n  \t\t\tfire(this, ractive);\n  \t\t}\n  \t\t// elsewise, handoff to parent to fire when ready\n  \t\telse {\n  \t\t\tgetChildQueue(this.queue, parent).push(ractive);\n  \t\t}\n\n  \t\tdelete this.inProcess[ractive._guid];\n  \t}\n  };\n\n  function getChildQueue(queue, ractive) {\n  \treturn queue[ractive._guid] || (queue[ractive._guid] = []);\n  }\n\n  function fire(hookQueue, ractive) {\n\n  \tvar childQueue = getChildQueue(hookQueue.queue, ractive);\n\n  \thookQueue.hook.fire(ractive);\n\n  \t// queue is \"live\" because components can end up being\n  \t// added while hooks fire on parents that modify data values.\n  \twhile (childQueue.length) {\n  \t\tfire(hookQueue, childQueue.shift());\n  \t}\n\n  \tdelete hookQueue.queue[ractive._guid];\n  }\n\n  var hooks_HookQueue = HookQueue;\n\n  var helpers_getComputationSignatures = getComputationSignatures;\n\n  var pattern = /\\$\\{([^\\}]+)\\}/g;\n  function getComputationSignatures(ractive, computed) {\n  \tvar signatures = {},\n  \t    key;\n\n  \tfor (key in computed) {\n  \t\tsignatures[key] = getComputationSignature(ractive, key, computed[key]);\n  \t}\n\n  \treturn signatures;\n  }\n\n  function getComputationSignature(ractive, key, signature) {\n  \tvar getter, setter;\n\n  \tif (typeof signature === \"function\") {\n  \t\tgetter = helpers_getComputationSignatures__bind(signature, ractive);\n  \t}\n\n  \tif (typeof signature === \"string\") {\n  \t\tgetter = createFunctionFromString(ractive, signature);\n  \t}\n\n  \tif (typeof signature === \"object\") {\n  \t\tif (typeof signature.get === \"string\") {\n  \t\t\tgetter = createFunctionFromString(ractive, signature.get);\n  \t\t} else if (typeof signature.get === \"function\") {\n  \t\t\tgetter = helpers_getComputationSignatures__bind(signature.get, ractive);\n  \t\t} else {\n  \t\t\tfatal(\"`%s` computation must have a `get()` method\", key);\n  \t\t}\n\n  \t\tif (typeof signature.set === \"function\") {\n  \t\t\tsetter = helpers_getComputationSignatures__bind(signature.set, ractive);\n  \t\t}\n  \t}\n\n  \treturn { getter: getter, setter: setter };\n  }\n\n  function createFunctionFromString(ractive, str) {\n  \tvar functionBody, hasThis, fn;\n\n  \tfunctionBody = \"return (\" + str.replace(pattern, function (match, keypath) {\n  \t\thasThis = true;\n  \t\treturn \"__ractive.get(\\\"\" + keypath + \"\\\")\";\n  \t}) + \");\";\n\n  \tif (hasThis) {\n  \t\tfunctionBody = \"var __ractive = this; \" + functionBody;\n  \t}\n\n  \tfn = new Function(functionBody);\n  \treturn hasThis ? fn.bind(ractive) : fn;\n  }\n\n  function helpers_getComputationSignatures__bind(fn, context) {\n  \treturn /this/.test(fn.toString()) ? fn.bind(context) : fn;\n  }\n\n  var constructHook = new hooks_Hook(\"construct\");\n  var configHook = new hooks_Hook(\"config\");\n  var initHook = new hooks_HookQueue(\"init\");\n  var initialise__uid = 0;\n\n  var initialise__registryNames = [\"adaptors\", \"components\", \"decorators\", \"easing\", \"events\", \"interpolators\", \"partials\", \"transitions\"];\n\n  var initialise = initialiseRactiveInstance;\n\n  function initialiseRactiveInstance(ractive) {\n  \tvar userOptions = arguments[1] === undefined ? {} : arguments[1];\n  \tvar options = arguments[2] === undefined ? {} : arguments[2];\n\n  \tvar el, viewmodel;\n\n  \tif (_Ractive.DEBUG) {\n  \t\twelcome();\n  \t}\n\n  \tinitialiseProperties(ractive, options);\n\n  \t// TODO remove this, eventually\n  \tdefineProperty(ractive, \"data\", { get: deprecateRactiveData });\n\n  \t// TODO don't allow `onconstruct` with `new Ractive()`, there's no need for it\n  \tconstructHook.fire(ractive, userOptions);\n\n  \t// Add registries\n  \tinitialise__registryNames.forEach(function (name) {\n  \t\tractive[name] = utils_object__extend(create(ractive.constructor[name] || null), userOptions[name]);\n  \t});\n\n  \t// Create a viewmodel\n  \tviewmodel = new viewmodel_Viewmodel({\n  \t\tadapt: getAdaptors(ractive, ractive.adapt, userOptions),\n  \t\tdata: custom_data.init(ractive.constructor, ractive, userOptions),\n  \t\tcomputed: helpers_getComputationSignatures(ractive, utils_object__extend(create(ractive.constructor.prototype.computed), userOptions.computed)),\n  \t\tmappings: options.mappings,\n  \t\tractive: ractive,\n  \t\tonchange: function () {\n  \t\t\treturn global_runloop.addRactive(ractive);\n  \t\t}\n  \t});\n\n  \tractive.viewmodel = viewmodel;\n\n  \t// This can't happen earlier, because computed properties may call `ractive.get()`, etc\n  \tviewmodel.init();\n\n  \t// init config from Parent and options\n  \tconfig_config.init(ractive.constructor, ractive, userOptions);\n\n  \tconfigHook.fire(ractive);\n  \tinitHook.begin(ractive);\n\n  \t// // If this is a component with a function `data` property, call the function\n  \t// // with `ractive` as context (unless the child was also a function)\n  \t// if ( typeof ractive.constructor.prototype.data === 'function' && typeof userOptions.data !== 'function' ) {\n  \t// \tviewmodel.reset( ractive.constructor.prototype.data.call( ractive ) || fatal( '`data` functions must return a data object' ) );\n  \t// }\n\n  \t// Render virtual DOM\n  \tif (ractive.template) {\n  \t\tvar cssIds = undefined;\n\n  \t\tif (options.cssIds || ractive.cssId) {\n  \t\t\tcssIds = options.cssIds ? options.cssIds.slice() : [];\n\n  \t\t\tif (ractive.cssId) {\n  \t\t\t\tcssIds.push(ractive.cssId);\n  \t\t\t}\n  \t\t}\n\n  \t\tractive.fragment = new virtualdom_Fragment({\n  \t\t\ttemplate: ractive.template,\n  \t\t\troot: ractive,\n  \t\t\towner: ractive, // saves doing `if ( this.parent ) { /*...*/ }` later on\n  \t\t\tcssIds: cssIds\n  \t\t});\n  \t}\n\n  \tinitHook.end(ractive);\n\n  \t// render automatically ( if `el` is specified )\n  \tif (el = getElement(ractive.el)) {\n  \t\tvar promise = ractive.render(el, ractive.append);\n\n  \t\tif (_Ractive.DEBUG_PROMISES) {\n  \t\t\tpromise[\"catch\"](function (err) {\n  \t\t\t\twarnOnceIfDebug(\"Promise debugging is enabled, to help solve errors that happen asynchronously. Some browsers will log unhandled promise rejections, in which case you can safely disable promise debugging:\\n  Ractive.DEBUG_PROMISES = false;\");\n  \t\t\t\twarnIfDebug(\"An error happened during rendering\", { ractive: ractive });\n  \t\t\t\terr.stack && logIfDebug(err.stack);\n\n  \t\t\t\tthrow err;\n  \t\t\t});\n  \t\t}\n  \t}\n  }\n\n  function getAdaptors(ractive, protoAdapt, userOptions) {\n  \tvar adapt, magic, modifyArrays;\n\n  \tprotoAdapt = protoAdapt.map(lookup);\n  \tadapt = ensureArray(userOptions.adapt).map(lookup);\n\n  \tadapt = initialise__combine(protoAdapt, adapt);\n\n  \tmagic = \"magic\" in userOptions ? userOptions.magic : ractive.magic;\n  \tmodifyArrays = \"modifyArrays\" in userOptions ? userOptions.modifyArrays : ractive.modifyArrays;\n\n  \tif (magic) {\n  \t\tif (!environment__magic) {\n  \t\t\tthrow new Error(\"Getters and setters (magic mode) are not supported in this browser\");\n  \t\t}\n\n  \t\tif (modifyArrays) {\n  \t\t\tadapt.push(magicArray);\n  \t\t}\n\n  \t\tadapt.push(adaptors_magic);\n  \t}\n\n  \tif (modifyArrays) {\n  \t\tadapt.push(array_index);\n  \t}\n\n  \treturn adapt;\n\n  \tfunction lookup(adaptor) {\n  \t\tif (typeof adaptor === \"string\") {\n  \t\t\tadaptor = findInViewHierarchy(\"adaptors\", ractive, adaptor);\n\n  \t\t\tif (!adaptor) {\n  \t\t\t\tfatal(missingPlugin(adaptor, \"adaptor\"));\n  \t\t\t}\n  \t\t}\n\n  \t\treturn adaptor;\n  \t}\n  }\n\n  function initialise__combine(a, b) {\n  \tvar c = a.slice(),\n  \t    i = b.length;\n\n  \twhile (i--) {\n  \t\tif (! ~c.indexOf(b[i])) {\n  \t\t\tc.push(b[i]);\n  \t\t}\n  \t}\n\n  \treturn c;\n  }\n\n  function initialiseProperties(ractive, options) {\n  \t// Generate a unique identifier, for places where you'd use a weak map if it\n  \t// existed\n  \tractive._guid = \"r-\" + initialise__uid++;\n\n  \t// events\n  \tractive._subs = create(null);\n\n  \t// storage for item configuration from instantiation to reset,\n  \t// like dynamic functions or original values\n  \tractive._config = {};\n\n  \t// two-way bindings\n  \tractive._twowayBindings = create(null);\n\n  \t// animations (so we can stop any in progress at teardown)\n  \tractive._animations = [];\n\n  \t// nodes registry\n  \tractive.nodes = {};\n\n  \t// live queries\n  \tractive._liveQueries = [];\n  \tractive._liveComponentQueries = [];\n\n  \t// bound data functions\n  \tractive._boundFunctions = [];\n\n  \t// observers\n  \tractive._observers = [];\n\n  \t// properties specific to inline components\n  \tif (options.component) {\n  \t\tractive.parent = options.parent;\n  \t\tractive.container = options.container || null;\n  \t\tractive.root = ractive.parent.root;\n\n  \t\tractive.component = options.component;\n  \t\toptions.component.instance = ractive;\n\n  \t\t// for hackability, this could be an open option\n  \t\t// for any ractive instance, but for now, just\n  \t\t// for components and just for ractive...\n  \t\tractive._inlinePartials = options.inlinePartials;\n  \t} else {\n  \t\tractive.root = ractive;\n  \t\tractive.parent = ractive.container = null;\n  \t}\n  }\n\n  function deprecateRactiveData() {\n  \tthrow new Error(\"Using `ractive.data` is no longer supported - you must use the `ractive.get()` API instead\");\n  }\n\n  function ComplexParameter(component, template, callback) {\n  \tthis.parentFragment = component.parentFragment;\n  \tthis.callback = callback;\n\n  \tthis.fragment = new virtualdom_Fragment({\n  \t\ttemplate: template,\n  \t\troot: component.root,\n  \t\towner: this\n  \t});\n\n  \tthis.update();\n  }\n\n  var initialise_ComplexParameter = ComplexParameter;\n\n  ComplexParameter.prototype = {\n  \tbubble: function () {\n  \t\tif (!this.dirty) {\n  \t\t\tthis.dirty = true;\n  \t\t\tglobal_runloop.addView(this);\n  \t\t}\n  \t},\n\n  \tupdate: function () {\n  \t\tthis.callback(this.fragment.getValue());\n  \t\tthis.dirty = false;\n  \t},\n\n  \trebind: function (oldKeypath, newKeypath) {\n  \t\tthis.fragment.rebind(oldKeypath, newKeypath);\n  \t},\n\n  \tunbind: function () {\n  \t\tthis.fragment.unbind();\n  \t}\n  };\n\n  var createInstance = function (component, Component, attributes, yieldTemplate, partials) {\n  \tvar instance,\n  \t    parentFragment,\n  \t    ractive,\n  \t    fragment,\n  \t    container,\n  \t    inlinePartials = {},\n  \t    data = {},\n  \t    mappings = {},\n  \t    ready,\n  \t    resolvers = [];\n\n  \tparentFragment = component.parentFragment;\n  \tractive = component.root;\n\n  \tpartials = partials || {};\n  \tutils_object__extend(inlinePartials, partials);\n\n  \t// Make contents available as a {{>content}} partial\n  \tpartials.content = yieldTemplate || [];\n\n  \t// set a default partial for yields with no name\n  \tinlinePartials[\"\"] = partials.content;\n\n  \tif (Component.defaults.el) {\n  \t\twarnIfDebug(\"The <%s/> component has a default `el` property; it has been disregarded\", component.name);\n  \t}\n\n  \t// find container\n  \tfragment = parentFragment;\n  \twhile (fragment) {\n  \t\tif (fragment.owner.type === YIELDER) {\n  \t\t\tcontainer = fragment.owner.container;\n  \t\t\tbreak;\n  \t\t}\n\n  \t\tfragment = fragment.parent;\n  \t}\n\n  \t// each attribute represents either a) data or b) a mapping\n  \tif (attributes) {\n  \t\tObject.keys(attributes).forEach(function (key) {\n  \t\t\tvar attribute = attributes[key],\n  \t\t\t    parsed,\n  \t\t\t    resolver;\n\n  \t\t\tif (typeof attribute === \"string\") {\n  \t\t\t\t// it's static data\n  \t\t\t\tparsed = parseJSON(attribute);\n  \t\t\t\tdata[key] = parsed ? parsed.value : attribute;\n  \t\t\t} else if (attribute === 0) {\n  \t\t\t\t// it had no '=', so we'll call it true\n  \t\t\t\tdata[key] = true;\n  \t\t\t} else if (isArray(attribute)) {\n  \t\t\t\t// this represents dynamic data\n  \t\t\t\tif (isSingleInterpolator(attribute)) {\n  \t\t\t\t\tmappings[key] = {\n  \t\t\t\t\t\torigin: component.root.viewmodel,\n  \t\t\t\t\t\tkeypath: undefined\n  \t\t\t\t\t};\n\n  \t\t\t\t\tresolver = createResolver(component, attribute[0], function (keypath) {\n  \t\t\t\t\t\tif (keypath.isSpecial) {\n  \t\t\t\t\t\t\tif (ready) {\n  \t\t\t\t\t\t\t\tinstance.set(key, keypath.value); // TODO use viewmodel?\n  \t\t\t\t\t\t\t} else {\n  \t\t\t\t\t\t\t\tdata[key] = keypath.value;\n\n  \t\t\t\t\t\t\t\t// TODO errr.... would be better if we didn't have to do this\n  \t\t\t\t\t\t\t\tdelete mappings[key];\n  \t\t\t\t\t\t\t}\n  \t\t\t\t\t\t} else {\n  \t\t\t\t\t\t\tif (ready) {\n  \t\t\t\t\t\t\t\tinstance.viewmodel.mappings[key].resolve(keypath);\n  \t\t\t\t\t\t\t} else {\n  \t\t\t\t\t\t\t\t// resolved immediately\n  \t\t\t\t\t\t\t\tmappings[key].keypath = keypath;\n  \t\t\t\t\t\t\t}\n  \t\t\t\t\t\t}\n  \t\t\t\t\t});\n  \t\t\t\t} else {\n  \t\t\t\t\tresolver = new initialise_ComplexParameter(component, attribute, function (value) {\n  \t\t\t\t\t\tif (ready) {\n  \t\t\t\t\t\t\tinstance.set(key, value); // TODO use viewmodel?\n  \t\t\t\t\t\t} else {\n  \t\t\t\t\t\t\tdata[key] = value;\n  \t\t\t\t\t\t}\n  \t\t\t\t\t});\n  \t\t\t\t}\n\n  \t\t\t\tresolvers.push(resolver);\n  \t\t\t} else {\n  \t\t\t\tthrow new Error(\"erm wut\");\n  \t\t\t}\n  \t\t});\n  \t}\n\n  \tinstance = create(Component.prototype);\n\n  \tinitialise(instance, {\n  \t\tel: null,\n  \t\tappend: true,\n  \t\tdata: data,\n  \t\tpartials: partials,\n  \t\tmagic: ractive.magic || Component.defaults.magic,\n  \t\tmodifyArrays: ractive.modifyArrays,\n  \t\t// need to inherit runtime parent adaptors\n  \t\tadapt: ractive.adapt\n  \t}, {\n  \t\tparent: ractive,\n  \t\tcomponent: component,\n  \t\tcontainer: container,\n  \t\tmappings: mappings,\n  \t\tinlinePartials: inlinePartials,\n  \t\tcssIds: parentFragment.cssIds\n  \t});\n\n  \tready = true;\n  \tcomponent.resolvers = resolvers;\n\n  \treturn instance;\n  };\n\n  function createResolver(component, template, callback) {\n  \tvar resolver;\n\n  \tif (template.r) {\n  \t\tresolver = Resolvers_createReferenceResolver(component, template.r, callback);\n  \t} else if (template.x) {\n  \t\tresolver = new Resolvers_ExpressionResolver(component, component.parentFragment, template.x, callback);\n  \t} else if (template.rx) {\n  \t\tresolver = new ReferenceExpressionResolver_ReferenceExpressionResolver(component, template.rx, callback);\n  \t}\n\n  \treturn resolver;\n  }\n\n  function isSingleInterpolator(template) {\n  \treturn template.length === 1 && template[0].t === INTERPOLATOR;\n  }\n\n  // TODO how should event arguments be handled? e.g.\n  // <widget on-foo='bar:1,2,3'/>\n  // The event 'bar' will be fired on the parent instance\n  // when 'foo' fires on the child, but the 1,2,3 arguments\n  // will be lost\n\n  var initialise_propagateEvents = propagateEvents;\n\n  function propagateEvents(component, eventsDescriptor) {\n  \tvar eventName;\n\n  \tfor (eventName in eventsDescriptor) {\n  \t\tif (eventsDescriptor.hasOwnProperty(eventName)) {\n  \t\t\tpropagateEvent(component.instance, component.root, eventName, eventsDescriptor[eventName]);\n  \t\t}\n  \t}\n  }\n\n  function propagateEvent(childInstance, parentInstance, eventName, proxyEventName) {\n  \tif (typeof proxyEventName !== \"string\") {\n  \t\tfatal(\"Components currently only support simple events - you cannot include arguments. Sorry!\");\n  \t}\n\n  \tchildInstance.on(eventName, function () {\n  \t\tvar event, args;\n\n  \t\t// semi-weak test, but what else? tag the event obj ._isEvent ?\n  \t\tif (arguments.length && arguments[0] && arguments[0].node) {\n  \t\t\tevent = Array.prototype.shift.call(arguments);\n  \t\t}\n\n  \t\targs = Array.prototype.slice.call(arguments);\n\n  \t\tshared_fireEvent(parentInstance, proxyEventName, { event: event, args: args });\n\n  \t\t// cancel bubbling\n  \t\treturn false;\n  \t});\n  }\n\n  var initialise_updateLiveQueries = function (component) {\n  \tvar ancestor, query;\n\n  \t// If there's a live query for this component type, add it\n  \tancestor = component.root;\n  \twhile (ancestor) {\n  \t\tif (query = ancestor._liveComponentQueries[\"_\" + component.name]) {\n  \t\t\tquery.push(component.instance);\n  \t\t}\n\n  \t\tancestor = ancestor.parent;\n  \t}\n  };\n\n  var Component_prototype_init = Component$init;\n  function Component$init(options, Component) {\n  \tvar parentFragment, root;\n\n  \tif (!Component) {\n  \t\tthrow new Error(\"Component \\\"\" + this.name + \"\\\" not found\");\n  \t}\n\n  \tparentFragment = this.parentFragment = options.parentFragment;\n  \troot = parentFragment.root;\n\n  \tthis.root = root;\n  \tthis.type = COMPONENT;\n  \tthis.name = options.template.e;\n  \tthis.index = options.index;\n  \tthis.indexRefBindings = {};\n  \tthis.yielders = {};\n  \tthis.resolvers = [];\n\n  \tcreateInstance(this, Component, options.template.a, options.template.f, options.template.p);\n  \tinitialise_propagateEvents(this, options.template.v);\n\n  \t// intro, outro and decorator directives have no effect\n  \tif (options.template.t0 || options.template.t1 || options.template.t2 || options.template.o) {\n  \t\twarnIfDebug(\"The \\\"intro\\\", \\\"outro\\\" and \\\"decorator\\\" directives have no effect on components\", { ractive: this.instance });\n  \t}\n\n  \tinitialise_updateLiveQueries(this);\n  }\n\n  var Component_prototype_rebind = Component$rebind;\n\n  function Component$rebind(oldKeypath, newKeypath) {\n  \tvar query;\n\n  \tthis.resolvers.forEach(rebind);\n\n  \tfor (var k in this.yielders) {\n  \t\tif (this.yielders[k][0]) {\n  \t\t\trebind(this.yielders[k][0]);\n  \t\t}\n  \t}\n\n  \tif (query = this.root._liveComponentQueries[\"_\" + this.name]) {\n  \t\tquery._makeDirty();\n  \t}\n\n  \tfunction rebind(x) {\n  \t\tx.rebind(oldKeypath, newKeypath);\n  \t}\n  }\n\n  var Component_prototype_render = Component$render;\n\n  function Component$render() {\n  \tvar instance = this.instance;\n\n  \tinstance.render(this.parentFragment.getNode());\n\n  \tthis.rendered = true;\n  \treturn instance.fragment.detach();\n  }\n\n  var Component_prototype_toString = Component$toString;\n\n  function Component$toString() {\n  \treturn this.instance.fragment.toString();\n  }\n\n  var Component_prototype_unbind = Component$unbind;\n\n  var Component_prototype_unbind__teardownHook = new hooks_Hook(\"teardown\");\n  function Component$unbind() {\n  \tvar instance = this.instance;\n\n  \tthis.resolvers.forEach(methodCallers__unbind);\n\n  \tremoveFromLiveComponentQueries(this);\n\n  \tinstance._observers.forEach(cancel);\n\n  \t// teardown the instance\n  \tinstance.fragment.unbind();\n  \tinstance.viewmodel.teardown();\n\n  \tif (instance.fragment.rendered && instance.el.__ractive_instances__) {\n  \t\tremoveFromArray(instance.el.__ractive_instances__, instance);\n  \t}\n\n  \tComponent_prototype_unbind__teardownHook.fire(instance);\n  }\n\n  function removeFromLiveComponentQueries(component) {\n  \tvar instance, query;\n\n  \tinstance = component.root;\n\n  \tdo {\n  \t\tif (query = instance._liveComponentQueries[\"_\" + component.name]) {\n  \t\t\tquery._remove(component);\n  \t\t}\n  \t} while (instance = instance.parent);\n  }\n\n  var Component_prototype_unrender = Component$unrender;\n\n  function Component$unrender(shouldDestroy) {\n  \tthis.shouldDestroy = shouldDestroy;\n  \tthis.instance.unrender();\n  }\n\n  var Component = function (options, Constructor) {\n  \tthis.init(options, Constructor);\n  };\n\n  Component.prototype = {\n  \tdetach: Component_prototype_detach,\n  \tfind: Component_prototype_find,\n  \tfindAll: Component_prototype_findAll,\n  \tfindAllComponents: Component_prototype_findAllComponents,\n  \tfindComponent: Component_prototype_findComponent,\n  \tfindNextNode: Component_prototype_findNextNode,\n  \tfirstNode: Component_prototype_firstNode,\n  \tinit: Component_prototype_init,\n  \trebind: Component_prototype_rebind,\n  \trender: Component_prototype_render,\n  \ttoString: Component_prototype_toString,\n  \tunbind: Component_prototype_unbind,\n  \tunrender: Component_prototype_unrender\n  };\n\n  var _Component = Component;\n\n  var Comment = function (options) {\n  \tthis.type = COMMENT;\n  \tthis.value = options.template.c;\n  };\n\n  Comment.prototype = {\n  \tdetach: shared_detach,\n\n  \tfirstNode: function () {\n  \t\treturn this.node;\n  \t},\n\n  \trender: function () {\n  \t\tif (!this.node) {\n  \t\t\tthis.node = document.createComment(this.value);\n  \t\t}\n\n  \t\treturn this.node;\n  \t},\n\n  \ttoString: function () {\n  \t\treturn \"<!--\" + this.value + \"-->\";\n  \t},\n\n  \tunrender: function (shouldDestroy) {\n  \t\tif (shouldDestroy) {\n  \t\t\tthis.node.parentNode.removeChild(this.node);\n  \t\t}\n  \t}\n  };\n\n  var items_Comment = Comment;\n\n  var Yielder = function (options) {\n  \tvar container, component;\n\n  \tthis.type = YIELDER;\n\n  \tthis.container = container = options.parentFragment.root;\n  \tthis.component = component = container.component;\n\n  \tthis.container = container;\n  \tthis.containerFragment = options.parentFragment;\n  \tthis.parentFragment = component.parentFragment;\n\n  \tvar name = this.name = options.template.n || \"\";\n\n  \tvar template = container._inlinePartials[name];\n\n  \tif (!template) {\n  \t\twarnIfDebug(\"Could not find template for partial \\\"\" + name + \"\\\"\", { ractive: options.root });\n  \t\ttemplate = [];\n  \t}\n\n  \tthis.fragment = new virtualdom_Fragment({\n  \t\towner: this,\n  \t\troot: container.parent,\n  \t\ttemplate: template,\n  \t\tpElement: this.containerFragment.pElement\n  \t});\n\n  \t// even though only one yielder is allowed, we need to have an array of them\n  \t// as it's possible to cause a yielder to be created before the last one\n  \t// was destroyed in the same turn of the runloop\n  \tif (!isArray(component.yielders[name])) {\n  \t\tcomponent.yielders[name] = [this];\n  \t} else {\n  \t\tcomponent.yielders[name].push(this);\n  \t}\n\n  \tglobal_runloop.scheduleTask(function () {\n  \t\tif (component.yielders[name].length > 1) {\n  \t\t\tthrow new Error(\"A component template can only have one {{yield\" + (name ? \" \" + name : \"\") + \"}} declaration at a time\");\n  \t\t}\n  \t});\n  };\n\n  Yielder.prototype = {\n  \tdetach: function () {\n  \t\treturn this.fragment.detach();\n  \t},\n\n  \tfind: function (selector) {\n  \t\treturn this.fragment.find(selector);\n  \t},\n\n  \tfindAll: function (selector, query) {\n  \t\treturn this.fragment.findAll(selector, query);\n  \t},\n\n  \tfindComponent: function (selector) {\n  \t\treturn this.fragment.findComponent(selector);\n  \t},\n\n  \tfindAllComponents: function (selector, query) {\n  \t\treturn this.fragment.findAllComponents(selector, query);\n  \t},\n\n  \tfindNextNode: function () {\n  \t\treturn this.containerFragment.findNextNode(this);\n  \t},\n\n  \tfirstNode: function () {\n  \t\treturn this.fragment.firstNode();\n  \t},\n\n  \tgetValue: function (options) {\n  \t\treturn this.fragment.getValue(options);\n  \t},\n\n  \trender: function () {\n  \t\treturn this.fragment.render();\n  \t},\n\n  \tunbind: function () {\n  \t\tthis.fragment.unbind();\n  \t},\n\n  \tunrender: function (shouldDestroy) {\n  \t\tthis.fragment.unrender(shouldDestroy);\n  \t\tremoveFromArray(this.component.yielders[this.name], this);\n  \t},\n\n  \trebind: function (oldKeypath, newKeypath) {\n  \t\tthis.fragment.rebind(oldKeypath, newKeypath);\n  \t},\n\n  \ttoString: function () {\n  \t\treturn this.fragment.toString();\n  \t}\n  };\n\n  var items_Yielder = Yielder;\n\n  var Doctype = function (options) {\n  \tthis.declaration = options.template.a;\n  };\n\n  Doctype.prototype = {\n  \tinit: noop,\n  \trender: noop,\n  \tunrender: noop,\n  \tteardown: noop,\n  \ttoString: function () {\n  \t\treturn \"<!DOCTYPE\" + this.declaration + \">\";\n  \t}\n  };\n\n  var items_Doctype = Doctype;\n\n  var Fragment_prototype_init = Fragment$init;\n\n  function Fragment$init(options) {\n  \tvar _this = this;\n\n  \tthis.owner = options.owner; // The item that owns this fragment - an element, section, partial, or attribute\n  \tthis.parent = this.owner.parentFragment;\n\n  \t// inherited properties\n  \tthis.root = options.root;\n  \tthis.pElement = options.pElement;\n  \tthis.context = options.context;\n  \tthis.index = options.index;\n  \tthis.key = options.key;\n  \tthis.registeredIndexRefs = [];\n\n  \t// encapsulated styles should be inherited until they get applied by an element\n  \tthis.cssIds = \"cssIds\" in options ? options.cssIds : this.parent ? this.parent.cssIds : null;\n\n  \tthis.items = options.template.map(function (template, i) {\n  \t\treturn createItem({\n  \t\t\tparentFragment: _this,\n  \t\t\tpElement: options.pElement,\n  \t\t\ttemplate: template,\n  \t\t\tindex: i\n  \t\t});\n  \t});\n\n  \tthis.value = this.argsList = null;\n  \tthis.dirtyArgs = this.dirtyValue = true;\n\n  \tthis.bound = true;\n  }\n\n  function createItem(options) {\n  \tif (typeof options.template === \"string\") {\n  \t\treturn new items_Text(options);\n  \t}\n\n  \tswitch (options.template.t) {\n  \t\tcase YIELDER:\n  \t\t\treturn new items_Yielder(options);\n  \t\tcase INTERPOLATOR:\n  \t\t\treturn new items_Interpolator(options);\n  \t\tcase SECTION:\n  \t\t\treturn new _Section(options);\n  \t\tcase TRIPLE:\n  \t\t\treturn new _Triple(options);\n  \t\tcase ELEMENT:\n  \t\t\tvar constructor = undefined;\n  \t\t\tif (constructor = Component_getComponent(options.parentFragment.root, options.template.e)) {\n  \t\t\t\treturn new _Component(options, constructor);\n  \t\t\t}\n  \t\t\treturn new _Element(options);\n  \t\tcase PARTIAL:\n  \t\t\treturn new _Partial(options);\n  \t\tcase COMMENT:\n  \t\t\treturn new items_Comment(options);\n  \t\tcase DOCTYPE:\n  \t\t\treturn new items_Doctype(options);\n\n  \t\tdefault:\n  \t\t\tthrow new Error(\"Something very strange happened. Please file an issue at https://github.com/ractivejs/ractive/issues. Thanks!\");\n  \t}\n  }\n\n  var Fragment_prototype_rebind = Fragment$rebind;\n  function Fragment$rebind(oldKeypath, newKeypath) {\n\n  \t// assign new context keypath if needed\n  \tif (!this.owner || this.owner.hasContext) {\n  \t\tassignNewKeypath(this, \"context\", oldKeypath, newKeypath);\n  \t}\n\n  \tthis.items.forEach(function (item) {\n  \t\tif (item.rebind) {\n  \t\t\titem.rebind(oldKeypath, newKeypath);\n  \t\t}\n  \t});\n  }\n\n  var Fragment_prototype_render = Fragment$render;\n\n  function Fragment$render() {\n  \tvar result;\n\n  \tif (this.items.length === 1) {\n  \t\tresult = this.items[0].render();\n  \t} else {\n  \t\tresult = document.createDocumentFragment();\n\n  \t\tthis.items.forEach(function (item) {\n  \t\t\tresult.appendChild(item.render());\n  \t\t});\n  \t}\n\n  \tthis.rendered = true;\n  \treturn result;\n  }\n\n  var Fragment_prototype_toString = Fragment$toString;\n\n  function Fragment$toString(escape) {\n  \tif (!this.items) {\n  \t\treturn \"\";\n  \t}\n\n  \treturn this.items.map(escape ? toEscapedString : Fragment_prototype_toString__toString).join(\"\");\n  }\n\n  function Fragment_prototype_toString__toString(item) {\n  \treturn item.toString();\n  }\n\n  function toEscapedString(item) {\n  \treturn item.toString(true);\n  }\n\n  var Fragment_prototype_unbind = Fragment$unbind;\n\n  function Fragment$unbind() {\n  \tif (!this.bound) {\n  \t\treturn;\n  \t}\n\n  \tthis.items.forEach(unbindItem);\n  \tthis.bound = false;\n  }\n\n  function unbindItem(item) {\n  \tif (item.unbind) {\n  \t\titem.unbind();\n  \t}\n  }\n\n  var Fragment_prototype_unrender = Fragment$unrender;\n\n  function Fragment$unrender(shouldDestroy) {\n  \tif (!this.rendered) {\n  \t\tthrow new Error(\"Attempted to unrender a fragment that was not rendered\");\n  \t}\n\n  \tthis.items.forEach(function (i) {\n  \t\treturn i.unrender(shouldDestroy);\n  \t});\n  \tthis.rendered = false;\n  }\n\n  var Fragment = function (options) {\n  \tthis.init(options);\n  };\n\n  Fragment.prototype = {\n  \tbubble: prototype_bubble,\n  \tdetach: Fragment_prototype_detach,\n  \tfind: Fragment_prototype_find,\n  \tfindAll: Fragment_prototype_findAll,\n  \tfindAllComponents: Fragment_prototype_findAllComponents,\n  \tfindComponent: Fragment_prototype_findComponent,\n  \tfindNextNode: prototype_findNextNode,\n  \tfirstNode: prototype_firstNode,\n  \tgetArgsList: getArgsList,\n  \tgetNode: getNode,\n  \tgetValue: prototype_getValue,\n  \tinit: Fragment_prototype_init,\n  \trebind: Fragment_prototype_rebind,\n  \tregisterIndexRef: function (idx) {\n  \t\tvar idxs = this.registeredIndexRefs;\n  \t\tif (idxs.indexOf(idx) === -1) {\n  \t\t\tidxs.push(idx);\n  \t\t}\n  \t},\n  \trender: Fragment_prototype_render,\n  \ttoString: Fragment_prototype_toString,\n  \tunbind: Fragment_prototype_unbind,\n  \tunregisterIndexRef: function (idx) {\n  \t\tvar idxs = this.registeredIndexRefs;\n  \t\tidxs.splice(idxs.indexOf(idx), 1);\n  \t},\n  \tunrender: Fragment_prototype_unrender\n  };\n\n  var virtualdom_Fragment = Fragment;\n\n  var prototype_reset = Ractive$reset;\n  var shouldRerender = [\"template\", \"partials\", \"components\", \"decorators\", \"events\"],\n      resetHook = new hooks_Hook(\"reset\");\n  function Ractive$reset(data) {\n  \tvar promise, wrapper, changes, i, rerender;\n\n  \tdata = data || {};\n\n  \tif (typeof data !== \"object\") {\n  \t\tthrow new Error(\"The reset method takes either no arguments, or an object containing new data\");\n  \t}\n\n  \t// If the root object is wrapped, try and use the wrapper's reset value\n  \tif ((wrapper = this.viewmodel.wrapped[\"\"]) && wrapper.reset) {\n  \t\tif (wrapper.reset(data) === false) {\n  \t\t\t// reset was rejected, we need to replace the object\n  \t\t\tthis.viewmodel.reset(data);\n  \t\t}\n  \t} else {\n  \t\tthis.viewmodel.reset(data);\n  \t}\n\n  \t// reset config items and track if need to rerender\n  \tchanges = config_config.reset(this);\n\n  \ti = changes.length;\n  \twhile (i--) {\n  \t\tif (shouldRerender.indexOf(changes[i]) > -1) {\n  \t\t\trerender = true;\n  \t\t\tbreak;\n  \t\t}\n  \t}\n\n  \tif (rerender) {\n  \t\tvar component = undefined;\n\n  \t\tthis.viewmodel.mark(rootKeypath);\n\n  \t\t// Is this is a component, we need to set the `shouldDestroy`\n  \t\t// flag, otherwise it will assume by default that a parent node\n  \t\t// will be detached, and therefore it doesn't need to bother\n  \t\t// detaching its own nodes\n  \t\tif (component = this.component) {\n  \t\t\tcomponent.shouldDestroy = true;\n  \t\t}\n\n  \t\tthis.unrender();\n\n  \t\tif (component) {\n  \t\t\tcomponent.shouldDestroy = false;\n  \t\t}\n\n  \t\t// If the template changed, we need to destroy the parallel DOM\n  \t\t// TODO if we're here, presumably it did?\n  \t\tif (this.fragment.template !== this.template) {\n  \t\t\tthis.fragment.unbind();\n\n  \t\t\tthis.fragment = new virtualdom_Fragment({\n  \t\t\t\ttemplate: this.template,\n  \t\t\t\troot: this,\n  \t\t\t\towner: this\n  \t\t\t});\n  \t\t}\n\n  \t\tpromise = this.render(this.el, this.anchor);\n  \t} else {\n  \t\tpromise = global_runloop.start(this, true);\n  \t\tthis.viewmodel.mark(rootKeypath);\n  \t\tglobal_runloop.end();\n  \t}\n\n  \tresetHook.fire(this, data);\n\n  \treturn promise;\n  }\n\n  var resetPartial = function (name, partial) {\n  \tvar promise,\n  \t    collection = [];\n\n  \tfunction collect(source, dest, ractive) {\n  \t\t// if this is a component and it has its own partial, bail\n  \t\tif (ractive && ractive.partials[name]) return;\n\n  \t\tsource.forEach(function (item) {\n  \t\t\t// queue to rerender if the item is a partial and the current name matches\n  \t\t\tif (item.type === PARTIAL && item.getPartialName() === name) {\n  \t\t\t\tdest.push(item);\n  \t\t\t}\n\n  \t\t\t// if it has a fragment, process its items\n  \t\t\tif (item.fragment) {\n  \t\t\t\tcollect(item.fragment.items, dest, ractive);\n  \t\t\t}\n\n  \t\t\t// or if it has fragments\n  \t\t\tif (isArray(item.fragments)) {\n  \t\t\t\tcollect(item.fragments, dest, ractive);\n  \t\t\t}\n\n  \t\t\t// or if it is itself a fragment, process its items\n  \t\t\telse if (isArray(item.items)) {\n  \t\t\t\tcollect(item.items, dest, ractive);\n  \t\t\t}\n\n  \t\t\t// or if it is a component, step in and process its items\n  \t\t\telse if (item.type === COMPONENT && item.instance) {\n  \t\t\t\tcollect(item.instance.fragment.items, dest, item.instance);\n  \t\t\t}\n\n  \t\t\t// if the item is an element, process its attributes too\n  \t\t\tif (item.type === ELEMENT) {\n  \t\t\t\tif (isArray(item.attributes)) {\n  \t\t\t\t\tcollect(item.attributes, dest, ractive);\n  \t\t\t\t}\n\n  \t\t\t\tif (isArray(item.conditionalAttributes)) {\n  \t\t\t\t\tcollect(item.conditionalAttributes, dest, ractive);\n  \t\t\t\t}\n  \t\t\t}\n  \t\t});\n  \t}\n\n  \tcollect(this.fragment.items, collection);\n  \tthis.partials[name] = partial;\n\n  \tpromise = global_runloop.start(this, true);\n\n  \tcollection.forEach(function (item) {\n  \t\titem.value = undefined;\n  \t\titem.setValue(name);\n  \t});\n\n  \tglobal_runloop.end();\n\n  \treturn promise;\n  };\n\n  // TODO should resetTemplate be asynchronous? i.e. should it be a case\n  // of outro, update template, intro? I reckon probably not, since that\n  // could be achieved with unrender-resetTemplate-render. Also, it should\n  // conceptually be similar to resetPartial, which couldn't be async\n\n  var resetTemplate = Ractive$resetTemplate;\n  function Ractive$resetTemplate(template) {\n  \tvar transitionsEnabled, component;\n\n  \ttemplate_template.init(null, this, { template: template });\n\n  \ttransitionsEnabled = this.transitionsEnabled;\n  \tthis.transitionsEnabled = false;\n\n  \t// Is this is a component, we need to set the `shouldDestroy`\n  \t// flag, otherwise it will assume by default that a parent node\n  \t// will be detached, and therefore it doesn't need to bother\n  \t// detaching its own nodes\n  \tif (component = this.component) {\n  \t\tcomponent.shouldDestroy = true;\n  \t}\n\n  \tthis.unrender();\n\n  \tif (component) {\n  \t\tcomponent.shouldDestroy = false;\n  \t}\n\n  \t// remove existing fragment and create new one\n  \tthis.fragment.unbind();\n  \tthis.fragment = new virtualdom_Fragment({\n  \t\ttemplate: this.template,\n  \t\troot: this,\n  \t\towner: this\n  \t});\n\n  \tthis.render(this.el, this.anchor);\n\n  \tthis.transitionsEnabled = transitionsEnabled;\n  }\n\n  var reverse = makeArrayMethod(\"reverse\");\n\n  var Ractive_prototype_set = Ractive$set;\n\n  function Ractive$set(keypath, value) {\n  \tvar map, promise;\n\n  \tpromise = global_runloop.start(this, true);\n\n  \t// Set multiple keypaths in one go\n  \tif (isObject(keypath)) {\n  \t\tmap = keypath;\n\n  \t\tfor (keypath in map) {\n  \t\t\tif (map.hasOwnProperty(keypath)) {\n  \t\t\t\tvalue = map[keypath];\n  \t\t\t\tset(this, keypath, value);\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \t// Set a single keypath\n  \telse {\n  \t\tset(this, keypath, value);\n  \t}\n\n  \tglobal_runloop.end();\n\n  \treturn promise;\n  }\n\n  function set(ractive, keypath, value) {\n  \tkeypath = getKeypath(normalise(keypath));\n\n  \tif (keypath.isPattern) {\n  \t\tgetMatchingKeypaths(ractive, keypath).forEach(function (keypath) {\n  \t\t\tractive.viewmodel.set(keypath, value);\n  \t\t});\n  \t} else {\n  \t\tractive.viewmodel.set(keypath, value);\n  \t}\n  }\n\n  var shift = makeArrayMethod(\"shift\");\n\n  var prototype_sort = makeArrayMethod(\"sort\");\n\n  var splice = makeArrayMethod(\"splice\");\n\n  var subtract = Ractive$subtract;\n  function Ractive$subtract(keypath, d) {\n  \treturn shared_add(this, keypath, d === undefined ? -1 : -d);\n  }\n\n  // Teardown. This goes through the root fragment and all its children, removing observers\n  // and generally cleaning up after itself\n\n  var Ractive_prototype_teardown = Ractive$teardown;\n\n  var Ractive_prototype_teardown__teardownHook = new hooks_Hook(\"teardown\");\n  function Ractive$teardown() {\n  \tvar promise;\n\n  \tthis.fragment.unbind();\n  \tthis.viewmodel.teardown();\n\n  \tthis._observers.forEach(cancel);\n\n  \tif (this.fragment.rendered && this.el.__ractive_instances__) {\n  \t\tremoveFromArray(this.el.__ractive_instances__, this);\n  \t}\n\n  \tthis.shouldDestroy = true;\n  \tpromise = this.fragment.rendered ? this.unrender() : utils_Promise.resolve();\n\n  \tRactive_prototype_teardown__teardownHook.fire(this);\n\n  \tthis._boundFunctions.forEach(deleteFunctionCopy);\n\n  \treturn promise;\n  }\n\n  function deleteFunctionCopy(bound) {\n  \tdelete bound.fn[bound.prop];\n  }\n\n  var toggle = Ractive$toggle;\n  function Ractive$toggle(keypath) {\n  \tvar _this = this;\n\n  \tif (typeof keypath !== \"string\") {\n  \t\tthrow new TypeError(badArguments);\n  \t}\n\n  \tvar changes = undefined;\n\n  \tif (/\\*/.test(keypath)) {\n  \t\tchanges = {};\n\n  \t\tgetMatchingKeypaths(this, getKeypath(normalise(keypath))).forEach(function (keypath) {\n  \t\t\tchanges[keypath.str] = !_this.viewmodel.get(keypath);\n  \t\t});\n\n  \t\treturn this.set(changes);\n  \t}\n\n  \treturn this.set(keypath, !this.get(keypath));\n  }\n\n  var toHTML = Ractive$toHTML;\n\n  function Ractive$toHTML() {\n  \treturn this.fragment.toString(true);\n  }\n\n  var Ractive_prototype_unrender = Ractive$unrender;\n  var unrenderHook = new hooks_Hook(\"unrender\");\n  function Ractive$unrender() {\n  \tvar promise, shouldDestroy;\n\n  \tif (!this.fragment.rendered) {\n  \t\twarnIfDebug(\"ractive.unrender() was called on a Ractive instance that was not rendered\");\n  \t\treturn utils_Promise.resolve();\n  \t}\n\n  \tpromise = global_runloop.start(this, true);\n\n  \t// If this is a component, and the component isn't marked for destruction,\n  \t// don't detach nodes from the DOM unnecessarily\n  \tshouldDestroy = !this.component || this.component.shouldDestroy || this.shouldDestroy;\n\n  \t// Cancel any animations in progress\n  \twhile (this._animations[0]) {\n  \t\tthis._animations[0].stop(); // it will remove itself from the index\n  \t}\n\n  \tthis.fragment.unrender(shouldDestroy);\n\n  \tremoveFromArray(this.el.__ractive_instances__, this);\n\n  \tunrenderHook.fire(this);\n\n  \tglobal_runloop.end();\n  \treturn promise;\n  }\n\n  var unshift = makeArrayMethod(\"unshift\");\n\n  var Ractive_prototype_update = Ractive$update;\n  var updateHook = new hooks_Hook(\"update\");\n  function Ractive$update(keypath) {\n  \tvar promise;\n\n  \tkeypath = getKeypath(keypath) || rootKeypath;\n\n  \tpromise = global_runloop.start(this, true);\n  \tthis.viewmodel.mark(keypath);\n  \tglobal_runloop.end();\n\n  \tupdateHook.fire(this, keypath);\n\n  \treturn promise;\n  }\n\n  var prototype_updateModel = Ractive$updateModel;\n\n  function Ractive$updateModel(keypath, cascade) {\n  \tvar values, key, bindings;\n\n  \tif (typeof keypath === \"string\" && !cascade) {\n  \t\tbindings = this._twowayBindings[keypath];\n  \t} else {\n  \t\tbindings = [];\n\n  \t\tfor (key in this._twowayBindings) {\n  \t\t\tif (!keypath || getKeypath(key).equalsOrStartsWith(keypath)) {\n  \t\t\t\t// TODO is this right?\n  \t\t\t\tbindings.push.apply(bindings, this._twowayBindings[key]);\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \tvalues = consolidate(this, bindings);\n  \treturn this.set(values);\n  }\n\n  function consolidate(ractive, bindings) {\n  \tvar values = {},\n  \t    checkboxGroups = [];\n\n  \tbindings.forEach(function (b) {\n  \t\tvar oldValue, newValue;\n\n  \t\t// special case - radio name bindings\n  \t\tif (b.radioName && !b.element.node.checked) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\t// special case - checkbox name bindings come in groups, so\n  \t\t// we want to get the value once at most\n  \t\tif (b.checkboxName) {\n  \t\t\tif (!checkboxGroups[b.keypath.str] && !b.changed()) {\n  \t\t\t\tcheckboxGroups.push(b.keypath);\n  \t\t\t\tcheckboxGroups[b.keypath.str] = b;\n  \t\t\t}\n\n  \t\t\treturn;\n  \t\t}\n\n  \t\toldValue = b.attribute.value;\n  \t\tnewValue = b.getValue();\n\n  \t\tif (arrayContentsMatch(oldValue, newValue)) {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tif (!isEqual(oldValue, newValue)) {\n  \t\t\tvalues[b.keypath.str] = newValue;\n  \t\t}\n  \t});\n\n  \t// Handle groups of `<input type='checkbox' name='{{foo}}' ...>`\n  \tif (checkboxGroups.length) {\n  \t\tcheckboxGroups.forEach(function (keypath) {\n  \t\t\tvar binding, oldValue, newValue;\n\n  \t\t\tbinding = checkboxGroups[keypath.str]; // one to represent the entire group\n  \t\t\toldValue = binding.attribute.value;\n  \t\t\tnewValue = binding.getValue();\n\n  \t\t\tif (!arrayContentsMatch(oldValue, newValue)) {\n  \t\t\t\tvalues[keypath.str] = newValue;\n  \t\t\t}\n  \t\t});\n  \t}\n\n  \treturn values;\n  }\n\n  var prototype = {\n  \tadd: prototype_add,\n  \tanimate: prototype_animate,\n  \tdetach: prototype_detach,\n  \tfind: prototype_find,\n  \tfindAll: prototype_findAll,\n  \tfindAllComponents: prototype_findAllComponents,\n  \tfindComponent: prototype_findComponent,\n  \tfindContainer: findContainer,\n  \tfindParent: findParent,\n  \tfire: prototype_fire,\n  \tget: prototype_get,\n  \tinsert: insert,\n  \tmerge: prototype_merge,\n  \tobserve: observe,\n  \tobserveOnce: observeOnce,\n  \toff: off,\n  \ton: on,\n  \tonce: once,\n  \tpop: pop,\n  \tpush: push,\n  \trender: prototype_render,\n  \treset: prototype_reset,\n  \tresetPartial: resetPartial,\n  \tresetTemplate: resetTemplate,\n  \treverse: reverse,\n  \tset: Ractive_prototype_set,\n  \tshift: shift,\n  \tsort: prototype_sort,\n  \tsplice: splice,\n  \tsubtract: subtract,\n  \tteardown: Ractive_prototype_teardown,\n  \ttoggle: toggle,\n  \ttoHTML: toHTML,\n  \ttoHtml: toHTML,\n  \tunrender: Ractive_prototype_unrender,\n  \tunshift: unshift,\n  \tupdate: Ractive_prototype_update,\n  \tupdateModel: prototype_updateModel\n  };\n\n  var wrapMethod = function (method, superMethod, force) {\n\n  \tif (force || needsSuper(method, superMethod)) {\n\n  \t\treturn function () {\n\n  \t\t\tvar hasSuper = (\"_super\" in this),\n  \t\t\t    _super = this._super,\n  \t\t\t    result;\n\n  \t\t\tthis._super = superMethod;\n\n  \t\t\tresult = method.apply(this, arguments);\n\n  \t\t\tif (hasSuper) {\n  \t\t\t\tthis._super = _super;\n  \t\t\t}\n\n  \t\t\treturn result;\n  \t\t};\n  \t} else {\n  \t\treturn method;\n  \t}\n  };\n\n  function needsSuper(method, superMethod) {\n  \treturn typeof superMethod === \"function\" && /_super/.test(method);\n  }\n\n  var unwrapExtended = unwrap;\n\n  function unwrap(Child) {\n  \tvar options = {};\n\n  \twhile (Child) {\n  \t\taddRegistries(Child, options);\n  \t\taddOtherOptions(Child, options);\n\n  \t\tif (Child._Parent !== _Ractive) {\n  \t\t\tChild = Child._Parent;\n  \t\t} else {\n  \t\t\tChild = false;\n  \t\t}\n  \t}\n\n  \treturn options;\n  }\n\n  function addRegistries(Child, options) {\n  \tconfig_registries.forEach(function (r) {\n  \t\taddRegistry(r.useDefaults ? Child.prototype : Child, options, r.name);\n  \t});\n  }\n\n  function addRegistry(target, options, name) {\n  \tvar registry,\n  \t    keys = Object.keys(target[name]);\n\n  \tif (!keys.length) {\n  \t\treturn;\n  \t}\n\n  \tif (!(registry = options[name])) {\n  \t\tregistry = options[name] = {};\n  \t}\n\n  \tkeys.filter(function (key) {\n  \t\treturn !(key in registry);\n  \t}).forEach(function (key) {\n  \t\treturn registry[key] = target[name][key];\n  \t});\n  }\n\n  function addOtherOptions(Child, options) {\n  \tObject.keys(Child.prototype).forEach(function (key) {\n  \t\tif (key === \"computed\") {\n  \t\t\treturn;\n  \t\t}\n\n  \t\tvar value = Child.prototype[key];\n\n  \t\tif (!(key in options)) {\n  \t\t\toptions[key] = value._method ? value._method : value;\n  \t\t}\n\n  \t\t// is it a wrapped function?\n  \t\telse if (typeof options[key] === \"function\" && typeof value === \"function\" && options[key]._method) {\n\n  \t\t\tvar result = undefined,\n  \t\t\t    needsSuper = value._method;\n\n  \t\t\tif (needsSuper) {\n  \t\t\t\tvalue = value._method;\n  \t\t\t}\n\n  \t\t\t// rewrap bound directly to parent fn\n  \t\t\tresult = wrapMethod(options[key]._method, value);\n\n  \t\t\tif (needsSuper) {\n  \t\t\t\tresult._method = result;\n  \t\t\t}\n\n  \t\t\toptions[key] = result;\n  \t\t}\n  \t});\n  }\n\n  var _extend = _extend__extend;\n\n  function _extend__extend() {\n  \tfor (var _len = arguments.length, options = Array(_len), _key = 0; _key < _len; _key++) {\n  \t\toptions[_key] = arguments[_key];\n  \t}\n\n  \tif (!options.length) {\n  \t\treturn extendOne(this);\n  \t} else {\n  \t\treturn options.reduce(extendOne, this);\n  \t}\n  }\n\n  function extendOne(Parent) {\n  \tvar options = arguments[1] === undefined ? {} : arguments[1];\n\n  \tvar Child, proto;\n\n  \t// if we're extending with another Ractive instance...\n  \t//\n  \t//   var Human = Ractive.extend(...), Spider = Ractive.extend(...);\n  \t//   var Spiderman = Human.extend( Spider );\n  \t//\n  \t// ...inherit prototype methods and default options as well\n  \tif (options.prototype instanceof _Ractive) {\n  \t\toptions = unwrapExtended(options);\n  \t}\n\n  \tChild = function (options) {\n  \t\tif (!(this instanceof Child)) return new Child(options);\n  \t\tinitialise(this, options);\n  \t};\n\n  \tproto = create(Parent.prototype);\n  \tproto.constructor = Child;\n\n  \t// Static properties\n  \tdefineProperties(Child, {\n  \t\t// alias prototype as defaults\n  \t\tdefaults: { value: proto },\n\n  \t\t// extendable\n  \t\textend: { value: _extend__extend, writable: true, configurable: true },\n\n  \t\t// Parent - for IE8, can't use Object.getPrototypeOf\n  \t\t_Parent: { value: Parent }\n  \t});\n\n  \t// extend configuration\n  \tconfig_config.extend(Parent, proto, options);\n\n  \tcustom_data.extend(Parent, proto, options);\n\n  \tif (options.computed) {\n  \t\tproto.computed = utils_object__extend(create(Parent.prototype.computed), options.computed);\n  \t}\n\n  \tChild.prototype = proto;\n\n  \treturn Child;\n  }\n\n  var getNodeInfo = function (node) {\n  \tvar info = {},\n  \t    priv,\n  \t    indices;\n\n  \tif (!node || !(priv = node._ractive)) {\n  \t\treturn info;\n  \t}\n\n  \tinfo.ractive = priv.root;\n  \tinfo.keypath = priv.keypath.str;\n  \tinfo.index = {};\n\n  \t// find all index references and resolve them\n  \tif (indices = Resolvers_findIndexRefs(priv.proxy.parentFragment)) {\n  \t\tinfo.index = Resolvers_findIndexRefs.resolve(indices);\n  \t}\n\n  \treturn info;\n  };\n\n  var Ractive, properties;\n\n  // Main Ractive required object\n  Ractive = function (options) {\n  \tif (!(this instanceof Ractive)) return new Ractive(options);\n  \tinitialise(this, options);\n  };\n\n  // Ractive properties\n  properties = {\n\n  \t// debug flag\n  \tDEBUG: { writable: true, value: true },\n  \tDEBUG_PROMISES: { writable: true, value: true },\n\n  \t// static methods:\n  \textend: { value: _extend },\n  \tgetNodeInfo: { value: getNodeInfo },\n  \tparse: { value: parse },\n\n  \t// Namespaced constructors\n  \tPromise: { value: utils_Promise },\n\n  \t// support\n  \tsvg: { value: svg },\n  \tmagic: { value: environment__magic },\n\n  \t// version\n  \tVERSION: { value: \"0.7.3\" },\n\n  \t// Plugins\n  \tadaptors: { writable: true, value: {} },\n  \tcomponents: { writable: true, value: {} },\n  \tdecorators: { writable: true, value: {} },\n  \teasing: { writable: true, value: static_easing },\n  \tevents: { writable: true, value: {} },\n  \tinterpolators: { writable: true, value: static_interpolators },\n  \tpartials: { writable: true, value: {} },\n  \ttransitions: { writable: true, value: {} }\n  };\n\n  // Ractive properties\n  defineProperties(Ractive, properties);\n\n  Ractive.prototype = utils_object__extend(prototype, config_defaults);\n\n  Ractive.prototype.constructor = Ractive;\n\n  // alias prototype as defaults\n  Ractive.defaults = Ractive.prototype;\n\n  // Ractive.js makes liberal use of things like Array.prototype.indexOf. In\n  // older browsers, these are made available via a shim - here, we do a quick\n  // pre-flight check to make sure that either a) we're not in a shit browser,\n  // or b) we're using a Ractive-legacy.js build\n  var FUNCTION = \"function\";\n\n  if (typeof Date.now !== FUNCTION || typeof String.prototype.trim !== FUNCTION || typeof Object.keys !== FUNCTION || typeof Array.prototype.indexOf !== FUNCTION || typeof Array.prototype.forEach !== FUNCTION || typeof Array.prototype.map !== FUNCTION || typeof Array.prototype.filter !== FUNCTION || typeof window !== \"undefined\" && typeof window.addEventListener !== FUNCTION) {\n  \tthrow new Error(\"It looks like you're attempting to use Ractive.js in an older browser. You'll need to use one of the 'legacy builds' in order to continue - see http://docs.ractivejs.org/latest/legacy-builds for more information.\");\n  }\n\n  var _Ractive = Ractive;\n\n  return _Ractive;\n\n}));\n//# sourceMappingURL=ractive.runtime.js.map\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ractive/ractive.runtime.js\n ** module id = 47\n ** module chunks = 0\n **/"],"sourceRoot":""}